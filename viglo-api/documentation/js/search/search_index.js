var COMPODOC_SEARCH_INDEX = {
  index: {
    version: '2.3.9',
    fields: ['title', 'body'],
    fieldVectors: [
      ['title/classes/AWSS3.html', [0, 0.131, 1, 3.302]],
      [
        'body/classes/AWSS3.html',
        [
          0, 0.093, 1, 3.551, 2, 0.841, 3, 0.08, 4, 0.071, 5, 0.188, 6, 6.303, 7, 2.604, 8, 2.163,
          9, 3.458, 10, 0.249, 11, 0.755, 12, 2.907, 13, 4.71, 14, 4.71, 15, 1.43, 16, 2.803, 17,
          3.294, 18, 3.551, 19, 4.938, 20, 1.953, 21, 0.724, 22, 4.474, 23, 1.438, 24, 1.717, 25,
          0.012, 26, 4.474, 27, 0.587, 28, 4.749, 29, 2.974, 30, 3.918, 31, 1.034, 32, 2.974, 33,
          5.581, 34, 5.337, 35, 1.854, 36, 0.948, 37, 1.254, 38, 5.845, 39, 2.301, 40, 2.961, 41,
          3.551, 42, 2.974, 43, 3.918, 44, 4.269, 45, 1.736, 46, 3.551, 47, 2.974, 48, 3.551, 49,
          3.94, 50, 4.7, 51, 2.974, 52, 0.271, 53, 3.918, 54, 4.269, 55, 2.178, 56, 2.36, 57, 2.36,
          58, 2.36, 59, 3.918, 60, 2.604, 61, 2.36, 62, 2.178, 63, 1.808, 64, 2.178, 65, 0.08, 66,
          3.918, 67, 2.912, 68, 2.36, 69, 2.974, 70, 2.974, 71, 2.36, 72, 3.375, 73, 2.103, 74,
          1.679, 75, 2.604, 76, 2.604, 77, 4.749, 78, 5.239, 79, 1.912, 80, 2.604, 81, 3.294, 82,
          2.604, 83, 2.604, 84, 2.604, 85, 2.604, 86, 2.489, 87, 5.984, 88, 4.749, 89, 2.604, 90,
          4.383, 91, 2.087, 92, 3.551, 93, 2.604, 94, 2.604, 95, 2.604, 96, 2.36, 97, 2.604, 98,
          2.604, 99, 2.604, 100, 0.006, 101, 0.006,
        ],
      ],
      ['title/classes/AddManyToOne1731880851697.html', [0, 0.131, 102, 3.302]],
      [
        'body/classes/AddManyToOne1731880851697.html',
        [
          0, 0.135, 2, 1.216, 3, 0.116, 4, 0.103, 5, 0.103, 8, 2.818, 10, 0.361, 11, 0.984, 15,
          1.863, 16, 2.771, 17, 3.207, 21, 0.684, 23, 2.08, 24, 2.484, 25, 0.011, 27, 0.605, 31,
          0.576, 35, 1.806, 36, 1.172, 37, 1.221, 39, 1.863, 45, 2.749, 52, 0.182, 65, 0.116, 74,
          2.864, 81, 3.207, 100, 0.008, 101, 0.008, 102, 5.622, 103, 6.203, 104, 5.717, 105, 6.203,
          106, 3.766, 107, 5.245, 108, 4.641, 109, 4.625, 110, 4.625, 111, 4.301, 112, 4.625, 113,
          6.387, 114, 4.301, 115, 4.625, 116, 4.301, 117, 1.375, 118, 6.058, 119, 5.59, 120, 4.907,
          121, 5.245, 122, 6.058, 123, 6.203, 124, 5.102, 125, 4.625, 126, 3.072, 127, 4.625, 128,
          5.102, 129, 5.622, 130, 3.365, 131, 2.615,
        ],
      ],
      ['title/classes/AddteamMemberDto.html', [0, 0.131, 132, 2.844]],
      [
        'body/classes/AddteamMemberDto.html',
        [
          0, 0.211, 2, 1.511, 3, 0.143, 4, 0.128, 5, 0.128, 10, 0.448, 11, 1.133, 21, 0.553, 25,
          0.012, 27, 0.489, 52, 0.284, 65, 0.143, 100, 0.009, 101, 0.009, 132, 4.589, 133, 5.878,
          134, 3.695, 135, 4.677, 136, 5.018, 137, 2.421, 138, 1.225, 139, 2.39, 140, 7.092, 141,
          7.092, 142, 5.342, 143, 6.713, 144, 5.342, 145, 3.321, 146, 6.713, 147, 6.713, 148, 4.589,
          149, 5.342, 150, 5.342, 151, 6.713, 152, 2.792, 153, 3.248, 154, 2.073, 155, 2.303, 156,
          2.39, 157, 5.342, 158, 5.342,
        ],
      ],
      ['title/modules/AppModule.html', [159, 0.954, 160, 3.047]],
      [
        'body/modules/AppModule.html',
        [
          0, 0.099, 3, 0.085, 4, 0.076, 5, 0.076, 25, 0.012, 52, 0.353, 65, 0.085, 67, 1.821, 100,
          0.006, 101, 0.006, 159, 1.281, 160, 6.308, 161, 1.151, 162, 1.474, 163, 1.597, 164, 1.597,
          165, 1.474, 166, 2.365, 167, 1.597, 168, 2.776, 169, 2.776, 170, 5.121, 171, 4.719, 172,
          4.719, 173, 4.438, 174, 4.719, 175, 3.8, 176, 4.719, 177, 4.719, 178, 4.719, 179, 4.719,
          180, 4.719, 181, 4.719, 182, 4.719, 183, 4.438, 184, 4.719, 185, 3.8, 186, 2.365, 187,
          1.597, 188, 1.597, 189, 3.17, 190, 2.853, 191, 2.038, 192, 1.533, 193, 3.17, 194, 3.17,
          195, 3.17, 196, 3.17, 197, 3.17, 198, 3.17, 199, 3.17, 200, 3.17, 201, 0.685, 202, 3.17,
          203, 4.693, 204, 3.17, 205, 3.17, 206, 3.17, 207, 4.693, 208, 2.038, 209, 1.418, 210,
          3.17, 211, 3.17, 212, 1.927, 213, 3.17, 214, 3.17, 215, 3.17, 216, 3.17, 217, 3.17, 218,
          3.17, 219, 3.17, 220, 3.17, 221, 4.893, 222, 4.693, 223, 2.322, 224, 3.437, 225, 3.17,
          226, 3.17, 227, 3.17, 228, 3.17, 229, 3.17, 230, 2.516, 231, 3.17, 232, 3.17, 233, 3.17,
          234, 2.776, 235, 1.474, 236, 3.17, 237, 3.17, 238, 2.516, 239, 4.109, 240, 3.437, 241,
          4.693, 242, 3.17, 243, 3.17, 244, 3.17, 245, 1.668, 246, 2.776, 247, 2.776,
        ],
      ],
      ['title/controllers/AuthController.html', [248, 2.29, 249, 3.047]],
      [
        'body/controllers/AuthController.html',
        [
          0, 0.127, 3, 0.109, 4, 0.097, 5, 0.097, 10, 0.339, 12, 2.409, 15, 1.786, 16, 2.72, 20,
          1.468, 21, 0.662, 25, 0.012, 27, 0.511, 35, 1.731, 36, 0.885, 37, 1.171, 39, 2.046, 40,
          3.075, 52, 0.331, 65, 0.109, 67, 2.484, 73, 1.964, 74, 2.096, 79, 3.592, 86, 2.662, 91,
          2.168, 100, 0.007, 101, 0.007, 108, 3.892, 138, 1.468, 201, 0.873, 209, 1.81, 245, 2.128,
          248, 2.226, 249, 4.092, 250, 3.541, 251, 2.962, 252, 2.962, 253, 4.892, 254, 5.479, 255,
          4.892, 256, 4.045, 257, 5.624, 258, 4.045, 259, 4.045, 260, 6.401, 261, 5.587, 262, 4.045,
          263, 4.045, 264, 4.045, 265, 4.719, 266, 4.045, 267, 4.045, 268, 5.587, 269, 2.962, 270,
          2.962, 271, 3.541, 272, 4.045, 273, 3.892, 274, 3.541, 275, 4.045, 276, 3.541, 277, 2.5,
          278, 2.226, 279, 4.045, 280, 2.962, 281, 2.765, 282, 3.541, 283, 2.459, 284, 3.541, 285,
          4.045, 286, 2.324, 287, 4.045, 288, 4.045, 289, 3.397, 290, 5.605, 291, 4.045, 292, 3.541,
          293, 3.397, 294, 2.702, 295, 4.092, 296, 4.045, 297, 4.045, 298, 4.892, 299, 4.892, 300,
          4.045, 301, 4.045, 302, 4.045, 303, 3.21, 304, 4.045,
        ],
      ],
      ['title/guards/AuthJwtRefreshGuard.html', [305, 3.047, 306, 3.302]],
      [
        'body/guards/AuthJwtRefreshGuard.html',
        [
          0, 0.13, 3, 0.112, 4, 0.099, 5, 0.099, 8, 2.01, 10, 0.348, 12, 2.454, 15, 1.819, 16,
          2.357, 20, 2.067, 21, 0.672, 23, 2.01, 25, 0.012, 27, 0.594, 35, 2.012, 36, 1.028, 37,
          1.36, 39, 1.819, 45, 2.209, 52, 0.295, 63, 4.593, 65, 0.112, 67, 2.519, 73, 2.001, 74,
          2.136, 86, 2.7, 91, 2.71, 100, 0.008, 101, 0.008, 201, 0.897, 235, 1.932, 280, 3.044, 286,
          1.729, 289, 2.527, 293, 2.527, 294, 2.753, 306, 4.518, 307, 3.044, 308, 5.542, 309, 6.115,
          310, 3.639, 311, 5.542, 312, 4.984, 313, 3.639, 314, 5.995, 315, 3.74, 316, 4.156, 317,
          4.518, 318, 5.115, 319, 4.156, 320, 3.298, 321, 4.984, 322, 4.156, 323, 1.711, 324, 5.153,
          325, 2.841, 326, 3.639, 327, 3.298, 328, 4.755, 329, 3.639, 330, 3.298, 331, 3.639, 332,
          2.841, 333, 3.639, 334, 4.156, 335, 3.639, 336, 3.639, 337, 2.841, 338, 4.156, 339, 4.156,
          340, 3.298, 341, 4.156, 342, 5.693, 343, 4.156, 344, 4.984, 345, 3.298, 346, 1.328, 347,
          4.156,
        ],
      ],
      ['title/modules/AuthModule.html', [159, 0.954, 170, 2.844]],
      [
        'body/modules/AuthModule.html',
        [
          0, 0.151, 3, 0.129, 4, 0.115, 5, 0.115, 16, 1.745, 25, 0.012, 52, 0.333, 65, 0.129, 100,
          0.008, 101, 0.008, 159, 1.602, 161, 1.745, 162, 2.234, 163, 2.422, 164, 2.422, 165, 2.234,
          166, 3.519, 167, 3.519, 170, 5.717, 175, 4.336, 185, 4.336, 186, 3.161, 187, 2.422, 188,
          2.422, 190, 3.814, 201, 1.038, 235, 2.234, 245, 3.3, 249, 5.116, 273, 5.116, 274, 4.208,
          325, 3.285, 332, 3.285, 348, 4.208, 349, 4.208, 350, 4.806, 351, 4.208, 352, 4.806, 353,
          4.806, 354, 3.52, 355, 4.806, 356, 3.52, 357, 4.806, 358, 3.52, 359, 4.806, 360, 3.814,
          361, 4.806, 362, 4.208, 363, 4.208,
        ],
      ],
      ['title/injectables/AuthService.html', [273, 2.529, 323, 1.25]],
      [
        'body/injectables/AuthService.html',
        [
          0, 0.07, 3, 0.06, 4, 0.053, 5, 0.053, 10, 0.187, 12, 2.418, 15, 1.143, 16, 2.448, 17,
          1.227, 20, 1.298, 21, 0.651, 25, 0.012, 27, 0.576, 31, 1.057, 35, 1.855, 36, 1.035, 37,
          1.254, 39, 2.212, 45, 2.794, 52, 0.293, 65, 0.06, 67, 1.988, 72, 2.95, 73, 2.53, 74,
          2.246, 86, 1.862, 91, 2.838, 100, 0.005, 101, 0.005, 137, 1.689, 155, 0.961, 201, 0.481,
          209, 2.003, 212, 1.355, 221, 4.485, 235, 2.381, 253, 3.13, 254, 4.751, 255, 3.13, 265,
          3.501, 271, 1.951, 273, 2.173, 276, 1.951, 277, 2.292, 278, 1.227, 281, 1.523, 282, 1.951,
          283, 1.355, 286, 2.332, 292, 1.951, 294, 1.078, 298, 3.919, 299, 4.91, 303, 4.065, 313,
          1.951, 314, 4.751, 315, 3.041, 323, 1.074, 325, 1.523, 328, 3.278, 330, 2.837, 332, 2.443,
          333, 1.951, 337, 2.443, 346, 0.712, 360, 1.769, 362, 3.13, 363, 1.951, 364, 1.078, 365,
          1.951, 366, 5.122, 367, 3.575, 368, 3.575, 369, 4.476, 370, 3.041, 371, 3.824, 372, 2.228,
          373, 2.228, 374, 3.575, 375, 5.122, 376, 3.575, 377, 2.228, 378, 3.575, 379, 5.122, 380,
          4.065, 381, 6.537, 382, 5.122, 383, 5.122, 384, 3.833, 385, 3.575, 386, 2.228, 387, 3.13,
          388, 5.122, 389, 3.575, 390, 3.575, 391, 3.13, 392, 3.575, 393, 2.228, 394, 3.575, 395,
          2.228, 396, 2.485, 397, 3.575, 398, 2.228, 399, 5.122, 400, 3.575, 401, 1.637, 402, 3.575,
          403, 3.575, 404, 2.878, 405, 3.575, 406, 2.228, 407, 4.476, 408, 2.228, 409, 3.575, 410,
          3.575, 411, 3.575, 412, 1.632, 413, 1.632, 414, 1.769, 415, 1.632, 416, 0.836, 417, 1.172,
          418, 3.575, 419, 2.228, 420, 2.228, 421, 1.769, 422, 1.88, 423, 3.575, 424, 4.45, 425,
          2.228, 426, 2.228, 427, 2.228, 428, 1.523, 429, 1.078, 430, 3.575, 431, 3.575, 432, 2.228,
          433, 1.769, 434, 2.228, 435, 1.523, 436, 2.228, 437, 2.228, 438, 3.575, 439, 2.228, 440,
          2.228, 441, 3.575, 442, 3.575, 443, 2.228, 444, 2.228, 445, 5.608, 446, 2.228, 447, 2.228,
          448, 2.228, 449, 2.228, 450, 1.355, 451, 2.228, 452, 1.951, 453, 2.228, 454, 2.228, 455,
          3.575, 456, 2.228, 457, 3.752, 458, 2.228, 459, 2.228, 460, 2.228, 461, 2.228, 462, 2.228,
          463, 2.228, 464, 2.228, 465, 3.575, 466, 2.228,
        ],
      ],
      ['title/classes/CreateCustomerDto.html', [0, 0.131, 467, 2.674]],
      [
        'body/classes/CreateCustomerDto.html',
        [
          0, 0.131, 2, 1.18, 3, 0.112, 4, 0.1, 5, 0.1, 10, 0.35, 11, 0.964, 21, 0.845, 25, 0.012,
          27, 0.747, 31, 1.117, 36, 1.03, 37, 1.777, 52, 0.275, 65, 0.112, 100, 0.008, 101, 0.008,
          422, 3.423, 428, 4.448, 467, 3.67, 468, 3.981, 469, 6.534, 470, 3.312, 471, 4.766, 472,
          5.164, 473, 3.758, 474, 5.164, 475, 5.164, 476, 3.581, 477, 5.697, 478, 5.164, 479, 4.448,
          480, 3.654, 481, 4.174, 482, 3.654, 483, 3.654, 484, 4.448, 485, 3.654, 486, 4.448, 487,
          3.654, 488, 3.654, 489, 3.654, 490, 3.654, 491, 3.654, 492, 4.999, 493, 4.999, 494, 4.999,
          495, 3.654, 496, 5.697, 497, 3.654, 498, 3.057, 499, 3.654, 500, 3.654,
        ],
      ],
      ['title/classes/CreateFileDto.html', [0, 0.131, 501, 3.047]],
      [
        'body/classes/CreateFileDto.html',
        [
          0, 0.206, 2, 1.853, 3, 0.176, 4, 0.157, 5, 0.157, 25, 0.011, 65, 0.176, 100, 0.01, 101,
          0.01, 501, 5.563, 502, 5.738, 503, 5.201,
        ],
      ],
      ['title/classes/CreatePartnerDto.html', [0, 0.131, 504, 2.674]],
      [
        'body/classes/CreatePartnerDto.html',
        [
          0, 0.206, 2, 1.459, 3, 0.139, 4, 0.123, 5, 0.123, 10, 0.433, 11, 1.109, 21, 0.68, 25,
          0.012, 27, 0.601, 31, 1.106, 36, 1.204, 52, 0.278, 65, 0.139, 100, 0.009, 101, 0.009, 138,
          1.506, 139, 2.938, 145, 3.279, 152, 3.005, 154, 2.002, 156, 2.938, 346, 2.431, 401, 2.431,
          504, 4.222, 505, 6.326, 506, 3.137, 507, 5.291, 508, 4.938, 509, 7.605, 510, 4.222, 511,
          4.518, 512, 4.095, 513, 3.976, 514, 3.527, 515, 3.527, 516, 3.137, 517, 4.518, 518, 3.527,
        ],
      ],
      ['title/classes/CreateSubscriptionDto.html', [0, 0.131, 519, 2.674]],
      [
        'body/classes/CreateSubscriptionDto.html',
        [
          0, 0.188, 2, 1.272, 3, 0.121, 4, 0.107, 5, 0.107, 10, 0.377, 11, 1.014, 21, 0.817, 25,
          0.012, 27, 0.723, 31, 1.099, 37, 1.719, 52, 0.19, 65, 0.121, 100, 0.008, 101, 0.008, 138,
          1.81, 152, 2.812, 154, 1.746, 468, 3.879, 469, 6.366, 513, 4.256, 519, 3.861, 520, 3.939,
          521, 6.761, 522, 6.761, 523, 6.761, 524, 5.92, 525, 6.761, 526, 6.761, 527, 6.761, 528,
          4.399, 529, 4.498, 530, 4.498, 531, 6.761, 532, 4.498, 533, 4.498, 534, 6.006, 535, 4.498,
          536, 4.498, 537, 4.498, 538, 3.305, 539, 4.498, 540, 4.498, 541, 4.971, 542, 6.006, 543,
          6.006,
        ],
      ],
      ['title/classes/CreateTeamDto.html', [0, 0.131, 544, 2.674]],
      [
        'body/classes/CreateTeamDto.html',
        [
          0, 0.224, 2, 1.67, 3, 0.159, 4, 0.141, 5, 0.141, 10, 0.495, 11, 1.206, 21, 0.611, 25,
          0.011, 27, 0.54, 31, 0.957, 36, 1.293, 52, 0.25, 65, 0.159, 100, 0.01, 101, 0.01, 134,
          3.93, 138, 1.354, 139, 2.641, 145, 2.545, 152, 2.97, 153, 3.589, 154, 2.291, 156, 3.195,
          544, 4.59, 545, 6.252, 546, 4.685, 547, 5.169,
        ],
      ],
      ['title/classes/CreateUserDto.html', [0, 0.131, 548, 2.674]],
      [
        'body/classes/CreateUserDto.html',
        [
          0, 0.177, 2, 1.156, 3, 0.11, 4, 0.098, 5, 0.098, 10, 0.343, 11, 0.95, 21, 0.666, 25,
          0.012, 27, 0.589, 31, 1.032, 37, 1.179, 52, 0.272, 65, 0.11, 100, 0.008, 101, 0.008, 138,
          1.29, 139, 2.518, 145, 3.635, 148, 5.362, 152, 2.677, 154, 1.586, 156, 2.518, 208, 2.627,
          209, 1.828, 422, 3.825, 435, 4.399, 450, 5.162, 510, 2.627, 513, 3.097, 514, 3.846, 515,
          2.793, 516, 2.485, 517, 3.578, 518, 2.793, 538, 2.249, 541, 2.627, 548, 3.617, 549, 6.071,
          550, 3.243, 551, 2.993, 552, 4.466, 553, 5.627, 554, 3.617, 555, 4.087, 556, 2.993, 557,
          5.746, 558, 3.846, 559, 2.993, 560, 2.993, 561, 4.121, 562, 2.993, 563, 3.846, 564, 2.993,
          565, 3.846, 566, 5.079, 567, 2.993, 568, 4.121, 569, 4.714, 570, 4.087, 571, 4.087, 572,
          3.578, 573, 3.243, 574, 2.993, 575, 4.121, 576, 2.993, 577, 2.993, 578, 2.793, 579, 2.993,
          580, 2.993, 581, 2.993,
        ],
      ],
      ['title/modules/CustomI18nModule.html', [159, 0.954, 171, 2.844]],
      [
        'body/modules/CustomI18nModule.html',
        [
          0, 0.177, 3, 0.151, 4, 0.135, 5, 0.135, 25, 0.011, 52, 0.293, 65, 0.151, 100, 0.009, 101,
          0.009, 159, 1.724, 161, 2.045, 162, 2.618, 163, 2.838, 164, 2.838, 165, 2.618, 166, 3.789,
          167, 3.789, 171, 5.684, 186, 3.496, 187, 2.838, 188, 2.838, 201, 1.216, 277, 3.847, 358,
          5.082, 582, 4.932, 583, 4.932, 584, 4.932, 585, 5.633, 586, 5.633,
        ],
      ],
      ['title/injectables/CustomI18nService.html', [277, 1.861, 323, 1.25]],
      [
        'body/injectables/CustomI18nService.html',
        [
          0, 0.166, 3, 0.142, 4, 0.126, 5, 0.126, 10, 0.443, 15, 2.131, 20, 1.919, 21, 0.69, 25,
          0.012, 27, 0.61, 31, 1.06, 35, 2.066, 36, 1.056, 37, 1.397, 39, 1.689, 52, 0.282, 65,
          0.142, 73, 1.857, 81, 2.909, 91, 2.051, 100, 0.009, 101, 0.009, 201, 1.141, 208, 3.397,
          209, 3.268, 238, 6.089, 239, 5.838, 277, 2.983, 286, 2.198, 323, 2.004, 364, 2.555, 587,
          4.627, 588, 6.668, 589, 4.627, 590, 7.672, 591, 5.285, 592, 6.668, 593, 7.305, 594, 5.285,
          595, 4.627, 596, 5.285, 597, 3.397, 598, 5.285, 599, 5.285, 600, 5.285,
        ],
      ],
      ['title/interfaces/CustomerAddressInterface.html', [479, 2.844, 601, 2.096]],
      [
        'body/interfaces/CustomerAddressInterface.html',
        [
          3, 0.146, 4, 0.13, 5, 0.13, 10, 0.457, 11, 1.147, 25, 0.011, 27, 0.745, 31, 1.167, 37,
          1.424, 65, 0.146, 100, 0.009, 101, 0.009, 468, 2.633, 479, 4.644, 601, 2.744, 602, 3.501,
          603, 3.989, 604, 4.768, 605, 4.715, 606, 4.715, 607, 6.79, 608, 6.79, 609, 4.715, 610,
          4.715,
        ],
      ],
      ['title/interfaces/CustomerMetadataInterface.html', [486, 2.844, 601, 2.096]],
      [
        'body/interfaces/CustomerMetadataInterface.html',
        [
          3, 0.169, 4, 0.15, 5, 0.15, 21, 0.65, 25, 0.011, 31, 1.091, 65, 0.169, 81, 4.078, 100,
          0.01, 101, 0.01, 468, 3.583, 486, 5.065, 601, 3.165, 602, 4.038, 603, 5.427, 611, 5.5,
          612, 6.281, 613, 6.281,
        ],
      ],
      ['title/classes/DigitalOceanSpaces.html', [0, 0.131, 614, 3.047]],
      [
        'body/classes/DigitalOceanSpaces.html',
        [
          0, 0.09, 2, 0.808, 3, 0.077, 4, 0.068, 5, 0.187, 8, 2.099, 9, 3.375, 10, 0.24, 11, 0.733,
          12, 2.863, 13, 4.596, 14, 4.596, 15, 1.387, 16, 2.779, 17, 3.227, 18, 3.445, 19, 4.863,
          20, 1.906, 21, 0.714, 23, 1.381, 24, 1.65, 25, 0.012, 27, 0.577, 28, 4.653, 30, 3.801, 31,
          1.025, 33, 3.845, 34, 1.953, 35, 1.817, 36, 0.929, 37, 1.229, 38, 5.78, 39, 2.273, 40,
          2.889, 41, 3.445, 43, 3.801, 44, 4.166, 45, 1.684, 46, 3.445, 48, 3.445, 49, 3.845, 50,
          4.618, 52, 0.267, 53, 3.801, 54, 4.166, 55, 2.092, 56, 2.267, 57, 2.267, 58, 2.267, 59,
          3.801, 60, 2.501, 61, 2.267, 62, 2.092, 63, 1.737, 64, 2.092, 65, 0.077, 66, 3.801, 67,
          2.882, 68, 2.267, 72, 3.317, 73, 2.061, 74, 1.629, 75, 2.501, 76, 2.501, 77, 4.653, 78,
          5.134, 79, 1.837, 80, 2.501, 81, 3.227, 82, 2.501, 83, 2.501, 84, 2.501, 85, 2.501, 86,
          2.439, 88, 4.653, 89, 2.501, 90, 4.294, 91, 2.037, 92, 3.445, 93, 2.501, 94, 2.501, 95,
          2.501, 96, 2.267, 97, 2.501, 98, 2.501, 99, 2.501, 100, 0.006, 101, 0.006, 294, 2.835,
          614, 3.179, 615, 6.226, 616, 2.501, 617, 4.341, 618, 4.341, 619, 2.857, 620, 2.857, 621,
          7.653, 622, 7.653, 623, 6.701, 624, 2.857, 625, 2.857, 626, 2.857, 627, 2.501, 628, 2.501,
          629, 2.501, 630, 2.501, 631, 2.501, 632, 2.501, 633, 2.501, 634, 2.501,
        ],
      ],
      ['title/entities/FileEntity.html', [635, 1.142, 636, 2.529]],
      [
        'body/entities/FileEntity.html',
        [
          0, 0.172, 3, 0.106, 4, 0.094, 5, 0.094, 10, 0.33, 11, 0.926, 12, 3.204, 16, 1.43, 20,
          1.43, 21, 0.743, 23, 2.653, 24, 3.168, 25, 0.012, 27, 0.578, 28, 5.009, 31, 0.996, 33,
          4.018, 34, 2.693, 36, 0.624, 44, 5.897, 52, 0.322, 54, 4.354, 55, 2.885, 61, 3.126, 62,
          2.885, 63, 2.395, 64, 2.885, 65, 0.106, 67, 2.884, 68, 4.354, 74, 1.478, 77, 3.126, 81,
          3.757, 86, 1.638, 88, 3.126, 90, 2.885, 91, 2.129, 92, 3.126, 96, 3.126, 100, 0.007, 101,
          0.007, 117, 1.259, 138, 1.565, 201, 0.851, 294, 1.905, 346, 2.017, 416, 1.478, 417, 2.072,
          627, 4.803, 628, 4.803, 629, 4.803, 630, 4.803, 631, 4.803, 632, 4.803, 633, 4.803, 634,
          4.803, 635, 1.505, 636, 3.335, 637, 2.365, 638, 3.449, 639, 6.312, 640, 5.977, 641, 5.897,
          642, 3.939, 643, 2.55, 644, 3.939, 645, 3.449, 646, 3.939, 647, 5.486, 648, 3.939, 649,
          3.939, 650, 2.885, 651, 5.486, 652, 2.886, 653, 1.905, 654, 2.275, 655, 1.762, 656, 2.454,
          657, 1.985, 658, 1.831, 659, 3.449, 660, 1.985, 661, 3.126, 662, 3.939, 663, 3.939, 664,
          3.939, 665, 3.939, 666, 3.939, 667, 3.939, 668, 3.939,
        ],
      ],
      ['title/interfaces/FileImplInterface.html', [9, 2.674, 601, 2.096]],
      [
        'body/interfaces/FileImplInterface.html',
        [
          3, 0.138, 4, 0.123, 5, 0.156, 9, 4.208, 10, 0.43, 15, 2.092, 17, 3.603, 18, 5.195, 19,
          4.794, 21, 0.786, 25, 0.011, 27, 0.695, 31, 1.138, 35, 2.352, 36, 1.202, 37, 1.59, 38,
          5.195, 39, 2.426, 41, 5.195, 45, 3.201, 46, 5.195, 48, 5.195, 49, 5.278, 50, 5.278, 65,
          0.138, 100, 0.009, 101, 0.009, 601, 2.586, 602, 3.3, 669, 4.494, 670, 6.546, 671, 5.133,
          672, 5.133, 673, 5.133, 674, 5.133, 675, 5.133,
        ],
      ],
      ['title/modules/FileModule.html', [159, 0.954, 172, 2.844]],
      [
        'body/modules/FileModule.html',
        [
          0, 0.161, 3, 0.138, 4, 0.123, 5, 0.123, 25, 0.012, 52, 0.339, 65, 0.138, 100, 0.009, 101,
          0.009, 159, 1.655, 161, 1.868, 162, 2.392, 163, 2.593, 164, 2.593, 165, 2.392, 166, 3.636,
          167, 3.636, 172, 5.572, 186, 3.304, 187, 2.593, 188, 2.593, 190, 3.129, 191, 3.308, 192,
          2.488, 201, 1.111, 245, 2.707, 246, 4.506, 247, 4.506, 358, 4.802, 614, 4.802, 623, 4.506,
          636, 3.129, 676, 4.506, 677, 4.506, 678, 4.506, 679, 5.808, 680, 5.146, 681, 5.146, 682,
          4.506, 683, 4.802, 684, 4.506, 685, 5.146, 686, 5.146,
        ],
      ],
      ['title/injectables/FileService.html', [323, 1.25, 679, 2.844]],
      [
        'body/injectables/FileService.html',
        [
          0, 0.08, 3, 0.068, 4, 0.061, 5, 0.178, 9, 3.54, 10, 0.213, 12, 1.707, 15, 1.266, 16,
          2.702, 17, 1.396, 19, 2.9, 20, 1.438, 21, 0.618, 25, 0.012, 27, 0.547, 31, 0.942, 34,
          4.676, 35, 1.851, 36, 0.946, 37, 1.251, 39, 2.187, 45, 2.888, 49, 3.568, 50, 4.374, 52,
          0.289, 56, 2.013, 65, 0.068, 67, 2.318, 72, 3.599, 73, 1.935, 74, 2.375, 81, 2.18, 86,
          2.484, 90, 1.857, 91, 2.456, 100, 0.005, 101, 0.005, 108, 2.962, 117, 0.811, 137, 1.816,
          155, 1.093, 192, 1.226, 201, 0.548, 286, 1.055, 289, 1.542, 293, 1.542, 294, 1.226, 323,
          1.19, 337, 3.764, 340, 3.143, 346, 1.76, 364, 1.226, 384, 1.734, 396, 1.935, 401, 1.76,
          416, 2.066, 417, 1.334, 552, 4.37, 636, 3.348, 679, 2.707, 682, 2.221, 683, 1.857, 684,
          2.221, 687, 2.221, 688, 3.96, 689, 3.96, 690, 3.96, 691, 4.872, 692, 2.536, 693, 3.54,
          694, 4.872, 695, 2.536, 696, 3.96, 697, 3.96, 698, 2.536, 699, 3.96, 700, 5.907, 701,
          7.19, 702, 5.506, 703, 6.33, 704, 6.33, 705, 3.96, 706, 3.96, 707, 3.96, 708, 5.43, 709,
          4.872, 710, 3.96, 711, 2.536, 712, 3.143, 713, 3.96, 714, 3.96, 715, 3.96, 716, 3.96, 717,
          2.536, 718, 3.468, 719, 3.96, 720, 3.96, 721, 3.96, 722, 2.536, 723, 6.33, 724, 6.33, 725,
          2.536, 726, 3.96, 727, 3.96, 728, 3.96, 729, 3.96, 730, 3.96, 731, 3.468, 732, 1.734, 733,
          2.013, 734, 2.536, 735, 2.536, 736, 2.013, 737, 2.536, 738, 2.536, 739, 2.536, 740, 2.536,
          741, 2.536, 742, 2.536, 743, 2.536, 744, 2.536, 745, 2.546, 746, 2.536, 747, 2.536, 748,
          2.536, 749, 2.536, 750, 5.506, 751, 4.872, 752, 2.536, 753, 3.96, 754, 4.872, 755, 3.96,
          756, 2.536, 757, 2.536, 758, 2.536, 759, 2.536, 760, 2.536, 761, 2.536, 762, 2.536, 763,
          2.536, 764, 2.536,
        ],
      ],
      ['title/classes/FollowPartnerDto.html', [0, 0.131, 765, 2.844]],
      [
        'body/classes/FollowPartnerDto.html',
        [
          0, 0.208, 2, 1.479, 3, 0.14, 4, 0.125, 5, 0.125, 10, 0.438, 11, 1.118, 21, 0.685, 25,
          0.012, 27, 0.606, 31, 1.024, 37, 1.388, 52, 0.28, 65, 0.14, 100, 0.009, 101, 0.009, 126,
          3.379, 137, 1.724, 138, 1.519, 139, 2.963, 145, 3.473, 152, 3.023, 153, 3.179, 154, 2.029,
          155, 2.254, 156, 2.963, 396, 2.328, 401, 2.117, 429, 3.515, 506, 3.179, 511, 4.578, 512,
          4.149, 554, 4.913, 765, 4.527, 766, 6.365, 767, 5.799, 768, 5.224, 769, 4.851,
        ],
      ],
      ['title/entities/FollowerEntity.html', [635, 1.142, 770, 2.402]],
      [
        'body/entities/FollowerEntity.html',
        [
          0, 0.143, 3, 0.122, 4, 0.109, 5, 0.109, 10, 0.382, 11, 1.022, 21, 0.704, 25, 0.012, 27,
          0.622, 36, 1.077, 52, 0.306, 65, 0.122, 100, 0.008, 101, 0.008, 117, 1.454, 126, 2.813,
          131, 2.767, 137, 2.39, 138, 1.559, 155, 1.962, 346, 2.531, 396, 2.727, 401, 2.48, 416,
          2.719, 417, 2.394, 429, 2.926, 538, 3.331, 635, 1.661, 637, 2.609, 643, 2.813, 653, 3.288,
          654, 3.927, 655, 2.036, 656, 2.708, 657, 2.293, 658, 2.115, 660, 2.293, 770, 3.495, 771,
          3.984, 772, 4.551, 773, 4.137, 774, 6.052, 775, 5.308, 776, 4.432, 777, 3.652, 778, 3.652,
          779, 5.299, 780, 4.551, 781, 6.052, 782, 5.299, 783, 4.551, 784, 3.984, 785, 3.611, 786,
          4.551, 787, 3.679,
        ],
      ],
      ['title/modules/FollowersModule.html', [159, 0.954, 173, 2.674]],
      [
        'body/modules/FollowersModule.html',
        [
          0, 0.167, 3, 0.143, 4, 0.127, 5, 0.127, 25, 0.012, 52, 0.342, 65, 0.143, 100, 0.009, 101,
          0.009, 159, 1.681, 161, 1.934, 162, 2.476, 163, 2.684, 164, 2.684, 165, 2.476, 166, 3.695,
          167, 3.695, 173, 5.281, 175, 2.932, 185, 2.932, 186, 3.377, 187, 2.684, 188, 2.684, 190,
          3.239, 191, 3.425, 192, 2.576, 201, 1.15, 354, 3.902, 356, 3.902, 770, 3.077, 788, 4.665,
          789, 4.665, 790, 4.665, 791, 5.488, 792, 5.328, 793, 4.665, 794, 5.328, 795, 5.328,
        ],
      ],
      ['title/injectables/FollowersService.html', [323, 1.25, 791, 2.674]],
      [
        'body/injectables/FollowersService.html',
        [
          0, 0.098, 3, 0.084, 4, 0.074, 5, 0.074, 10, 0.261, 12, 1.997, 15, 1.481, 16, 2.966, 20,
          1.682, 21, 0.735, 25, 0.012, 27, 0.65, 35, 2.201, 36, 1.125, 37, 1.489, 39, 2.193, 45,
          3.026, 52, 0.326, 65, 0.084, 67, 2.757, 73, 2.411, 74, 1.169, 86, 2.955, 91, 1.209, 100,
          0.006, 101, 0.006, 117, 0.996, 137, 2.599, 155, 1.343, 192, 1.506, 201, 0.673, 209, 2.474,
          277, 2.74, 278, 1.715, 283, 2.816, 286, 1.927, 315, 1.506, 323, 1.392, 364, 1.506, 370,
          1.506, 396, 2.871, 401, 2.647, 404, 3.555, 412, 2.281, 415, 2.281, 416, 2.957, 417, 1.639,
          693, 3.937, 732, 2.129, 733, 2.472, 765, 2.129, 770, 1.799, 791, 2.978, 793, 2.727, 796,
          2.727, 797, 4.632, 798, 4.632, 799, 4.632, 800, 4.632, 801, 5.53, 802, 3.115, 803, 3.115,
          804, 4.632, 805, 4.632, 806, 3.115, 807, 4.632, 808, 3.115, 809, 3.115, 810, 3.115, 811,
          4.632, 812, 3.115, 813, 4.632, 814, 3.115, 815, 3.115, 816, 3.115, 817, 2.472, 818, 2.281,
          819, 3.115, 820, 2.281, 821, 3.115, 822, 3.115, 823, 5.53, 824, 4.632, 825, 3.676, 826,
          4.632, 827, 4.389, 828, 3.115, 829, 3.115, 830, 3.115, 831, 3.115, 832, 3.115,
        ],
      ],
      ['title/classes/Init1731534812101.html', [0, 0.131, 833, 3.302]],
      [
        'body/classes/Init1731534812101.html',
        [
          0, 0.032, 2, 0.292, 3, 0.028, 4, 0.025, 5, 0.025, 8, 0.896, 10, 0.52, 11, 0.313, 15,
          0.592, 16, 1.431, 17, 3.893, 21, 0.261, 23, 3.643, 24, 0.596, 25, 0.009, 27, 0.485, 31,
          0.138, 35, 0.574, 36, 0.679, 37, 0.388, 39, 0.592, 45, 1.193, 52, 0.044, 65, 0.028, 71,
          0.819, 74, 3.177, 81, 4.267, 100, 0.002, 101, 0.002, 104, 5.181, 107, 2, 108, 2.396, 109,
          1.47, 110, 1.47, 112, 1.47, 113, 3.851, 115, 1.47, 117, 0.33, 118, 6.296, 119, 6.101, 120,
          1.976, 121, 5.614, 122, 6.622, 123, 1.622, 124, 0.904, 125, 5.614, 126, 3.173, 127, 5.614,
          128, 4.017, 129, 5.954, 130, 4.085, 131, 3.9, 230, 0.819, 240, 0.756, 346, 2.261, 422,
          0.975, 429, 3.334, 435, 0.706, 450, 0.628, 473, 0.596, 476, 1.02, 507, 1.357, 508, 1.266,
          578, 4.939, 605, 1.126, 606, 1.126, 609, 1.126, 610, 1.126, 659, 1.622, 768, 5.192, 779,
          1.622, 782, 1.622, 785, 3.128, 787, 3.838, 833, 2.44, 834, 2.692, 835, 0.904, 836, 1.032,
          837, 1.032, 838, 1.032, 839, 7.178, 840, 4.639, 841, 6.404, 842, 7.11, 843, 5.299, 844,
          5.299, 845, 5.299, 846, 4.639, 847, 5.299, 848, 4.639, 849, 5.658, 850, 7.074, 851, 1.032,
          852, 6.314, 853, 2.52, 854, 1.032, 855, 0.904, 856, 3.451, 857, 0.756, 858, 0.756, 859,
          1.266, 860, 1.853, 861, 1.266, 862, 0.819, 863, 0.819, 864, 0.756, 865, 2.207, 866, 1.032,
          867, 1.032, 868, 1.032, 869, 1.032, 870, 2.52, 871, 1.853, 872, 2.692, 873, 2.52, 874,
          1.032, 875, 0.904, 876, 0.904, 877, 2.692, 878, 1.266, 879, 1.032, 880, 1.032, 881, 2.52,
          882, 4.017, 883, 0.819, 884, 2.207, 885, 2.207, 886, 1.032, 887, 1.032, 888, 1.032, 889,
          1.032, 890, 1.032, 891, 1.032, 892, 2.886, 893, 1.032, 894, 1.622, 895, 1.032, 896, 0.904,
          897, 1.032, 898, 0.904, 899, 0.904, 900, 0.819, 901, 1.032, 902, 1.357, 903, 0.904, 904,
          1.032, 905, 1.032, 906, 2.692, 907, 1.032, 908, 1.032, 909, 2.533, 910, 3.128, 911, 3.128,
          912, 1.032, 913, 1.032, 914, 1.032, 915, 1.032, 916, 1.032, 917, 3.128, 918, 1.032, 919,
          1.191, 920, 0.904, 921, 1.032, 922, 2.886, 923, 2, 924, 1.032, 925, 0.904, 926, 1.032,
          927, 1.032, 928, 3.128, 929, 0.819, 930, 0.904, 931, 1.032, 932, 1.032, 933, 1.032, 934,
          1.032, 935, 4.017, 936, 3.641, 937, 1.032, 938, 1.032, 939, 1.032, 940, 4.017, 941, 1.032,
          942, 1.032, 943, 1.032, 944, 4.017, 945, 2.692, 946, 2.692, 947, 1.032, 948, 1.032, 949,
          1.032, 950, 4.017, 951, 1.032, 952, 1.032, 953, 1.032, 954, 2.44, 955, 4.017, 956, 1.622,
          957, 2.52, 958, 1.622, 959, 1.622, 960, 1.622, 961, 1.622, 962, 1.622, 963, 1.622, 964,
          1.622, 965, 1.032, 966, 1.622, 967, 1.032, 968, 1.622, 969, 1.622, 970, 1.622, 971, 1.032,
          972, 1.47, 973, 1.622, 974, 1.032, 975, 1.622, 976, 1.032, 977, 1.853, 978, 1.853, 979,
          1.853, 980, 1.853, 981, 1.853, 982, 1.622, 983, 1.032, 984, 1.622, 985, 1.032, 986, 1.853,
          987, 1.853, 988, 7.178, 989, 1.032, 990, 1.032, 991, 1.032, 992, 1.032, 993, 1.032, 994,
          1.032, 995, 1.032, 996, 1.032,
        ],
      ],
      ['title/interfaces/InvoiceSettingsInterface.html', [484, 2.844, 601, 2.096]],
      [
        'body/interfaces/InvoiceSettingsInterface.html',
        [
          3, 0.167, 4, 0.148, 5, 0.148, 10, 0.52, 11, 1.242, 25, 0.011, 27, 0.568, 31, 1.05, 37,
          1.541, 65, 0.167, 100, 0.01, 101, 0.01, 468, 2.999, 484, 5.027, 498, 4.542, 601, 3.125,
          602, 3.987, 603, 4.542, 997, 5.43, 998, 8.107,
        ],
      ],
      ['title/guards/JwtAuthGuard.html', [224, 3.047, 305, 3.047]],
      [
        'body/guards/JwtAuthGuard.html',
        [
          0, 0.111, 3, 0.095, 4, 0.084, 5, 0.084, 8, 1.706, 10, 0.296, 11, 0.596, 12, 3.369, 15,
          1.622, 16, 2.158, 17, 2.793, 20, 1.842, 21, 0.615, 25, 0.012, 27, 0.544, 35, 1.842, 36,
          0.941, 37, 1.245, 39, 1.622, 45, 1.969, 52, 0.32, 63, 4.358, 65, 0.095, 67, 2.672, 73,
          2.089, 74, 2.23, 86, 2.703, 91, 2.933, 100, 0.007, 101, 0.007, 201, 0.762, 223, 2.585,
          224, 3.717, 235, 2.359, 273, 4.491, 280, 2.585, 284, 3.09, 286, 2.703, 289, 2.146, 293,
          2.146, 294, 1.706, 307, 2.585, 308, 5.157, 311, 5.157, 312, 4.444, 314, 5.862, 315, 3.572,
          317, 4.028, 318, 4.76, 320, 2.801, 321, 4.444, 323, 1.525, 324, 5.464, 325, 2.412, 326,
          3.09, 327, 2.801, 328, 3.717, 329, 3.09, 330, 2.801, 331, 3.09, 332, 2.412, 344, 3.09,
          345, 2.801, 360, 2.801, 370, 3.572, 384, 2.412, 424, 4.716, 452, 3.09, 640, 5.69, 736,
          4.028, 919, 3.82, 999, 3.09, 1000, 3.09, 1001, 6.277, 1002, 3.529, 1003, 3.529, 1004,
          3.529, 1005, 5.075, 1006, 3.529, 1007, 2.801, 1008, 3.529, 1009, 3.529, 1010, 3.529, 1011,
          4.444, 1012, 3.529, 1013, 3.09, 1014, 3.262, 1015, 3.529, 1016, 3.09, 1017, 4.716, 1018,
          2.801, 1019, 3.09, 1020, 3.09, 1021, 3.529,
        ],
      ],
      ['title/classes/LoginDto.html', [0, 0.131, 257, 3.047]],
      [
        'body/classes/LoginDto.html',
        [
          0, 0.175, 2, 1.144, 3, 0.109, 4, 0.097, 5, 0.097, 10, 0.339, 11, 0.943, 20, 1.468, 21,
          0.662, 25, 0.012, 27, 0.586, 31, 0.971, 35, 1.253, 36, 0.641, 37, 0.847, 52, 0.292, 65,
          0.109, 100, 0.007, 101, 0.007, 138, 1.281, 139, 2.5, 145, 3.631, 148, 5.349, 152, 2.662,
          154, 1.57, 156, 2.5, 208, 2.6, 209, 2.864, 252, 2.962, 257, 4.092, 277, 3.089, 278, 2.226,
          286, 1.682, 422, 4.039, 450, 5.156, 510, 2.6, 513, 3.075, 514, 3.819, 515, 2.765, 516,
          2.459, 518, 2.765, 538, 2.226, 551, 2.962, 556, 2.962, 557, 5.732, 558, 3.819, 559, 2.962,
          560, 2.962, 561, 4.092, 562, 2.962, 563, 3.819, 564, 2.962, 565, 3.819, 566, 5.056, 567,
          2.962, 568, 4.092, 569, 4.688, 573, 3.21, 574, 2.962, 575, 4.092, 576, 2.962, 577, 2.962,
          578, 2.765, 579, 2.962, 580, 2.962, 581, 2.962, 589, 3.541, 597, 2.6, 1022, 3.541, 1023,
          4.045, 1024, 4.434, 1025, 4.434, 1026, 4.045, 1027, 4.045,
        ],
      ],
      ['title/classes/Manytoone1731887989393.html', [0, 0.131, 1028, 3.302]],
      [
        'body/classes/Manytoone1731887989393.html',
        [
          0, 0.137, 2, 1.238, 3, 0.118, 4, 0.105, 5, 0.105, 8, 2.852, 10, 0.367, 11, 0.996, 15,
          1.885, 16, 2.785, 17, 3.246, 21, 0.69, 23, 2.117, 24, 2.528, 25, 0.011, 27, 0.61, 31,
          0.587, 35, 1.828, 36, 1.18, 37, 1.236, 39, 1.885, 45, 2.769, 52, 0.185, 65, 0.118, 74,
          2.879, 81, 3.246, 100, 0.008, 101, 0.008, 104, 4.884, 107, 5.293, 108, 4.665, 109, 4.68,
          110, 4.68, 112, 4.68, 113, 6.411, 115, 4.68, 117, 1.399, 118, 6.089, 119, 5.619, 121,
          5.293, 122, 6.089, 125, 4.68, 127, 4.68, 129, 5.663, 130, 3.406, 131, 2.662, 429, 3.225,
          922, 5.619, 925, 5.164, 955, 5.164, 972, 5.663, 1028, 5.663, 1029, 6.248, 1030, 3.833,
          1031, 4.378, 1032, 4.378, 1033, 4.378,
        ],
      ],
      ['title/modules/NotificationsModule.html', [159, 0.954, 174, 2.844]],
      [
        'body/modules/NotificationsModule.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 159, 1.725, 161, 2.34, 174, 5.142, 201, 1.392, 1034, 6.446,
        ],
      ],
      ['title/entities/PartnerEntity.html', [416, 1.561, 635, 1.142]],
      [
        'body/entities/PartnerEntity.html',
        [
          0, 0.138, 3, 0.078, 4, 0.07, 5, 0.07, 10, 0.245, 11, 0.744, 21, 0.785, 25, 0.012, 27,
          0.694, 31, 0.931, 36, 1.16, 52, 0.325, 65, 0.078, 100, 0.006, 101, 0.006, 117, 0.932, 120,
          3.417, 126, 2.049, 131, 3.232, 134, 2.427, 137, 1.954, 138, 1.739, 155, 1.257, 235, 3.111,
          346, 2.457, 396, 1.549, 401, 1.409, 416, 1.654, 429, 1.41, 507, 3.893, 508, 3.634, 635,
          1.21, 637, 1.901, 641, 2.314, 643, 2.049, 650, 2.136, 652, 2.796, 653, 3.361, 654, 1.684,
          655, 1.305, 656, 1.973, 657, 1.469, 658, 1.355, 660, 1.469, 661, 2.314, 745, 3.809, 770,
          3.422, 777, 3.606, 778, 2.986, 785, 5.05, 787, 3.602, 892, 3.893, 902, 3.893, 909, 1.875,
          910, 3.499, 911, 3.499, 917, 4.219, 935, 3.86, 936, 2.314, 940, 3.86, 964, 3.86, 966,
          3.86, 1035, 2.553, 1036, 4.654, 1037, 3.893, 1038, 4.219, 1039, 3.86, 1040, 2.916, 1041,
          4.702, 1042, 4.409, 1043, 2.916, 1044, 2.916, 1045, 2.916, 1046, 2.136, 1047, 2.916, 1048,
          4.702, 1049, 2.916, 1050, 3.809, 1051, 3.229, 1052, 3.229, 1053, 2.916, 1054, 4.05, 1055,
          4.409, 1056, 4.409, 1057, 2.916, 1058, 3.602, 1059, 2.916, 1060, 4.05, 1061, 4.409, 1062,
          4.409, 1063, 2.916, 1064, 4.05, 1065, 2.553, 1066, 2.916, 1067, 3.422, 1068, 4.409, 1069,
          2.916, 1070, 2.553, 1071, 4.219, 1072, 3.893, 1073, 4.09, 1074, 3.07, 1075, 1.875, 1076,
          2.553, 1077, 2.314, 1078, 2.553, 1079, 1.993, 1080, 1.993, 1081, 2.314, 1082, 2.553, 1083,
          1.773, 1084, 2.553, 1085, 2.553, 1086, 2.553, 1087, 2.916,
        ],
      ],
      ['title/entities/PartnerProfileEntity.html', [635, 1.142, 1050, 2.674]],
      [
        'body/entities/PartnerProfileEntity.html',
        [
          0, 0.096, 3, 0.083, 4, 0.073, 5, 0.178, 10, 0.258, 11, 0.775, 21, 0.828, 23, 2.219, 25,
          0.012, 27, 0.737, 31, 1.112, 36, 1.12, 37, 0.962, 52, 0.275, 65, 0.083, 100, 0.006, 101,
          0.006, 117, 0.983, 126, 2.133, 138, 1.834, 235, 2.829, 346, 2.376, 401, 1.945, 416, 2.284,
          473, 3.17, 476, 3.021, 605, 3.337, 606, 3.337, 609, 3.337, 610, 3.337, 635, 1.259, 636,
          3.337, 637, 1.326, 643, 2.133, 652, 4.332, 653, 2.943, 655, 1.376, 745, 1.977, 777, 3.44,
          778, 3.44, 859, 3.752, 861, 3.752, 878, 3.752, 882, 2.693, 883, 4.356, 884, 4.018, 885,
          4.018, 958, 4.018, 959, 4.018, 960, 4.018, 1050, 2.95, 1051, 3.361, 1052, 3.361, 1058,
          1.87, 1074, 3.515, 1083, 1.87, 1088, 6.394, 1089, 2.441, 1090, 5.489, 1091, 5.489, 1092,
          5.329, 1093, 5.167, 1094, 3.076, 1095, 2.693, 1096, 2.693, 1097, 2.693, 1098, 2.693, 1099,
          2.693, 1100, 2.693, 1101, 2.693, 1102, 3.076, 1103, 2.693, 1104, 2.253, 1105, 3.076, 1106,
          2.693, 1107, 2.441, 1108, 3.361, 1109, 2.693, 1110, 2.693, 1111, 2.693, 1112, 4.45, 1113,
          2.253, 1114, 4.83, 1115, 2.693, 1116, 2.693, 1117, 2.693, 1118, 2.253, 1119, 2.103, 1120,
          2.693,
        ],
      ],
      ['title/entities/PartnerSettingsEntity.html', [635, 1.142, 1058, 2.529]],
      [
        'body/entities/PartnerSettingsEntity.html',
        [
          0, 0.169, 3, 0.145, 4, 0.129, 5, 0.129, 10, 0.452, 11, 1.139, 21, 0.698, 25, 0.012, 27,
          0.618, 31, 0.904, 36, 1.069, 52, 0.285, 65, 0.145, 100, 0.009, 101, 0.009, 117, 1.722,
          126, 3.136, 138, 1.547, 346, 2.543, 401, 2.355, 416, 2.899, 635, 1.852, 637, 2.322, 643,
          3.136, 653, 3.263, 655, 2.41, 777, 3.4, 778, 3.4, 906, 4.716, 963, 5.908, 1058, 4.103,
          1074, 3.897, 1088, 5.848, 1104, 3.945, 1116, 4.716, 1121, 4.275, 1122, 5.386, 1123, 5.386,
          1124, 5.386,
        ],
      ],
      ['title/controllers/PartnerTeamsController.html', [248, 2.29, 1125, 3.047]],
      [
        'body/controllers/PartnerTeamsController.html',
        [
          0, 0.095, 3, 0.081, 4, 0.072, 5, 0.072, 10, 0.253, 12, 2.598, 15, 1.445, 16, 2.46, 20,
          1.094, 21, 0.624, 25, 0.012, 27, 0.551, 31, 1.089, 35, 1.867, 36, 1.022, 37, 1.262, 39,
          1.926, 40, 2.488, 52, 0.323, 65, 0.081, 67, 3.005, 72, 1.586, 73, 2.118, 74, 1.696, 79,
          3.486, 86, 2.685, 91, 2.505, 100, 0.006, 101, 0.006, 132, 4.118, 134, 1.659, 136, 2.061,
          137, 2.384, 138, 1.382, 140, 3.958, 155, 1.3, 201, 0.651, 209, 1.349, 245, 1.586, 248,
          1.659, 251, 2.208, 269, 2.208, 270, 2.208, 277, 2.022, 278, 1.659, 286, 2.506, 289, 2.748,
          293, 2.748, 294, 2.623, 295, 3.311, 315, 2.186, 346, 1.445, 370, 2.623, 412, 2.208, 416,
          2.261, 421, 2.393, 544, 4.518, 909, 1.938, 1014, 4.647, 1125, 3.311, 1126, 2.64, 1127,
          5.424, 1128, 5.424, 1129, 3.311, 1130, 5.424, 1131, 3.015, 1132, 6.329, 1133, 4.494, 1134,
          4.749, 1135, 4.521, 1136, 3.015, 1137, 3.015, 1138, 4.728, 1139, 4.521, 1140, 3.015, 1141,
          3.015, 1142, 4.521, 1143, 3.015, 1144, 3.015, 1145, 4.521, 1146, 3.015, 1147, 5.577, 1148,
          3.588, 1149, 2.208, 1150, 2.64, 1151, 2.393, 1152, 2.64, 1153, 2.393, 1154, 2.208, 1155,
          3.132, 1156, 2.393, 1157, 2.393, 1158, 3.015, 1159, 2.64, 1160, 2.64, 1161, 3.015, 1162,
          3.015, 1163, 3.015, 1164, 3.015, 1165, 6.025, 1166, 4.521, 1167, 4.521, 1168, 3.015, 1169,
          3.015, 1170, 2.64, 1171, 3.958, 1172, 4.521, 1173, 4.521, 1174, 2.64, 1175, 4.521, 1176,
          3.015, 1177, 3.015, 1178, 3.015, 1179, 3.015, 1180, 3.015, 1181, 3.015,
        ],
      ],
      ['title/controllers/PartnersController.html', [248, 2.29, 1182, 3.047]],
      [
        'body/controllers/PartnersController.html',
        [
          0, 0.098, 3, 0.084, 4, 0.075, 5, 0.075, 10, 0.263, 12, 2.393, 15, 1.488, 16, 2.015, 20,
          1.138, 21, 0.712, 25, 0.012, 27, 0.601, 31, 1.046, 35, 2.034, 36, 1.039, 37, 1.375, 39,
          2.198, 40, 2.562, 52, 0.33, 65, 0.084, 67, 2.838, 72, 1.649, 73, 2.417, 74, 1.176, 79,
          3.568, 86, 2.555, 100, 0.006, 101, 0.006, 130, 3.206, 137, 2.026, 138, 1.577, 155, 1.352,
          201, 0.677, 209, 1.403, 245, 1.649, 248, 1.725, 251, 2.296, 269, 2.296, 270, 4.066, 277,
          2.082, 278, 1.725, 283, 2.83, 286, 2.309, 289, 3.735, 293, 3.735, 294, 2.97, 295, 4.066,
          370, 2.684, 401, 1.002, 416, 1.176, 504, 3.949, 544, 2.015, 909, 2.015, 1014, 4.701, 1018,
          2.488, 1129, 4.499, 1133, 1.906, 1138, 2.296, 1147, 5.208, 1148, 3.694, 1149, 2.296, 1150,
          2.745, 1151, 2.488, 1152, 2.745, 1153, 2.488, 1154, 2.296, 1155, 3.206, 1156, 2.488, 1157,
          2.488, 1160, 2.745, 1171, 4.86, 1182, 3.409, 1183, 2.745, 1184, 2.688, 1185, 3.181, 1186,
          4.86, 1187, 4.86, 1188, 3.135, 1189, 6.143, 1190, 3.135, 1191, 4.654, 1192, 3.135, 1193,
          2.745, 1194, 4.654, 1195, 3.135, 1196, 2.745, 1197, 4.998, 1198, 4.654, 1199, 3.135, 1200,
          2.745, 1201, 6.143, 1202, 4.654, 1203, 3.135, 1204, 3.135, 1205, 4.998, 1206, 4.654, 1207,
          3.135, 1208, 3.135, 1209, 2.745, 1210, 1.81, 1211, 1.81, 1212, 2.296, 1213, 2.296, 1214,
          3.135, 1215, 3.135, 1216, 3.135, 1217, 3.135, 1218, 3.135, 1219, 3.135, 1220, 3.135, 1221,
          3.135,
        ],
      ],
      ['title/modules/PartnersModule.html', [159, 0.954, 175, 2.29]],
      [
        'body/modules/PartnersModule.html',
        [
          0, 0.146, 3, 0.125, 4, 0.112, 5, 0.112, 25, 0.012, 52, 0.349, 65, 0.125, 100, 0.008, 101,
          0.008, 159, 1.579, 161, 1.695, 162, 2.17, 163, 2.353, 164, 2.353, 165, 2.17, 166, 3.47,
          167, 3.47, 175, 4.582, 183, 5.26, 185, 3.388, 186, 3.102, 187, 2.353, 188, 2.353, 190,
          3.743, 191, 3.002, 192, 2.258, 201, 1.008, 245, 3.238, 354, 3.42, 370, 4.052, 416, 1.752,
          817, 4.886, 1050, 3.957, 1058, 3.743, 1075, 3.002, 1083, 2.839, 1125, 5.044, 1154, 3.42,
          1157, 3.706, 1182, 5.044, 1222, 4.088, 1223, 4.088, 1224, 4.088, 1225, 4.669, 1226, 4.669,
          1227, 5.39, 1228, 4.669, 1229, 4.669, 1230, 4.669, 1231, 4.669,
        ],
      ],
      ['title/injectables/PartnersService.html', [323, 1.25, 370, 2.012]],
      [
        'body/injectables/PartnersService.html',
        [
          0, 0.068, 3, 0.058, 4, 0.051, 5, 0.051, 10, 0.18, 12, 2.376, 15, 1.111, 16, 2.785, 20,
          1.262, 21, 0.69, 25, 0.012, 27, 0.591, 31, 1.028, 35, 2, 36, 1.022, 37, 1.352, 39, 2.317,
          40, 3.033, 45, 2.504, 52, 0.302, 65, 0.058, 67, 2.138, 72, 3.262, 73, 2.406, 74, 2.759,
          86, 2.292, 91, 2.813, 100, 0.005, 101, 0.005, 117, 0.688, 130, 2.899, 137, 2.045, 141,
          3.044, 155, 0.928, 192, 1.041, 201, 0.465, 209, 1.957, 235, 1.001, 238, 3.985, 277, 2.246,
          278, 1.185, 283, 2.114, 286, 2.292, 294, 1.041, 323, 1.045, 346, 1.982, 364, 1.041, 370,
          1.681, 396, 0.757, 401, 2.317, 416, 0.808, 421, 1.708, 433, 2.759, 504, 4.4, 507, 3.677,
          508, 2.989, 595, 1.885, 693, 4.4, 732, 1.471, 818, 2.546, 825, 1.708, 827, 3.471, 909,
          2.235, 1014, 4.499, 1017, 5.122, 1036, 3.044, 1037, 2.546, 1038, 2.759, 1050, 1.384, 1058,
          1.309, 1075, 1.384, 1083, 1.309, 1129, 3.677, 1133, 2.659, 1154, 1.577, 1155, 3.581, 1156,
          1.708, 1184, 3.182, 1185, 2.376, 1186, 3.829, 1187, 3.044, 1193, 3.044, 1196, 1.885, 1197,
          3.432, 1200, 3.044, 1205, 4.556, 1210, 1.243, 1211, 1.243, 1212, 1.577, 1213, 1.577, 1227,
          3.044, 1232, 1.885, 1233, 3.477, 1234, 3.477, 1235, 2.153, 1236, 4.373, 1237, 4.373, 1238,
          2.153, 1239, 3.477, 1240, 3.477, 1241, 2.153, 1242, 2.153, 1243, 2.153, 1244, 2.153, 1245,
          5.021, 1246, 2.153, 1247, 3.477, 1248, 2.153, 1249, 5.893, 1250, 2.153, 1251, 5.51, 1252,
          2.153, 1253, 3.477, 1254, 3.477, 1255, 2.153, 1256, 2.153, 1257, 2.153, 1258, 2.153, 1259,
          2.153, 1260, 3.477, 1261, 3.477, 1262, 2.153, 1263, 2.153, 1264, 2.153, 1265, 2.153, 1266,
          2.153, 1267, 2.153, 1268, 2.153, 1269, 2.153, 1270, 2.759, 1271, 3.203, 1272, 2.153, 1273,
          2.153, 1274, 4.373, 1275, 3.477, 1276, 3.477, 1277, 3.477, 1278, 2.153, 1279, 3.477, 1280,
          2.153, 1281, 2.153, 1282, 2.153, 1283, 3.477, 1284, 3.477, 1285, 2.153, 1286, 2.153, 1287,
          3.477, 1288, 2.153, 1289, 2.153, 1290, 2.153, 1291, 2.153, 1292, 2.153, 1293, 2.153, 1294,
          2.153, 1295, 1.885, 1296, 2.153,
        ],
      ],
      ['title/injectables/PaymentGatewayFactory.html', [323, 1.25, 1297, 2.674]],
      [
        'body/injectables/PaymentGatewayFactory.html',
        [
          0, 0.172, 3, 0.147, 4, 0.131, 5, 0.131, 10, 0.46, 15, 2.183, 20, 1.994, 21, 0.707, 25,
          0.012, 27, 0.503, 35, 1.702, 36, 0.87, 37, 1.151, 39, 1.755, 52, 0.314, 65, 0.147, 73,
          1.93, 100, 0.009, 101, 0.009, 201, 1.186, 212, 4.52, 286, 2.284, 323, 2.053, 364, 2.655,
          468, 3.595, 597, 3.53, 1297, 4.391, 1298, 4.808, 1299, 7.778, 1300, 5.491, 1301, 5.243,
          1302, 5.491, 1303, 5.491, 1304, 4.779, 1305, 4.808, 1306, 4.808, 1307, 4.358, 1308, 4.358,
          1309, 5.491,
        ],
      ],
      ['title/interfaces/PaymentGatewayInterface.html', [601, 2.096, 1304, 2.674]],
      [
        'body/interfaces/PaymentGatewayInterface.html',
        [
          3, 0.133, 4, 0.119, 5, 0.119, 10, 0.416, 15, 2.048, 21, 0.734, 25, 0.012, 27, 0.649, 31,
          0.951, 35, 2.198, 36, 1.123, 37, 1.486, 39, 2.268, 45, 3.084, 52, 0.3, 65, 0.133, 100,
          0.009, 101, 0.009, 467, 4.988, 468, 3.625, 519, 5.108, 601, 2.501, 602, 3.191, 1210, 3.7,
          1211, 2.867, 1304, 4.119, 1310, 6.564, 1311, 4.347, 1312, 5.085, 1313, 5.63, 1314, 5.63,
          1315, 5.085, 1316, 4.964, 1317, 3.94, 1318, 4.964, 1319, 4.347, 1320, 4.916, 1321, 4.964,
          1322, 5.61, 1323, 4.693, 1324, 3.94,
        ],
      ],
      ['title/modules/PaymentGatewayModule.html', [159, 0.954, 176, 2.844]],
      [
        'body/modules/PaymentGatewayModule.html',
        [
          0, 0.161, 3, 0.138, 4, 0.123, 5, 0.123, 25, 0.012, 52, 0.321, 65, 0.138, 100, 0.009, 101,
          0.009, 159, 1.655, 161, 1.868, 162, 2.392, 163, 2.593, 164, 2.593, 165, 2.392, 166, 3.636,
          167, 3.636, 176, 5.777, 186, 3.304, 187, 2.593, 188, 2.593, 201, 1.111, 212, 3.129, 358,
          4.802, 371, 5.166, 413, 4.802, 414, 4.084, 468, 2.488, 1297, 5.157, 1301, 5.157, 1305,
          4.506, 1306, 4.506, 1325, 4.506, 1326, 4.506, 1327, 4.506, 1328, 5.146, 1329, 4.506,
        ],
      ],
      ['title/injectables/PaymentGatewayService.html', [323, 1.25, 371, 2.529]],
      [
        'body/injectables/PaymentGatewayService.html',
        [
          0, 0.131, 3, 0.113, 4, 0.1, 5, 0.1, 8, 2.027, 10, 0.351, 15, 1.83, 16, 2.906, 20, 1.522,
          21, 0.725, 25, 0.012, 27, 0.641, 31, 0.874, 35, 2.172, 36, 1.11, 37, 1.468, 39, 2.084, 40,
          3.151, 45, 2.222, 52, 0.32, 65, 0.113, 73, 2.292, 74, 2.447, 91, 2.531, 100, 0.008, 101,
          0.008, 201, 0.905, 212, 4.461, 286, 1.743, 323, 1.721, 364, 2.027, 371, 3.481, 413, 3.07,
          467, 4.717, 468, 3.548, 519, 4.717, 597, 2.694, 1210, 3.306, 1211, 2.42, 1297, 4.869,
          1304, 4.717, 1307, 3.326, 1308, 3.326, 1312, 4.544, 1313, 4.544, 1314, 4.544, 1315, 4.544,
          1317, 4.544, 1319, 5.013, 1320, 4.798, 1322, 3.67, 1323, 4.193, 1324, 3.326, 1329, 3.67,
          1330, 3.67, 1331, 4.191, 1332, 4.191, 1333, 4.191, 1334, 4.191, 1335, 4.191, 1336, 6.521,
          1337, 6.521, 1338, 4.191, 1339, 4.191, 1340, 4.191,
        ],
      ],
      ['title/modules/PlansModule.html', [159, 0.954, 177, 2.844]],
      [
        'body/modules/PlansModule.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 159, 1.725, 161, 2.34, 177, 5.142, 201, 1.392, 1341, 6.446,
        ],
      ],
      ['title/modules/ProductsModule.html', [159, 0.954, 178, 2.844]],
      [
        'body/modules/ProductsModule.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 159, 1.725, 161, 2.34, 178, 5.142, 201, 1.392, 1342, 6.446,
        ],
      ],
      ['title/entities/ReviewsEntity.html', [635, 1.142, 1054, 2.844]],
      [
        'body/entities/ReviewsEntity.html',
        [
          0, 0.132, 3, 0.113, 4, 0.101, 5, 0.101, 10, 0.353, 11, 0.97, 21, 0.76, 25, 0.012, 27,
          0.694, 31, 0.769, 36, 1.035, 52, 0.297, 65, 0.113, 71, 5.187, 100, 0.008, 101, 0.008, 117,
          1.345, 126, 2.669, 137, 2.315, 138, 1.685, 155, 1.815, 346, 2.481, 396, 2.582, 401, 2.349,
          416, 2.634, 417, 2.214, 429, 2.777, 538, 3.864, 635, 1.576, 637, 2.476, 652, 3.693, 653,
          3.16, 654, 3.774, 655, 2.924, 656, 2.569, 657, 2.121, 658, 1.956, 660, 2.121, 773, 3.925,
          775, 5.142, 776, 4.206, 777, 3.538, 778, 3.538, 787, 3.491, 892, 3.083, 894, 5.723, 896,
          5.723, 898, 3.686, 899, 3.686, 900, 3.341, 961, 5.028, 962, 5.028, 1054, 3.925, 1113,
          3.083, 1343, 3.686, 1344, 4.209, 1345, 4.209, 1346, 5.742, 1347, 4.209, 1348, 5.742, 1349,
          5.742, 1350, 4.209, 1351, 5.742, 1352, 4.209, 1353, 4.209,
        ],
      ],
      ['title/modules/ReviewsModule.html', [159, 0.954, 179, 2.844]],
      [
        'body/modules/ReviewsModule.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 159, 1.725, 161, 2.34, 179, 5.142, 201, 1.392, 1354, 6.446,
        ],
      ],
      ['title/entities/RoleEntity.html', [635, 1.142, 1355, 3.047]],
      [
        'body/entities/RoleEntity.html',
        [
          0, 0.164, 3, 0.14, 4, 0.125, 5, 0.125, 10, 0.437, 11, 1.116, 21, 0.751, 25, 0.012, 27,
          0.664, 31, 1.023, 36, 0.826, 52, 0.307, 65, 0.14, 100, 0.009, 101, 0.009, 117, 1.667, 138,
          1.665, 346, 2.321, 635, 1.814, 637, 2.851, 643, 3.073, 652, 3.819, 655, 2.333, 656, 2.958,
          657, 2.627, 658, 2.424, 660, 2.627, 919, 3.352, 920, 6.357, 922, 5.317, 1046, 3.819, 1072,
          4.843, 1355, 4.843, 1356, 4.566, 1357, 5.215, 1358, 5.215, 1359, 4.642, 1360, 5.789, 1361,
          6.612, 1362, 5.215, 1363, 5.215, 1364, 3.819,
        ],
      ],
      ['title/guards/RolesGuard.html', [305, 3.047, 1365, 3.302]],
      [
        'body/guards/RolesGuard.html',
        [
          0, 0.153, 3, 0.131, 4, 0.117, 5, 0.117, 8, 2.359, 10, 0.409, 15, 2.025, 20, 1.771, 21,
          0.656, 23, 2.359, 25, 0.012, 27, 0.58, 35, 1.963, 36, 1.003, 37, 1.327, 39, 1.559, 45,
          2.458, 52, 0.326, 65, 0.131, 73, 1.714, 86, 2.029, 91, 2.458, 100, 0.009, 101, 0.009, 201,
          1.053, 223, 3.573, 235, 2.267, 307, 3.573, 311, 5.91, 317, 5.027, 318, 5.454, 320, 3.871,
          323, 1.904, 324, 3.871, 327, 3.871, 396, 1.714, 528, 4.64, 597, 3.136, 1000, 4.271, 1001,
          6.925, 1011, 4.271, 1013, 4.271, 1365, 5.027, 1366, 4.271, 1367, 4.878, 1368, 4.878, 1369,
          7.035, 1370, 4.271, 1371, 3.871, 1372, 4.878, 1373, 3.871, 1374, 4.878, 1375, 6.335, 1376,
          4.878, 1377, 4.878, 1378, 4.878,
        ],
      ],
      ['title/modules/RolesModule.html', [159, 0.954, 180, 2.844]],
      [
        'body/modules/RolesModule.html',
        [
          0, 0.184, 3, 0.157, 4, 0.14, 5, 0.14, 25, 0.011, 52, 0.3, 65, 0.157, 100, 0.01, 101, 0.01,
          159, 1.753, 161, 2.124, 162, 2.72, 163, 2.948, 164, 2.948, 165, 2.72, 166, 3.853, 167,
          2.948, 180, 5.661, 186, 3.578, 187, 2.948, 188, 2.948, 201, 1.264, 1379, 5.123, 1380,
          5.123, 1381, 5.661, 1382, 5.851, 1383, 5.851,
        ],
      ],
      ['title/injectables/RolesService.html', [323, 1.25, 1381, 2.844]],
      [
        'body/injectables/RolesService.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 201, 1.392, 323, 2.261, 364, 3.117, 1381, 5.142, 1384, 5.644,
        ],
      ],
      ['title/classes/SetPartnerProfileDto.html', [0, 0.131, 1197, 2.844]],
      [
        'body/classes/SetPartnerProfileDto.html',
        [
          0, 0.164, 2, 1.037, 3, 0.098, 4, 0.088, 5, 0.088, 10, 0.307, 11, 0.881, 21, 0.815, 25,
          0.012, 27, 0.721, 31, 1.163, 37, 1.093, 52, 0.221, 65, 0.098, 100, 0.007, 101, 0.007, 138,
          1.807, 145, 3.35, 154, 1.423, 401, 2.548, 473, 4.035, 476, 3.846, 513, 4.337, 541, 5.124,
          605, 4.248, 606, 4.248, 609, 3.691, 610, 4.248, 859, 4.776, 861, 4.776, 878, 4.15, 883,
          5.545, 1112, 4.15, 1118, 2.686, 1197, 3.566, 1385, 6.98, 1386, 2.91, 1387, 6.802, 1388,
          3.667, 1389, 3.667, 1390, 3.667, 1391, 3.667, 1392, 3.667, 1393, 3.211, 1394, 4.567, 1395,
          4.567, 1396, 3.667, 1397, 3.667, 1398, 3.667, 1399, 3.667, 1400, 3.211, 1401, 2.91, 1402,
          3.211,
        ],
      ],
      ['title/classes/SetUserProfileDto.html', [0, 0.131, 1403, 2.844]],
      [
        'body/classes/SetUserProfileDto.html',
        [
          0, 0.15, 2, 0.917, 3, 0.087, 4, 0.077, 5, 0.077, 10, 0.272, 11, 0.806, 21, 0.804, 25,
          0.012, 27, 0.711, 31, 1.146, 36, 0.989, 37, 1.647, 52, 0.202, 65, 0.087, 100, 0.006, 101,
          0.006, 138, 1.782, 139, 2.135, 145, 3.48, 152, 2.355, 153, 1.972, 154, 1.259, 156, 2.794,
          396, 2.763, 457, 3.496, 476, 3.664, 513, 4.148, 541, 4.927, 554, 3.068, 572, 4.179, 605,
          4.047, 606, 4.047, 609, 3.443, 610, 4.047, 857, 4.148, 858, 4.148, 859, 5.152, 861, 4.55,
          862, 5.282, 863, 4.494, 864, 4.574, 1108, 4.574, 1119, 2.217, 1386, 2.574, 1387, 6.466,
          1393, 2.84, 1394, 4.179, 1395, 4.179, 1400, 2.84, 1401, 2.574, 1403, 3.262, 1404, 6.24,
          1405, 3.244, 1406, 4.773, 1407, 4.773, 1408, 3.244, 1409, 3.244, 1410, 3.244, 1411, 4.179,
          1412, 3.244, 1413, 4.494, 1414, 3.244, 1415, 4.179, 1416, 3.244, 1417, 3.244, 1418, 3.244,
          1419, 4.773, 1420, 3.244, 1421, 3.244, 1422, 3.244, 1423, 2.84, 1424, 3.244, 1425, 3.244,
        ],
      ],
      ['title/classes/SetUserSettingsDto.html', [0, 0.131, 1426, 2.844]],
      [
        'body/classes/SetUserSettingsDto.html',
        [
          0, 0.206, 2, 1.455, 3, 0.138, 4, 0.123, 5, 0.123, 10, 0.431, 11, 1.107, 21, 0.679, 25,
          0.012, 27, 0.6, 52, 0.305, 65, 0.138, 100, 0.009, 101, 0.009, 138, 1.503, 139, 2.933, 145,
          3.459, 152, 3.001, 154, 1.997, 156, 2.933, 240, 5.285, 396, 2.536, 554, 4.884, 878, 5.572,
          1112, 4.932, 1118, 3.769, 1401, 4.084, 1402, 4.506, 1404, 5.727, 1426, 4.482, 1427, 4.506,
          1428, 5.727, 1429, 7.598, 1430, 5.146, 1431, 5.146, 1432, 5.146, 1433, 5.146, 1434, 4.506,
          1435, 5.146,
        ],
      ],
      ['title/classes/SignUpDto.html', [0, 0.131, 265, 2.844]],
      [
        'body/classes/SignUpDto.html',
        [
          0, 0.176, 2, 1.146, 3, 0.109, 4, 0.097, 5, 0.097, 10, 0.34, 11, 0.945, 21, 0.663, 25,
          0.012, 27, 0.586, 31, 1.029, 52, 0.237, 65, 0.109, 100, 0.008, 101, 0.008, 126, 2.978,
          138, 1.469, 139, 2.503, 145, 3.658, 148, 5.352, 152, 2.665, 153, 2.464, 154, 1.573, 156,
          2.503, 252, 2.968, 265, 3.824, 401, 1.788, 422, 4.042, 450, 5.158, 457, 2.968, 510, 2.605,
          513, 3.08, 514, 3.824, 515, 2.77, 516, 2.464, 518, 2.77, 538, 2.231, 541, 3.597, 551,
          2.968, 556, 2.968, 557, 5.734, 558, 3.824, 559, 2.968, 560, 2.968, 561, 4.098, 562, 2.968,
          563, 3.824, 564, 2.968, 565, 3.824, 566, 5.061, 567, 2.968, 568, 4.098, 569, 4.693, 574,
          2.968, 575, 4.098, 576, 2.968, 577, 2.968, 578, 2.77, 579, 2.968, 580, 2.968, 581, 2.968,
          768, 3.824, 769, 2.968, 1024, 4.44, 1025, 4.44, 1436, 3.549, 1437, 4.053, 1438, 4.053,
          1439, 4.053, 1440, 4.053, 1441, 3.549, 1442, 4.053,
        ],
      ],
      ['title/classes/SignUpPartnerDto.html', [0, 0.131, 281, 2.844]],
      [
        'body/classes/SignUpPartnerDto.html',
        [
          0, 0.16, 2, 1.003, 3, 0.095, 4, 0.085, 5, 0.085, 10, 0.297, 11, 0.86, 21, 0.674, 25,
          0.012, 27, 0.596, 31, 1.061, 36, 1.267, 52, 0.215, 65, 0.095, 100, 0.007, 101, 0.007, 138,
          1.494, 139, 2.915, 145, 3.667, 148, 5.174, 152, 2.87, 154, 1.377, 156, 2.915, 252, 2.599,
          281, 3.482, 422, 3.892, 450, 5.078, 457, 4.771, 506, 2.157, 510, 3.832, 513, 3.586, 514,
          3.482, 515, 2.425, 516, 2.157, 518, 2.425, 538, 1.953, 551, 2.599, 556, 2.599, 557, 5.544,
          558, 3.482, 559, 2.599, 560, 2.599, 561, 3.731, 562, 2.599, 563, 3.482, 564, 2.599, 565,
          3.482, 566, 4.771, 567, 2.599, 568, 3.731, 569, 4.366, 574, 2.599, 575, 3.731, 576, 2.599,
          577, 2.599, 578, 2.425, 579, 2.599, 580, 2.599, 581, 2.599, 857, 4.366, 858, 4.366, 1024,
          4.043, 1025, 4.043, 1119, 4.453, 1411, 6.288, 1415, 6.288, 1441, 3.107, 1443, 6.041, 1444,
          3.548, 1445, 5.095, 1446, 5.704, 1447, 3.548, 1448, 3.548, 1449, 3.548, 1450, 5.095,
        ],
      ],
      ['title/classes/SoftFieldsForEntities.html', [0, 0.131, 656, 1.861]],
      [
        'body/classes/SoftFieldsForEntities.html',
        [
          0, 0.159, 2, 1.433, 3, 0.136, 4, 0.121, 5, 0.121, 10, 0.425, 11, 1.096, 21, 0.741, 23,
          3.139, 25, 0.012, 27, 0.731, 37, 1.674, 52, 0.214, 65, 0.136, 100, 0.009, 101, 0.009, 117,
          1.619, 138, 1.642, 656, 2.904, 658, 3.511, 784, 5.684, 840, 6.272, 841, 6.996, 846, 6.272,
          848, 6.272, 864, 5.852, 1451, 6.614, 1452, 4.436, 1453, 5.067, 1454, 7.554, 1455, 5.067,
          1456, 5.067, 1457, 5.067, 1458, 5.067, 1459, 6.492, 1460, 5.067, 1461, 6.492, 1462, 6.492,
          1463, 5.067,
        ],
      ],
      ['title/injectables/StripePaymentGateway.html', [323, 1.25, 1301, 2.674]],
      [
        'body/injectables/StripePaymentGateway.html',
        [
          0, 0.112, 3, 0.096, 4, 0.086, 5, 0.086, 8, 1.731, 10, 0.3, 11, 0.866, 12, 2.583, 15,
          1.639, 16, 2.91, 20, 2.175, 21, 0.746, 25, 0.012, 27, 0.634, 31, 0.965, 35, 2.027, 36,
          1.096, 37, 1.371, 39, 2.091, 45, 2.944, 52, 0.305, 65, 0.096, 67, 1.389, 73, 2.299, 74,
          2.455, 100, 0.007, 101, 0.007, 201, 0.773, 323, 1.541, 364, 1.731, 422, 1.883, 428, 2.447,
          467, 4.451, 468, 3.587, 471, 2.622, 472, 2.842, 473, 2.068, 474, 2.842, 475, 2.842, 476,
          1.971, 478, 2.842, 519, 4.631, 524, 3.135, 538, 3.298, 1108, 2.622, 1210, 2.961, 1211,
          2.068, 1301, 3.296, 1304, 3.296, 1307, 2.842, 1308, 2.842, 1312, 4.07, 1313, 4.755, 1314,
          4.755, 1315, 4.07, 1317, 2.842, 1320, 4.613, 1323, 3.756, 1324, 2.842, 1464, 6.495, 1465,
          3.135, 1466, 6.644, 1467, 5.128, 1468, 5.128, 1469, 5.128, 1470, 6.924, 1471, 3.58, 1472,
          5.128, 1473, 3.58, 1474, 3.58, 1475, 3.58, 1476, 3.58, 1477, 5.128, 1478, 3.58, 1479,
          3.58, 1480, 3.58, 1481, 3.58, 1482, 3.58, 1483, 3.58, 1484, 3.58, 1485, 3.58, 1486, 3.58,
          1487, 3.58, 1488, 3.58, 1489, 3.58, 1490, 3.58, 1491, 3.58, 1492, 3.58, 1493, 3.58, 1494,
          3.58, 1495, 3.58, 1496, 3.135, 1497, 3.58, 1498, 3.58, 1499, 3.58, 1500, 3.58, 1501,
          3.135, 1502, 3.58, 1503, 3.58, 1504, 3.58, 1505, 3.58, 1506, 3.58, 1507, 3.58,
        ],
      ],
      ['title/entities/SubscriberEntity.html', [635, 1.142, 1060, 2.844]],
      [
        'body/entities/SubscriberEntity.html',
        [
          0, 0.144, 3, 0.123, 4, 0.11, 5, 0.11, 10, 0.385, 11, 1.028, 21, 0.707, 25, 0.012, 27,
          0.625, 31, 0.816, 36, 1.082, 52, 0.308, 65, 0.123, 100, 0.008, 101, 0.008, 117, 1.468,
          126, 2.83, 137, 2.399, 138, 1.566, 155, 1.98, 346, 2.537, 396, 2.66, 401, 2.419, 416,
          2.73, 417, 2.416, 429, 2.944, 635, 1.671, 637, 2.625, 643, 2.83, 653, 3.303, 654, 3.945,
          655, 2.055, 656, 2.724, 657, 2.314, 658, 2.135, 660, 2.314, 773, 4.162, 775, 5.328, 776,
          4.46, 777, 3.665, 778, 3.665, 787, 3.702, 917, 3.645, 968, 5.332, 969, 5.332, 1060, 4.162,
          1073, 2.953, 1508, 4.022, 1509, 4.593, 1510, 6.089, 1511, 4.593, 1512, 6.089, 1513, 4.593,
        ],
      ],
      ['title/modules/SubscribersModule.html', [159, 0.954, 181, 2.844]],
      [
        'body/modules/SubscribersModule.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 159, 1.725, 161, 2.34, 181, 5.142, 201, 1.392, 1514, 6.446,
        ],
      ],
      ['title/entities/TagEntity.html', [635, 1.142, 1064, 2.844]],
      [
        'body/entities/TagEntity.html',
        [
          0, 0.175, 3, 0.15, 4, 0.133, 5, 0.133, 10, 0.467, 11, 1.163, 21, 0.713, 25, 0.012, 27,
          0.631, 31, 1.047, 36, 0.882, 52, 0.291, 65, 0.15, 100, 0.009, 101, 0.009, 117, 1.78, 138,
          1.58, 346, 2.391, 635, 1.891, 637, 2.971, 643, 3.202, 652, 3.624, 655, 2.492, 656, 3.083,
          657, 2.806, 658, 2.589, 660, 2.806, 902, 4.079, 903, 6.551, 1064, 4.709, 1107, 4.42, 1119,
          3.807, 1446, 6.033, 1515, 4.876, 1516, 5.569, 1517, 5.569,
        ],
      ],
      ['title/modules/TagsModule.html', [159, 0.954, 182, 2.844]],
      [
        'body/modules/TagsModule.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 159, 1.725, 161, 2.34, 182, 5.142, 201, 1.392, 1518, 6.446,
        ],
      ],
      ['title/entities/TeamMemberEntity.html', [635, 1.142, 1359, 2.529]],
      [
        'body/entities/TeamMemberEntity.html',
        [
          0, 0.128, 3, 0.11, 4, 0.098, 5, 0.098, 10, 0.343, 11, 0.951, 21, 0.718, 25, 0.012, 27,
          0.635, 31, 0.755, 36, 1.191, 52, 0.293, 65, 0.11, 100, 0.008, 101, 0.008, 117, 1.309, 134,
          4.005, 136, 4.404, 137, 2.289, 138, 1.591, 155, 1.766, 346, 2.546, 396, 1.981, 429, 2.725,
          635, 1.546, 637, 1.766, 643, 2.619, 653, 3.519, 654, 3.721, 655, 1.832, 745, 3.623, 773,
          3.852, 775, 5.083, 776, 4.127, 777, 3.789, 778, 3.789, 787, 3.426, 919, 4.678, 922, 2.999,
          923, 4.472, 944, 4.934, 945, 3.586, 946, 3.586, 970, 4.934, 972, 4.472, 982, 3.586, 984,
          3.586, 1046, 2.999, 1048, 4.472, 1067, 4.008, 1071, 4.472, 1072, 4.127, 1073, 2.633, 1074,
          2.365, 1355, 5.083, 1359, 3.426, 1519, 6.372, 1520, 3.586, 1521, 4.095, 1522, 5.635, 1523,
          4.095, 1524, 4.095, 1525, 4.095, 1526, 5.635, 1527, 4.095, 1528, 4.095, 1529, 4.095, 1530,
          4.095,
        ],
      ],
      ['title/entities/TeamsEntity.html', [635, 1.142, 1067, 2.402]],
      [
        'body/entities/TeamsEntity.html',
        [
          0, 0.145, 3, 0.125, 4, 0.111, 5, 0.111, 10, 0.389, 11, 1.035, 21, 0.756, 25, 0.012, 27,
          0.668, 31, 0.978, 36, 1.235, 52, 0.309, 65, 0.125, 100, 0.008, 101, 0.008, 117, 1.482,
          120, 2.98, 126, 2.848, 134, 2.552, 136, 4.691, 138, 1.674, 346, 2.427, 401, 2.427, 416,
          2.74, 417, 2.439, 635, 1.681, 637, 2.642, 643, 2.848, 652, 3.61, 653, 3.319, 654, 3.538,
          655, 2.074, 656, 2.741, 657, 2.336, 658, 2.155, 660, 2.336, 773, 3.169, 777, 3.087, 778,
          3.087, 1041, 3.68, 1067, 3.538, 1073, 3.939, 1074, 2.677, 1359, 4.439, 1364, 3.396, 1531,
          4.059, 1532, 4.636, 1533, 6.127, 1534, 4.636, 1535, 6.127, 1536, 6.127, 1537, 4.636, 1538,
          4.636, 1539, 4.636, 1540, 4.636, 1541, 4.636, 1542, 4.636,
        ],
      ],
      ['title/modules/TeamsModule.html', [159, 0.954, 183, 2.674]],
      [
        'body/modules/TeamsModule.html',
        [
          0, 0.164, 3, 0.14, 4, 0.125, 5, 0.125, 25, 0.012, 52, 0.346, 65, 0.14, 100, 0.009, 101,
          0.009, 159, 1.667, 161, 1.898, 162, 2.43, 163, 2.634, 164, 2.634, 165, 2.43, 166, 3.663,
          167, 3.663, 175, 2.878, 183, 5.259, 185, 2.878, 186, 3.337, 187, 2.634, 188, 2.634, 190,
          3.179, 191, 3.361, 192, 2.528, 201, 1.129, 354, 3.829, 356, 3.829, 1067, 3.019, 1155,
          4.918, 1359, 4.027, 1364, 3.829, 1543, 4.578, 1544, 4.578, 1545, 4.578, 1546, 5.229, 1547,
          5.229, 1548, 4.578, 1549, 4.578, 1550, 5.229,
        ],
      ],
      ['title/injectables/TeamsService.html', [323, 1.25, 1155, 2.402]],
      [
        'body/injectables/TeamsService.html',
        [
          0, 0.081, 3, 0.07, 4, 0.062, 5, 0.062, 10, 0.217, 12, 2.129, 15, 1.287, 16, 2.881, 20,
          1.461, 21, 0.69, 25, 0.012, 27, 0.61, 31, 1.038, 35, 2.065, 36, 1.121, 37, 1.396, 39,
          2.312, 40, 2.215, 45, 2.673, 52, 0.321, 65, 0.07, 67, 1.005, 72, 3.358, 73, 2.421, 74,
          2.396, 86, 1.077, 91, 2.478, 100, 0.005, 101, 0.005, 117, 0.828, 120, 2.587, 130, 3.216,
          132, 3.806, 134, 4.054, 136, 2.751, 137, 2.385, 155, 1.117, 192, 1.252, 201, 0.559, 209,
          2.209, 235, 1.204, 277, 2.491, 278, 1.425, 286, 2.054, 315, 1.252, 323, 1.21, 346, 2.262,
          364, 1.252, 370, 1.252, 396, 0.91, 401, 2.476, 412, 1.897, 415, 1.897, 416, 2.089, 417,
          1.362, 544, 4.429, 693, 4.284, 732, 1.77, 818, 1.897, 825, 2.055, 1014, 3.58, 1067, 1.495,
          1129, 2.948, 1132, 5.835, 1133, 3.386, 1134, 4.323, 1153, 3.194, 1155, 2.324, 1159, 2.267,
          1170, 2.267, 1174, 2.267, 1184, 3.216, 1185, 2.751, 1210, 1.495, 1211, 1.495, 1270, 2.055,
          1271, 1.897, 1359, 2.447, 1360, 3.524, 1364, 1.897, 1548, 2.267, 1549, 2.267, 1551, 2.267,
          1552, 4.025, 1553, 4.025, 1554, 2.59, 1555, 4.938, 1556, 2.59, 1557, 4.025, 1558, 4.025,
          1559, 2.59, 1560, 4.025, 1561, 2.59, 1562, 4.025, 1563, 2.59, 1564, 4.025, 1565, 2.59,
          1566, 3.524, 1567, 4.025, 1568, 2.59, 1569, 3.524, 1570, 5.569, 1571, 4.078, 1572, 2.59,
          1573, 2.59, 1574, 2.59, 1575, 2.59, 1576, 2.59, 1577, 2.59, 1578, 2.59, 1579, 2.59, 1580,
          2.59, 1581, 2.59, 1582, 2.59, 1583, 2.59, 1584, 4.938, 1585, 2.59, 1586, 2.59, 1587, 2.59,
          1588, 2.59, 1589, 2.055, 1590, 2.59, 1591, 2.59, 1592, 2.59, 1593, 2.59, 1594, 2.59,
        ],
      ],
      ['title/modules/TransactionsModule.html', [159, 0.954, 184, 2.844]],
      [
        'body/modules/TransactionsModule.html',
        [
          0, 0.202, 3, 0.173, 4, 0.154, 5, 0.154, 25, 0.011, 52, 0.273, 65, 0.173, 100, 0.01, 101,
          0.01, 159, 1.725, 161, 2.34, 184, 5.142, 201, 1.392, 1595, 6.446,
        ],
      ],
      ['title/classes/UnfollowPartnerDto.html', [0, 0.131, 820, 3.047]],
      [
        'body/classes/UnfollowPartnerDto.html',
        [
          0, 0.215, 2, 1.566, 3, 0.149, 4, 0.132, 5, 0.132, 10, 0.464, 11, 1.159, 21, 0.711, 25,
          0.012, 27, 0.628, 31, 1.045, 52, 0.29, 65, 0.149, 100, 0.009, 101, 0.009, 137, 1.826, 138,
          1.574, 139, 3.072, 145, 2.96, 152, 3.104, 154, 2.149, 155, 2.388, 156, 3.49, 396, 2.819,
          401, 2.563, 506, 3.367, 820, 5.029, 1596, 6.534, 1597, 5.538, 1598, 4.849,
        ],
      ],
      ['title/classes/UpdateCustomerDto.html', [0, 0.131, 1320, 2.529]],
      [
        'body/classes/UpdateCustomerDto.html',
        [
          0, 0.134, 2, 1.208, 3, 0.115, 4, 0.102, 5, 0.102, 10, 0.358, 11, 0.98, 21, 0.841, 25,
          0.012, 27, 0.744, 31, 1.107, 36, 1.043, 37, 1.782, 52, 0.278, 65, 0.115, 100, 0.008, 101,
          0.008, 428, 4.502, 468, 3.966, 470, 3.391, 471, 4.824, 472, 5.228, 473, 3.804, 474, 5.228,
          475, 5.228, 476, 3.625, 477, 5.767, 478, 5.228, 479, 4.502, 480, 3.742, 482, 3.742, 483,
          3.742, 484, 4.502, 485, 3.742, 486, 4.502, 487, 3.742, 488, 3.742, 489, 3.742, 490, 3.742,
          491, 3.742, 492, 5.08, 493, 5.08, 494, 5.08, 495, 3.742, 496, 5.767, 497, 3.742, 498,
          3.13, 499, 3.742, 500, 3.742, 1320, 3.527, 1599, 6.509,
        ],
      ],
      ['title/classes/UpdateFileDto.html', [0, 0.131, 1600, 3.302]],
      [
        'body/classes/UpdateFileDto.html',
        [
          0, 0.202, 2, 1.817, 3, 0.173, 4, 0.153, 5, 0.153, 25, 0.011, 52, 0.272, 65, 0.173, 100,
          0.01, 101, 0.01, 501, 4.706, 503, 5.099, 1184, 3.71, 1600, 5.959, 1601, 5.626, 1602,
          6.425,
        ],
      ],
      ['title/classes/UpdatePartnerDto.html', [0, 0.131, 1205, 2.844]],
      [
        'body/classes/UpdatePartnerDto.html',
        [
          0, 0.217, 2, 1.579, 3, 0.15, 4, 0.133, 5, 0.133, 8, 3.337, 10, 0.468, 11, 1.165, 21,
          0.578, 25, 0.012, 27, 0.511, 31, 1.048, 36, 1.239, 52, 0.292, 65, 0.15, 100, 0.009, 101,
          0.009, 138, 1.281, 139, 2.499, 145, 2.976, 152, 2.871, 154, 2.167, 156, 2.499, 283, 3.396,
          401, 2.501, 504, 3.59, 506, 3.396, 508, 5.12, 510, 3.59, 512, 4.432, 513, 3.799, 1184,
          3.225, 1205, 4.718, 1589, 5.478, 1603, 6.043,
        ],
      ],
      ['title/classes/UpdateTeamDto.html', [0, 0.131, 1571, 3.047]],
      [
        'body/classes/UpdateTeamDto.html',
        [
          0, 0.207, 2, 1.467, 3, 0.139, 4, 0.124, 5, 0.124, 10, 0.435, 11, 1.113, 21, 0.75, 25,
          0.012, 27, 0.663, 31, 1.077, 36, 1.147, 52, 0.219, 65, 0.139, 100, 0.009, 101, 0.009, 126,
          3.366, 134, 3.627, 138, 1.661, 139, 2.948, 145, 3.285, 152, 3.012, 153, 3.154, 154, 2.013,
          156, 2.948, 346, 2.436, 401, 2.106, 541, 4.656, 546, 4.117, 547, 4.542, 554, 4.236, 768,
          4.504, 769, 3.799, 923, 5.748, 1571, 4.826, 1604, 6.672, 1605, 5.187, 1606, 5.187, 1607,
          5.187, 1608, 5.187,
        ],
      ],
      ['title/classes/UpdateUserDto.html', [0, 0.131, 1609, 2.844]],
      [
        'body/classes/UpdateUserDto.html',
        [
          0, 0.223, 2, 1.655, 3, 0.157, 4, 0.14, 5, 0.14, 8, 3.434, 10, 0.491, 11, 1.199, 21, 0.606,
          25, 0.012, 27, 0.535, 31, 0.951, 52, 0.323, 65, 0.157, 100, 0.01, 101, 0.01, 152, 2.434,
          154, 2.271, 208, 3.761, 209, 2.618, 435, 5.226, 548, 3.761, 550, 4.644, 573, 4.644, 1184,
          3.379, 1589, 5.636, 1609, 4.854, 1610, 6.218, 1611, 5.851, 1612, 4.644,
        ],
      ],
      ['title/entities/UserEntity.html', [137, 1.372, 635, 1.142]],
      [
        'body/entities/UserEntity.html',
        [
          0, 0.13, 3, 0.072, 4, 0.064, 5, 0.064, 10, 0.225, 11, 0.699, 21, 0.8, 25, 0.012, 27,
          0.707, 31, 1.045, 36, 1.026, 37, 0.867, 52, 0.319, 65, 0.072, 73, 1.775, 91, 1.042, 100,
          0.006, 101, 0.006, 117, 0.858, 120, 3.942, 131, 1.633, 137, 1.365, 138, 1.772, 235, 3.395,
          346, 2.335, 396, 1.455, 401, 1.323, 416, 2.13, 417, 1.412, 422, 2.657, 429, 1.298, 435,
          3.453, 450, 3.071, 528, 3.032, 635, 1.136, 637, 1.785, 641, 4.867, 643, 1.924, 645, 2.351,
          650, 1.967, 652, 3.408, 653, 2.965, 654, 1.551, 655, 1.201, 656, 1.852, 657, 1.353, 658,
          1.248, 660, 1.353, 661, 2.131, 745, 2.661, 770, 3.278, 777, 3.265, 778, 2.86, 787, 3.452,
          892, 4.492, 902, 3.7, 909, 3.247, 910, 3.285, 911, 3.285, 928, 2.131, 929, 4.009, 930,
          4.423, 936, 2.131, 950, 3.625, 973, 3.625, 975, 3.625, 1037, 3.7, 1038, 4.009, 1039,
          2.351, 1041, 4.009, 1046, 3.032, 1048, 3.285, 1051, 3.032, 1052, 3.032, 1054, 3.88, 1060,
          3.88, 1064, 3.88, 1065, 2.351, 1067, 3.278, 1070, 3.625, 1071, 3.285, 1072, 4.158, 1073,
          3.649, 1074, 2.917, 1075, 1.726, 1076, 2.351, 1077, 2.131, 1078, 2.351, 1079, 1.835, 1080,
          1.835, 1081, 2.131, 1082, 2.351, 1083, 1.633, 1084, 2.351, 1085, 2.351, 1086, 2.351, 1093,
          4.009, 1613, 2.351, 1614, 6.133, 1615, 6.133, 1616, 2.685, 1617, 4.14, 1618, 2.685, 1619,
          2.685, 1620, 4.14, 1621, 2.685, 1622, 2.685, 1623, 3.649, 1624, 2.685, 1625, 5.052, 1626,
          2.685, 1627, 2.685, 1628, 4.14, 1629, 2.685, 1630, 3.649, 1631, 2.685, 1632, 4.14, 1633,
          2.685, 1634, 2.685, 1635, 4.14, 1636, 2.685, 1637, 2.685, 1638, 2.685, 1639, 5.052, 1640,
          3.285, 1641, 2.685, 1642, 2.685, 1643, 2.685, 1644, 2.685, 1645, 2.685, 1646, 2.685,
        ],
      ],
      ['title/classes/UserFollowPartnerDto.html', [0, 0.131, 1647, 3.047]],
      [
        'body/classes/UserFollowPartnerDto.html',
        [
          0, 0.22, 2, 1.626, 3, 0.154, 4, 0.137, 5, 0.137, 10, 0.482, 11, 1.186, 21, 0.595, 25,
          0.012, 27, 0.526, 31, 0.941, 52, 0.243, 65, 0.154, 100, 0.009, 101, 0.009, 126, 3.527,
          138, 1.318, 139, 2.572, 145, 3.271, 152, 2.922, 153, 3.495, 154, 2.231, 156, 2.572, 401,
          2.246, 404, 4.516, 506, 3.495, 554, 4.516, 767, 5.033, 768, 4.802, 769, 4.21, 1598, 5.033,
          1647, 5.145, 1648, 6.151,
        ],
      ],
      ['title/entities/UserProfileEntity.html', [635, 1.142, 1623, 2.674]],
      [
        'body/entities/UserProfileEntity.html',
        [
          0, 0.098, 3, 0.084, 4, 0.074, 5, 0.156, 10, 0.261, 11, 0.782, 21, 0.823, 25, 0.012, 27,
          0.739, 31, 1.105, 36, 0.876, 37, 0.971, 52, 0.277, 65, 0.084, 100, 0.006, 101, 0.006, 117,
          0.996, 131, 1.894, 137, 2.02, 138, 1.824, 235, 3.776, 346, 2.271, 396, 1.944, 429, 2.24,
          476, 3.044, 605, 3.362, 606, 3.362, 609, 3.362, 610, 3.362, 635, 1.271, 636, 2.816, 637,
          1.997, 643, 2.153, 652, 4.217, 653, 2.674, 655, 1.394, 656, 2.073, 657, 1.57, 658, 1.448,
          660, 1.57, 777, 3.086, 778, 3.086, 856, 2.727, 857, 4.05, 858, 4.05, 859, 3.78, 861, 3.78,
          862, 4.389, 863, 4.389, 864, 4.485, 865, 4.056, 954, 3.676, 956, 4.056, 1051, 2.281, 1052,
          2.281, 1074, 3.194, 1089, 2.472, 1092, 4.056, 1093, 6.254, 1095, 2.727, 1096, 2.727, 1097,
          5.731, 1098, 2.727, 1099, 2.727, 1100, 2.727, 1101, 2.727, 1103, 2.727, 1104, 2.281, 1106,
          2.727, 1107, 2.472, 1108, 3.393, 1109, 2.727, 1110, 2.727, 1111, 2.727, 1113, 3.393, 1114,
          4.86, 1115, 2.727, 1117, 2.727, 1119, 2.129, 1413, 5.195, 1423, 2.727, 1623, 2.978, 1649,
          6.362, 1650, 5.53, 1651, 3.115, 1652, 3.115, 1653, 2.727, 1654, 3.115,
        ],
      ],
      ['title/entities/UserSettingsEntity.html', [635, 1.142, 1630, 2.674]],
      [
        'body/entities/UserSettingsEntity.html',
        [
          0, 0.141, 3, 0.121, 4, 0.107, 5, 0.107, 10, 0.377, 11, 1.014, 21, 0.747, 23, 3.488, 25,
          0.012, 27, 0.708, 31, 0.805, 36, 0.951, 52, 0.318, 65, 0.121, 100, 0.008, 101, 0.008, 117,
          1.438, 137, 2.379, 138, 1.654, 240, 4.952, 346, 2.403, 396, 2.376, 429, 2.904, 635, 1.648,
          637, 2.589, 643, 2.791, 652, 3.556, 653, 2.904, 655, 2.013, 656, 2.687, 657, 2.267, 658,
          2.091, 660, 2.267, 745, 3.861, 777, 3.026, 778, 3.026, 877, 3.939, 878, 4.621, 954, 4.766,
          1073, 2.892, 1074, 3.468, 1104, 3.295, 1112, 5.138, 1113, 4.399, 1114, 6.366, 1118, 3.295,
          1120, 3.939, 1121, 3.57, 1428, 5.965, 1434, 3.939, 1630, 3.861, 1649, 5.965, 1653, 3.939,
          1655, 4.498, 1656, 4.498, 1657, 4.498, 1658, 4.498, 1659, 4.498,
        ],
      ],
      ['title/controllers/UsersController.html', [248, 2.29, 1660, 3.047]],
      [
        'body/controllers/UsersController.html',
        [
          0, 0.103, 3, 0.088, 4, 0.079, 5, 0.079, 10, 0.276, 15, 1.541, 21, 0.724, 25, 0.012, 27,
          0.64, 31, 0.765, 35, 2.167, 36, 1.108, 37, 1.466, 39, 2.236, 52, 0.325, 65, 0.088, 67,
          2.439, 72, 1.729, 73, 2.458, 79, 4.302, 86, 2.374, 100, 0.006, 101, 0.006, 130, 2.783,
          137, 2.626, 138, 1.604, 201, 0.71, 245, 1.729, 248, 1.809, 251, 2.407, 269, 2.407, 270,
          4.18, 283, 2.93, 286, 1.367, 289, 3.47, 293, 3.47, 294, 2.76, 295, 4.18, 315, 2.76, 384,
          3.294, 396, 1.694, 404, 2.113, 548, 4.496, 597, 2.113, 765, 2.247, 928, 2.609, 1016,
          2.878, 1133, 4.598, 1147, 3.825, 1148, 2.609, 1151, 2.609, 1184, 2.783, 1185, 3.294, 1209,
          2.878, 1210, 1.898, 1211, 1.898, 1212, 3.53, 1213, 2.407, 1403, 5.067, 1426, 5.067, 1569,
          2.878, 1609, 5.067, 1612, 3.825, 1647, 4.603, 1660, 3.53, 1661, 2.878, 1662, 4.22, 1663,
          4.22, 1664, 4.22, 1665, 2.878, 1666, 3.287, 1667, 2.878, 1668, 4.82, 1669, 3.287, 1670,
          3.287, 1671, 5.707, 1672, 4.82, 1673, 3.287, 1674, 3.287, 1675, 4.82, 1676, 3.287, 1677,
          3.287, 1678, 4.82, 1679, 3.287, 1680, 4.82, 1681, 3.287, 1682, 2.878, 1683, 2.609, 1684,
          2.878, 1685, 3.287, 1686, 3.287, 1687, 3.287, 1688, 3.287, 1689, 3.287, 1690, 3.287, 1691,
          3.287, 1692, 3.287, 1693, 3.287, 1694, 3.287, 1695, 3.287, 1696, 3.287, 1697, 3.287, 1698,
          3.287, 1699, 3.287, 1700, 3.287,
        ],
      ],
      ['title/modules/UsersModule.html', [159, 0.954, 185, 2.29]],
      [
        'body/modules/UsersModule.html',
        [
          0, 0.15, 3, 0.128, 4, 0.114, 5, 0.114, 25, 0.012, 52, 0.347, 65, 0.128, 100, 0.008, 101,
          0.008, 137, 1.574, 159, 1.596, 161, 1.732, 162, 2.218, 163, 2.404, 164, 2.404, 165, 2.218,
          166, 3.507, 167, 3.507, 173, 5.054, 175, 4.327, 185, 4.598, 186, 3.146, 187, 2.404, 188,
          2.404, 190, 3.796, 191, 3.067, 192, 2.307, 201, 1.03, 245, 3.285, 315, 4.065, 356, 3.495,
          1075, 3.067, 1083, 2.901, 1623, 4.014, 1630, 4.014, 1660, 5.098, 1682, 4.178, 1683, 3.787,
          1701, 4.178, 1702, 4.178, 1703, 4.178, 1704, 4.771, 1705, 4.771, 1706, 4.771, 1707, 4.771,
          1708, 5.467, 1709, 4.771,
        ],
      ],
      ['title/injectables/UsersService.html', [315, 2.012, 323, 1.25]],
      [
        'body/injectables/UsersService.html',
        [
          0, 0.054, 3, 0.046, 4, 0.041, 5, 0.041, 10, 0.143, 12, 2.415, 15, 0.918, 16, 2.648, 20,
          1.043, 21, 0.673, 25, 0.012, 27, 0.595, 31, 1.044, 35, 2.014, 36, 1.054, 37, 1.362, 39,
          2.355, 45, 3.102, 52, 0.305, 65, 0.046, 67, 1.886, 72, 3.637, 73, 2.387, 74, 2.497, 86,
          2.022, 91, 2.635, 100, 0.004, 101, 0.004, 117, 0.546, 130, 2.517, 137, 2.084, 192, 0.826,
          201, 0.369, 209, 1.663, 212, 1.038, 254, 2.279, 277, 1.95, 278, 0.94, 286, 2.329, 290,
          1.495, 294, 0.826, 315, 1.389, 323, 0.863, 328, 4.306, 335, 2.515, 336, 2.515, 337, 2.979,
          340, 2.279, 346, 1.79, 364, 0.826, 370, 2.708, 371, 3.405, 380, 2.279, 384, 4.642, 387,
          5.148, 396, 2.709, 401, 0.918, 404, 1.846, 413, 2.104, 414, 1.355, 415, 1.251, 422, 2.557,
          424, 3.459, 433, 2.279, 471, 1.251, 476, 0.94, 548, 3.386, 605, 1.038, 606, 1.038, 607,
          1.495, 608, 1.495, 609, 1.038, 610, 1.038, 693, 4.063, 700, 4.18, 708, 2.279, 712, 2.279,
          718, 2.515, 731, 2.515, 732, 1.167, 733, 1.355, 770, 0.986, 791, 3.125, 817, 1.355, 818,
          3.192, 827, 2.279, 842, 1.495, 929, 2.279, 1014, 2.802, 1017, 2.95, 1018, 1.355, 1019,
          1.495, 1037, 2.104, 1075, 1.098, 1077, 1.355, 1079, 1.167, 1080, 1.167, 1081, 1.355, 1083,
          1.038, 1184, 2.517, 1185, 1.963, 1210, 0.986, 1211, 0.986, 1212, 2.104, 1213, 1.251, 1270,
          2.95, 1271, 2.722, 1295, 3.816, 1320, 1.746, 1323, 1.251, 1403, 2.979, 1426, 4.181, 1566,
          3.816, 1599, 1.355, 1609, 4.181, 1612, 2.279, 1623, 1.098, 1630, 1.098, 1640, 2.279, 1662,
          2.515, 1663, 2.515, 1664, 2.515, 1665, 2.515, 1667, 2.515, 1683, 1.355, 1684, 1.495, 1708,
          2.515, 1710, 1.495, 1711, 2.872, 1712, 2.872, 1713, 2.872, 1714, 2.872, 1715, 1.708, 1716,
          3.717, 1717, 3.717, 1718, 3.717, 1719, 1.708, 1720, 2.872, 1721, 1.708, 1722, 2.872, 1723,
          1.708, 1724, 1.708, 1725, 2.872, 1726, 1.708, 1727, 2.872, 1728, 1.708, 1729, 4.358, 1730,
          2.872, 1731, 5.267, 1732, 2.872, 1733, 1.708, 1734, 2.872, 1735, 2.872, 1736, 2.872, 1737,
          1.708, 1738, 2.872, 1739, 2.872, 1740, 2.872, 1741, 5.267, 1742, 1.708, 1743, 2.872, 1744,
          1.708, 1745, 2.872, 1746, 1.708, 1747, 1.708, 1748, 1.708, 1749, 1.708, 1750, 1.708, 1751,
          1.708, 1752, 1.708, 1753, 1.708, 1754, 3.717, 1755, 3.717, 1756, 1.708, 1757, 1.708, 1758,
          1.708, 1759, 1.708, 1760, 1.708, 1761, 1.708, 1762, 2.872, 1763, 1.708, 1764, 1.708, 1765,
          1.708, 1766, 1.708, 1767, 1.708, 1768, 1.708, 1769, 1.708, 1770, 1.708, 1771, 1.708, 1772,
          1.708, 1773, 2.872, 1774, 2.872, 1775, 1.708, 1776, 2.872, 1777, 1.708, 1778, 1.708, 1779,
          1.708, 1780, 2.872, 1781, 2.872, 1782, 1.708, 1783, 1.708, 1784, 1.708, 1785, 1.708,
        ],
      ],
      ['title/coverage.html', [1786, 4.521]],
      [
        'body/coverage.html',
        [
          0, 0.259, 1, 1.866, 5, 0.056, 6, 2.059, 7, 2.059, 9, 1.511, 25, 0.012, 27, 0.215, 67,
          0.912, 100, 0.005, 101, 0.005, 102, 1.866, 103, 2.059, 104, 1.722, 105, 2.059, 106, 2.059,
          108, 1.429, 119, 1.722, 132, 1.607, 133, 2.059, 134, 1.294, 135, 2.059, 137, 0.775, 165,
          1.093, 212, 2.268, 224, 1.722, 248, 2.906, 249, 1.722, 250, 2.059, 257, 1.722, 265, 1.607,
          273, 1.429, 277, 1.052, 281, 1.607, 305, 3.397, 306, 1.866, 308, 2.961, 309, 2.059, 310,
          2.059, 315, 1.137, 323, 2.157, 365, 2.059, 370, 1.137, 371, 1.429, 396, 1.311, 401, 0.751,
          404, 1.511, 416, 0.882, 467, 1.511, 468, 3.401, 469, 2.961, 470, 2.961, 479, 1.607, 484,
          1.607, 486, 1.607, 498, 1.722, 501, 1.722, 502, 2.059, 503, 2.961, 504, 1.511, 505, 2.059,
          506, 3.726, 516, 1.429, 519, 1.511, 520, 2.059, 544, 1.511, 545, 2.059, 546, 2.961, 548,
          1.511, 549, 2.059, 550, 2.961, 587, 2.059, 601, 2.902, 603, 3.397, 604, 2.059, 611, 2.059,
          614, 1.722, 615, 2.059, 616, 2.059, 635, 2.06, 636, 1.429, 638, 2.059, 656, 1.052, 658,
          1.093, 669, 2.059, 679, 1.607, 683, 1.722, 687, 2.059, 765, 1.607, 766, 2.059, 770, 2.155,
          771, 3.267, 791, 1.511, 796, 2.059, 820, 1.722, 833, 1.866, 834, 2.059, 835, 2.059, 919,
          1.511, 997, 2.059, 999, 2.059, 1007, 1.866, 1022, 2.059, 1028, 1.866, 1029, 2.059, 1030,
          2.059, 1035, 2.059, 1050, 1.511, 1054, 2.55, 1058, 1.429, 1060, 1.607, 1064, 1.607, 1067,
          1.358, 1079, 1.607, 1080, 1.607, 1088, 2.961, 1089, 3.681, 1121, 2.961, 1125, 1.722, 1126,
          2.059, 1133, 1.429, 1138, 1.722, 1149, 1.722, 1155, 1.358, 1182, 1.722, 1183, 2.059, 1197,
          1.607, 1205, 1.607, 1232, 2.059, 1271, 6.357, 1297, 1.511, 1298, 2.059, 1301, 1.511, 1304,
          1.511, 1310, 2.059, 1311, 2.059, 1320, 1.429, 1330, 2.059, 1343, 3.267, 1355, 1.722, 1356,
          2.059, 1359, 1.429, 1365, 1.866, 1366, 2.059, 1371, 1.866, 1381, 1.607, 1384, 2.059, 1385,
          2.059, 1386, 2.961, 1403, 1.607, 1404, 2.961, 1426, 1.607, 1427, 2.059, 1436, 2.059, 1443,
          2.059, 1451, 2.059, 1452, 2.059, 1464, 2.059, 1465, 2.059, 1501, 3.267, 1508, 2.059, 1515,
          2.059, 1519, 2.059, 1520, 2.059, 1531, 2.059, 1551, 2.059, 1571, 1.722, 1596, 2.059, 1599,
          1.866, 1600, 1.866, 1601, 2.059, 1603, 2.059, 1604, 2.059, 1609, 1.607, 1610, 2.059, 1613,
          2.059, 1623, 2.398, 1630, 1.511, 1647, 1.722, 1648, 2.059, 1649, 3.681, 1660, 1.722, 1661,
          2.059, 1710, 2.059, 1786, 1.866, 1787, 2.351, 1788, 2.351, 1789, 2.351, 1790, 2.059, 1791,
          2.059, 1792, 7.178, 1793, 8.2, 1794, 7.303, 1795, 3.731, 1796, 2.351, 1797, 5.759, 1798,
          2.059, 1799, 2.351, 1800, 2.351, 1801, 5.281, 1802, 4.638, 1803, 6.424, 1804, 3.731, 1805,
          5.281, 1806, 3.731, 1807, 6.129, 1808, 2.351, 1809, 3.731, 1810, 2.351, 1811, 2.351, 1812,
          2.351, 1813, 3.267, 1814, 2.059, 1815, 2.059, 1816, 3.267, 1817, 3.267, 1818, 2.059, 1819,
          2.351, 1820, 4.061, 1821, 3.731, 1822, 2.059, 1823, 2.351,
        ],
      ],
      ['title/dependencies.html', [162, 2.328, 1824, 3.034]],
      [
        'body/dependencies.html',
        [
          0, 0.214, 25, 0.012, 33, 5.445, 34, 3.754, 55, 4.022, 57, 4.358, 58, 4.358, 62, 4.022, 63,
          3.339, 64, 4.022, 100, 0.009, 101, 0.009, 117, 1.755, 154, 2.131, 162, 2.552, 192, 2.655,
          201, 1.186, 208, 3.53, 209, 3.056, 223, 4.022, 280, 4.022, 303, 4.358, 325, 3.754, 428,
          3.754, 650, 4.022, 1370, 4.808, 1466, 4.808, 1825, 7.434, 1826, 7.434, 1827, 5.491, 1828,
          5.491, 1829, 5.491, 1830, 5.491, 1831, 5.491, 1832, 5.491, 1833, 5.491, 1834, 5.491, 1835,
          5.491, 1836, 5.491, 1837, 5.491, 1838, 5.491, 1839, 5.491, 1840, 5.491, 1841, 5.491, 1842,
          5.491, 1843, 5.491,
        ],
      ],
      ['title/miscellaneous/enumerations.html', [1844, 2.228, 1845, 4.386]],
      [
        'body/miscellaneous/enumerations.html',
        [
          10, 0.476, 24, 4.925, 25, 0.012, 100, 0.009, 101, 0.009, 230, 5.536, 855, 6.108, 872,
          6.108, 875, 6.108, 876, 6.108, 1112, 4.768, 1373, 5.536, 1413, 5.536, 1428, 5.536, 1844,
          3.653, 1845, 4.975, 1846, 5.682, 1847, 5.682, 1848, 5.682, 1849, 5.682, 1850, 5.682, 1851,
          5.682, 1852, 6.976, 1853, 6.976, 1854, 5.682, 1855, 6.976, 1856, 5.682, 1857, 6.976,
        ],
      ],
      ['title/miscellaneous/functions.html', [1844, 2.228, 1858, 4.386]],
      [
        'body/miscellaneous/functions.html',
        [
          10, 0.555, 25, 0.01, 100, 0.01, 101, 0.01, 165, 3.743, 1818, 5.796, 1844, 4.255, 1858,
          5.796, 1859, 6.62,
        ],
      ],
      ['title/index.html', [10, 0.291, 1860, 3.465, 1861, 3.465]],
      [
        'body/index.html',
        [
          4, 0.122, 25, 0.012, 100, 0.009, 101, 0.009, 234, 4.483, 473, 2.956, 693, 3.291, 1496,
          4.483, 1786, 4.063, 1862, 5.12, 1863, 5.12, 1864, 6.535, 1865, 5.12, 1866, 5.12, 1867,
          5.12, 1868, 5.12, 1869, 5.12, 1870, 5.12, 1871, 7.198, 1872, 5.12, 1873, 5.12, 1874, 5.12,
          1875, 7.198, 1876, 8.143, 1877, 5.12, 1878, 5.12, 1879, 5.12, 1880, 8.011, 1881, 5.12,
          1882, 6.535, 1883, 5.12, 1884, 5.12, 1885, 5.12, 1886, 5.12, 1887, 6.535, 1888, 6.535,
          1889, 5.12, 1890, 5.12, 1891, 5.12, 1892, 6.535, 1893, 6.535, 1894, 5.12, 1895, 5.12,
          1896, 5.12, 1897, 5.12, 1898, 5.12, 1899, 4.483, 1900, 5.12, 1901, 5.12, 1902, 5.12, 1903,
          5.12, 1904, 5.12, 1905, 5.12, 1906, 5.12, 1907, 5.12, 1908, 5.12, 1909, 4.483, 1910, 5.12,
          1911, 5.12, 1912, 5.12, 1913, 5.12, 1914, 5.12, 1915, 5.12, 1916, 4.483,
        ],
      ],
      ['title/modules.html', [161, 2.068]],
      [
        'body/modules.html',
        [
          25, 0.009, 100, 0.009, 101, 0.009, 160, 3.913, 161, 1.939, 170, 3.651, 171, 3.651, 172,
          3.651, 173, 3.434, 174, 3.651, 175, 2.94, 176, 3.651, 177, 3.651, 178, 3.651, 179, 3.651,
          180, 3.651, 181, 3.651, 182, 3.651, 183, 3.434, 184, 3.651, 185, 2.94, 1899, 7.397, 1917,
          8.448, 1918, 8.448, 1919, 8.679, 1920, 8.221, 1921, 8.221,
        ],
      ],
      ['title/overview.html', [1922, 4.988]],
      [
        'body/overview.html',
        [
          2, 0.953, 25, 0.012, 100, 0.007, 101, 0.007, 159, 0.773, 160, 6.32, 161, 1.224, 162,
          1.567, 163, 1.699, 164, 1.699, 165, 1.567, 166, 1.699, 167, 1.699, 168, 2.952, 169, 2.952,
          170, 5.356, 171, 4.824, 172, 4.824, 173, 4.683, 174, 3.958, 175, 4.361, 176, 5.286, 177,
          3.958, 178, 3.958, 179, 3.958, 180, 4.622, 181, 3.958, 182, 3.958, 183, 4.799, 184, 3.958,
          185, 4.313, 186, 2.474, 187, 1.699, 188, 1.699, 245, 1.774, 273, 4.429, 277, 3.259, 307,
          2.469, 315, 3.522, 348, 2.952, 349, 2.952, 351, 2.952, 364, 1.63, 370, 3.522, 371, 4.429,
          582, 2.952, 583, 2.952, 584, 2.952, 602, 2.167, 637, 1.454, 676, 2.952, 677, 2.952, 678,
          2.952, 679, 4.979, 788, 2.952, 789, 2.952, 790, 2.952, 791, 4.683, 900, 2.676, 1155,
          4.207, 1222, 2.952, 1223, 2.952, 1224, 2.952, 1297, 3.723, 1301, 3.723, 1325, 2.952, 1326,
          2.952, 1327, 2.952, 1379, 2.952, 1380, 2.952, 1381, 3.958, 1543, 2.952, 1544, 2.952, 1545,
          2.952, 1701, 2.952, 1702, 2.952, 1703, 2.952, 1922, 2.952, 1923, 3.372, 1924, 3.372, 1925,
          3.372, 1926, 3.372, 1927, 3.372, 1928, 3.372,
        ],
      ],
      ['title/properties.html', [11, 0.846, 1824, 3.034]],
      [
        'body/properties.html',
        [
          11, 1.107, 25, 0.011, 100, 0.01, 101, 0.01, 473, 3.785, 1909, 5.738, 1916, 5.738, 1929,
          6.554, 1930, 6.554, 1931, 6.554,
        ],
      ],
      ['title/miscellaneous/variables.html', [1844, 2.228, 1932, 4.386]],
      [
        'body/miscellaneous/variables.html',
        [
          10, 0.336, 23, 3.921, 24, 4.683, 25, 0.012, 27, 0.63, 31, 1.027, 40, 3.058, 63, 3.378, 73,
          2.418, 91, 2.473, 100, 0.007, 101, 0.007, 108, 3.378, 235, 1.865, 318, 4.069, 332, 4.356,
          337, 2.742, 345, 3.184, 380, 3.184, 391, 3.513, 516, 3.378, 528, 2.938, 538, 2.208, 552,
          4.409, 558, 2.742, 563, 2.742, 565, 2.742, 683, 4.668, 700, 5.058, 708, 4.409, 712, 3.184,
          736, 3.184, 919, 4.644, 1007, 4.409, 1020, 3.513, 1079, 3.797, 1080, 3.797, 1133, 3.378,
          1138, 4.069, 1149, 4.069, 1371, 4.409, 1373, 3.184, 1640, 5.46, 1790, 3.513, 1791, 4.864,
          1798, 3.513, 1813, 4.864, 1814, 4.864, 1815, 4.864, 1816, 3.513, 1817, 3.513, 1820, 3.513,
          1822, 5.58, 1844, 2.579, 1932, 3.513, 1933, 6.373, 1934, 5.556, 1935, 4.012, 1936, 5.556,
          1937, 4.012, 1938, 5.556, 1939, 5.556, 1940, 4.012, 1941, 4.012, 1942, 4.012, 1943, 4.012,
          1944, 4.012, 1945, 4.012, 1946, 4.012, 1947, 4.012, 1948, 4.012, 1949, 4.012, 1950, 4.012,
          1951, 4.012, 1952, 4.012, 1953, 4.012, 1954, 4.012, 1955, 4.012, 1956, 5.556, 1957, 5.556,
          1958, 5.556, 1959, 4.012, 1960, 4.012, 1961, 5.556, 1962, 4.012, 1963, 4.012, 1964, 4.012,
          1965, 4.012, 1966, 4.012, 1967, 4.012, 1968, 4.012,
        ],
      ],
    ],
    invertedIndex: [
      [
        '',
        {
          _index: 25,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        '0',
        {
          _index: 1271,
          title: {},
          body: {
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['0,16', { _index: 1967, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['0.0.1', { _index: 1930, title: {}, body: { 'properties.html': {} } }],
      ['0.14.1', { _index: 1831, title: {}, body: { 'dependencies.html': {} } }],
      ['0.2.0', { _index: 1840, title: {}, body: { 'dependencies.html': {} } }],
      ['0.3.20', { _index: 1843, title: {}, body: { 'dependencies.html': {} } }],
      ['0.5.1', { _index: 1830, title: {}, body: { 'dependencies.html': {} } }],
      ['0/1', { _index: 1793, title: {}, body: { 'coverage.html': {} } }],
      ['0/11', { _index: 1806, title: {}, body: { 'coverage.html': {} } }],
      ['0/12', { _index: 1809, title: {}, body: { 'coverage.html': {} } }],
      ['0/15', { _index: 1811, title: {}, body: { 'coverage.html': {} } }],
      ['0/2', { _index: 1807, title: {}, body: { 'coverage.html': {} } }],
      ['0/3', { _index: 1803, title: {}, body: { 'coverage.html': {} } }],
      ['0/4', { _index: 1794, title: {}, body: { 'coverage.html': {} } }],
      ['0/5', { _index: 1797, title: {}, body: { 'coverage.html': {} } }],
      ['0/6', { _index: 1810, title: {}, body: { 'coverage.html': {} } }],
      ['0/7', { _index: 1805, title: {}, body: { 'coverage.html': {} } }],
      ['0/8', { _index: 1804, title: {}, body: { 'coverage.html': {} } }],
      [
        '1',
        {
          _index: 71,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/Init1731534812101.html': {},
            'entities/ReviewsEntity.html': {},
          },
        },
      ],
      ['1.4.7', { _index: 1833, title: {}, body: { 'dependencies.html': {} } }],
      ['1/1', { _index: 1821, title: {}, body: { 'coverage.html': {} } }],
      [
        '10',
        {
          _index: 1108,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'classes/SetUserProfileDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      ['10.0.0', { _index: 1826, title: {}, body: { 'dependencies.html': {} } }],
      ['10.0.2', { _index: 1829, title: {}, body: { 'dependencies.html': {} } }],
      ['10.2.0', { _index: 1827, title: {}, body: { 'dependencies.html': {} } }],
      ['10.4.9', { _index: 1836, title: {}, body: { 'dependencies.html': {} } }],
      [
        '100',
        {
          _index: 1501,
          title: {},
          body: { 'injectables/StripePaymentGateway.html': {}, 'coverage.html': {} },
        },
      ],
      ['1000', { _index: 1946, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['11', { _index: 1926, title: {}, body: { 'overview.html': {} } }],
      ['14', { _index: 1925, title: {}, body: { 'overview.html': {} } }],
      [
        '16',
        {
          _index: 568,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      ['17', { _index: 1923, title: {}, body: { 'overview.html': {} } }],
      ['17.3.1', { _index: 1842, title: {}, body: { 'dependencies.html': {} } }],
      [
        '20',
        {
          _index: 1446,
          title: {},
          body: { 'classes/SignUpPartnerDto.html': {}, 'entities/TagEntity.html': {} },
        },
      ],
      ['2024', { _index: 1481, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } }],
      [
        '28.acacia',
        { _index: 1482, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      ['3', { _index: 1928, title: {}, body: { 'overview.html': {} } }],
      ['3.685.0', { _index: 1825, title: {}, body: { 'dependencies.html': {} } }],
      ['30', { _index: 1927, title: {}, body: { 'overview.html': {} } }],
      ['4', { _index: 1924, title: {}, body: { 'overview.html': {} } }],
      ['4.5.0', { _index: 1835, title: {}, body: { 'dependencies.html': {} } }],
      ['4/6', { _index: 1800, title: {}, body: { 'coverage.html': {} } }],
      ['4/8', { _index: 1802, title: {}, body: { 'coverage.html': {} } }],
      [
        '5',
        {
          _index: 900,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/ReviewsEntity.html': {},
            'overview.html': {},
          },
        },
      ],
      ['5/10', { _index: 1808, title: {}, body: { 'coverage.html': {} } }],
      ['50', { _index: 1801, title: {}, body: { 'coverage.html': {} } }],
      ['6/8', { _index: 1796, title: {}, body: { 'coverage.html': {} } }],
      ['64', { _index: 1947, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['66', { _index: 1799, title: {}, body: { 'coverage.html': {} } }],
      ['7.8.1', { _index: 1841, title: {}, body: { 'dependencies.html': {} } }],
      ['75', { _index: 1795, title: {}, body: { 'coverage.html': {} } }],
      [
        '8',
        {
          _index: 565,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['8.13.1', { _index: 1838, title: {}, body: { 'dependencies.html': {} } }],
      ['9/12', { _index: 1812, title: {}, body: { 'coverage.html': {} } }],
      ['_', { _index: 1964, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'acceptlanguageresolver',
        { _index: 203, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'accesskeyid',
        {
          _index: 631,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      ['acesso', { _index: 714, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'action',
        {
          _index: 129,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'add',
        {
          _index: 104,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'addmanytoone1731880851697',
        {
          _index: 102,
          title: { 'classes/AddManyToOne1731880851697.html': {} },
          body: { 'classes/AddManyToOne1731880851697.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'addmember',
        { _index: 1127, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'addmember(partnerid',
        { _index: 1131, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      ['addmembers', { _index: 1552, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'addmembers(currentuser',
        { _index: 1558, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'address',
        {
          _index: 471,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'addteammemberdto',
        {
          _index: 132,
          title: { 'classes/AddteamMemberDto.html': {} },
          body: {
            'classes/AddteamMemberDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'addteammembersdto',
        {
          _index: 1134,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      [
        'addteammembersdto.members',
        {
          _index: 1174,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      ['admin', { _index: 1852, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      [
        'adress.inteface',
        {
          _index: 497,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'adress.inteface.ts',
        {
          _index: 604,
          title: {},
          body: { 'interfaces/CustomerAddressInterface.html': {}, 'coverage.html': {} },
        },
      ],
      ['afterload', { _index: 651, title: {}, body: { 'entities/FileEntity.html': {} } }],
      ['age=0', { _index: 465, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['age=172800', { _index: 463, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['age=86400', { _index: 458, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['alreadyexists', { _index: 418, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['amazing', { _index: 1900, title: {}, body: { 'index.html': {} } }],
      ['amazon', { _index: 704, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'amount',
        { _index: 1470, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'apiversion',
        { _index: 1480, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      ['app', { _index: 1878, title: {}, body: { 'index.html': {} } }],
      ['app_guard', { _index: 222, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['applications', { _index: 1870, title: {}, body: { 'index.html': {} } }],
      [
        'appmodule',
        {
          _index: 160,
          title: { 'modules/AppModule.html': {} },
          body: { 'modules/AppModule.html': {}, 'modules.html': {}, 'overview.html': {} },
        },
      ],
      ['apps/auth/auth.module', { _index: 195, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'apps/auth/auth.service',
        { _index: 1006, title: {}, body: { 'guards/JwtAuthGuard.html': {} } },
      ],
      [
        'apps/files/file.module',
        { _index: 196, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/followers/followers.module',
        { _index: 215, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      ['apps/i18n/i18n.module', { _index: 210, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'apps/notifications/notifications.module',
        { _index: 197, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/partners/partners.module',
        { _index: 198, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/partners/partners.service',
        { _index: 1008, title: {}, body: { 'guards/JwtAuthGuard.html': {} } },
      ],
      ['apps/payment', { _index: 211, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'apps/plans/plans.module',
        { _index: 217, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/products/products.module',
        { _index: 202, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/reviews/reviews.module',
        { _index: 216, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/roles/roles.module',
        { _index: 220, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/subscribers/subscribers.module',
        { _index: 214, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      ['apps/tags/tags.module', { _index: 218, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'apps/teams/teams.module',
        { _index: 219, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/transactions/transactions.module',
        { _index: 199, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/users/users.module',
        { _index: 200, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      [
        'apps/users/users.service',
        {
          _index: 326,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      [
        'args',
        {
          _index: 421,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'controllers/PartnerTeamsController.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      ['arquivo', { _index: 701, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['array', { _index: 157, title: {}, body: { 'classes/AddteamMemberDto.html': {} } }],
      [
        "array'})@arrayminsize(1",
        { _index: 144, title: {}, body: { 'classes/AddteamMemberDto.html': {} } },
      ],
      ['arrayminsize', { _index: 150, title: {}, body: { 'classes/AddteamMemberDto.html': {} } }],
      ['arrayminsize(1', { _index: 158, title: {}, body: { 'classes/AddteamMemberDto.html': {} } }],
      [
        'async',
        {
          _index: 16,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/Manytoone1731887989393.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['atrave', { _index: 1941, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'auth',
        {
          _index: 252,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      ['auth.controller', { _index: 353, title: {}, body: { 'modules/AuthModule.html': {} } }],
      [
        'auth.service',
        {
          _index: 274,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'modules/AuthModule.html': {} },
        },
      ],
      [
        'auth/auth',
        {
          _index: 517,
          title: {},
          body: { 'classes/CreatePartnerDto.html': {}, 'classes/CreateUserDto.html': {} },
        },
      ],
      [
        'authcontroller',
        {
          _index: 249,
          title: { 'controllers/AuthController.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'authjwtrefreshguard',
        {
          _index: 306,
          title: { 'guards/AuthJwtRefreshGuard.html': {} },
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'authmodule',
        {
          _index: 170,
          title: { 'modules/AuthModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['author', { _index: 1909, title: {}, body: { 'index.html': {}, 'properties.html': {} } }],
      [
        'authservice',
        {
          _index: 273,
          title: { 'injectables/AuthService.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['automatically', { _index: 402, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'autorenewal',
        { _index: 521, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      ['available', { _index: 1921, title: {}, body: { 'modules.html': {} } }],
      [
        'avatar_id',
        {
          _index: 865,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'await',
        {
          _index: 74,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/Manytoone1731887989393.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'aws',
        {
          _index: 33,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'awss3',
        {
          _index: 1,
          title: { 'classes/AWSS3.html': {} },
          body: { 'classes/AWSS3.html': {}, 'coverage.html': {} },
        },
      ],
      ['backers', { _index: 1901, title: {}, body: { 'index.html': {} } }],
      [
        'badgatewayexception',
        { _index: 1208, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'badgatewayexception(error.message',
        { _index: 1218, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'badrequestexception',
        {
          _index: 269,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'badrequestexception(error.message',
        {
          _index: 295,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'banco',
        {
          _index: 340,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/FileService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['banner', { _index: 1090, title: {}, body: { 'entities/PartnerProfileEntity.html': {} } }],
      [
        'banner_id',
        {
          _index: 885,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerProfileEntity.html': {} },
        },
      ],
      [
        'baseentity',
        { _index: 1463, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'beforeinsert',
        {
          _index: 1070,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'between',
        {
          _index: 899,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/ReviewsEntity.html': {} },
        },
      ],
      [
        'billingcycleanchor',
        { _index: 522, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      ['birth', { _index: 1407, title: {}, body: { 'classes/SetUserProfileDto.html': {} } }],
      [
        'birth_date',
        {
          _index: 863,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'body',
        {
          _index: 79,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'controllers/AuthController.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "body('partner_id",
        { _index: 1164, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'boolean',
        {
          _index: 528,
          title: {},
          body: {
            'classes/CreateSubscriptionDto.html': {},
            'guards/RolesGuard.html': {},
            'entities/UserEntity.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'bootstrap',
        {
          _index: 165,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'coverage.html': {},
            'miscellaneous/functions.html': {},
            'overview.html': {},
          },
        },
      ],
      ['browse', { _index: 1919, title: {}, body: { 'modules.html': {} } }],
      ['browser', { _index: 1917, title: {}, body: { 'modules.html': {} } }],
      [
        'bucket',
        {
          _index: 77,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      [
        'bucketname',
        {
          _index: 13,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['building', { _index: 1865, title: {}, body: { 'index.html': {} } }],
      ['business', { _index: 509, title: {}, body: { 'classes/CreatePartnerDto.html': {} } }],
      [
        'business_id',
        {
          _index: 507,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      ['bv1', { _index: 464, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['bv2', { _index: 466, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['bytes', { _index: 1953, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'canactivate',
        {
          _index: 311,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'canactivate(context',
        {
          _index: 317,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      ['card', { _index: 1507, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } }],
      [
        'cascade',
        {
          _index: 787,
          title: {},
          body: {
            'entities/FollowerEntity.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        "cascade'})@joincolumn({name",
        {
          _index: 776,
          title: {},
          body: {
            'entities/FollowerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
          },
        },
      ],
      [
        'catch',
        {
          _index: 293,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/FileService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'catch((error',
        {
          _index: 85,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'category',
        {
          _index: 883,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
          },
        },
      ],
      ['cents', { _index: 1503, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } }],
      [
        'character',
        {
          _index: 578,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/Init1731534812101.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        "character'})@matches(passregex.uppercase",
        {
          _index: 562,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'characters',
        {
          _index: 566,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'chargecustomer',
        { _index: 1467, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'chargecustomer(customerid',
        { _index: 1469, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'charging',
        { _index: 1498, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'check',
        {
          _index: 898,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/ReviewsEntity.html': {} },
        },
      ],
      ['check(`"stars', { _index: 1353, title: {}, body: { 'entities/ReviewsEntity.html': {} } }],
      [
        'checkparnterowener',
        { _index: 1233, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'checkparnterowener(user',
        { _index: 1240, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'checkpassword(password',
        { _index: 1642, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'checkrecoverpass(token',
        { _index: 1644, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'checkrefreshtokenfromdb',
        { _index: 342, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } },
      ],
      [
        'chk_76682f10516849abb17cd501b9',
        { _index: 897, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'city',
        {
          _index: 605,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'class',
        {
          _index: 0,
          title: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/Init1731534812101.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'classes',
        {
          _index: 2,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/Init1731534812101.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'overview.html': {},
          },
        },
      ],
      ['clean', { _index: 374, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'client',
        {
          _index: 75,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'cluster_appmodule',
        { _index: 168, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_appmodule_imports',
        { _index: 169, title: {}, body: { 'modules/AppModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_authmodule',
        { _index: 348, title: {}, body: { 'modules/AuthModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_authmodule_exports',
        { _index: 351, title: {}, body: { 'modules/AuthModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_authmodule_imports',
        { _index: 350, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'cluster_authmodule_providers',
        { _index: 349, title: {}, body: { 'modules/AuthModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_customi18nmodule',
        {
          _index: 582,
          title: {},
          body: { 'modules/CustomI18nModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_customi18nmodule_exports',
        {
          _index: 583,
          title: {},
          body: { 'modules/CustomI18nModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_customi18nmodule_providers',
        {
          _index: 584,
          title: {},
          body: { 'modules/CustomI18nModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_filemodule',
        { _index: 676, title: {}, body: { 'modules/FileModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_filemodule_exports',
        { _index: 678, title: {}, body: { 'modules/FileModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_filemodule_providers',
        { _index: 677, title: {}, body: { 'modules/FileModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_followersmodule',
        {
          _index: 788,
          title: {},
          body: { 'modules/FollowersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_followersmodule_exports',
        {
          _index: 790,
          title: {},
          body: { 'modules/FollowersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_followersmodule_providers',
        {
          _index: 789,
          title: {},
          body: { 'modules/FollowersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_partnersmodule',
        {
          _index: 1222,
          title: {},
          body: { 'modules/PartnersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_partnersmodule_exports',
        {
          _index: 1223,
          title: {},
          body: { 'modules/PartnersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_partnersmodule_imports',
        { _index: 1225, title: {}, body: { 'modules/PartnersModule.html': {} } },
      ],
      [
        'cluster_partnersmodule_providers',
        {
          _index: 1224,
          title: {},
          body: { 'modules/PartnersModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_paymentgatewaymodule',
        {
          _index: 1325,
          title: {},
          body: { 'modules/PaymentGatewayModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_paymentgatewaymodule_exports',
        {
          _index: 1327,
          title: {},
          body: { 'modules/PaymentGatewayModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_paymentgatewaymodule_providers',
        {
          _index: 1326,
          title: {},
          body: { 'modules/PaymentGatewayModule.html': {}, 'overview.html': {} },
        },
      ],
      [
        'cluster_rolesmodule',
        { _index: 1379, title: {}, body: { 'modules/RolesModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_rolesmodule_providers',
        { _index: 1380, title: {}, body: { 'modules/RolesModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_teamsmodule',
        { _index: 1543, title: {}, body: { 'modules/TeamsModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_teamsmodule_exports',
        { _index: 1545, title: {}, body: { 'modules/TeamsModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_teamsmodule_providers',
        { _index: 1544, title: {}, body: { 'modules/TeamsModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_usersmodule',
        { _index: 1701, title: {}, body: { 'modules/UsersModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_usersmodule_exports',
        { _index: 1703, title: {}, body: { 'modules/UsersModule.html': {}, 'overview.html': {} } },
      ],
      [
        'cluster_usersmodule_imports',
        { _index: 1704, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'cluster_usersmodule_providers',
        { _index: 1702, title: {}, body: { 'modules/UsersModule.html': {}, 'overview.html': {} } },
      ],
      [
        'code',
        {
          _index: 1395,
          title: {},
          body: { 'classes/SetPartnerProfileDto.html': {}, 'classes/SetUserProfileDto.html': {} },
        },
      ],
      ['coincide', { _index: 1730, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'column',
        {
          _index: 652,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'column({length',
        {
          _index: 1107,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'column({nullable',
        {
          _index: 1097,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'column({type',
        {
          _index: 1113,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'column({unique',
        {
          _index: 1039,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'com',
        {
          _index: 380,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['comes', { _index: 400, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'comment',
        {
          _index: 896,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/ReviewsEntity.html': {} },
        },
      ],
      ['como', { _index: 383, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['companyid', { _index: 737, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['compara', { _index: 1943, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'comparehash',
        {
          _index: 1080,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'comparehash(password',
        { _index: 1643, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'comparehash(refreshtoken',
        { _index: 1759, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      ['comparehash(token', { _index: 1645, title: {}, body: { 'entities/UserEntity.html': {} } }],
      [
        'complement',
        {
          _index: 861,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      ['configure', { _index: 1253, title: {}, body: { 'injectables/PartnersService.html': {} } }],
      [
        "console.log('here",
        { _index: 1691, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'console.log(lang',
        { _index: 599, title: {}, body: { 'injectables/CustomI18nService.html': {} } },
      ],
      [
        'const',
        {
          _index: 91,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'constraint',
        {
          _index: 122,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'constructor',
        {
          _index: 20,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'constructor(filerepository',
        { _index: 692, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'constructor(followersrepository',
        { _index: 802, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'constructor(i18n',
        {
          _index: 589,
          title: {},
          body: { 'injectables/CustomI18nService.html': {}, 'classes/LoginDto.html': {} },
        },
      ],
      [
        'constructor(id',
        {
          _index: 1085,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'constructor(jwtservice',
        {
          _index: 313,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        'constructor(partnerrepository',
        { _index: 1235, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'constructor(paymentgatewayfactory',
        { _index: 1331, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'constructor(private',
        {
          _index: 597,
          title: {},
          body: {
            'injectables/CustomI18nService.html': {},
            'classes/LoginDto.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'constructor(reflector',
        {
          _index: 1000,
          title: {},
          body: { 'guards/JwtAuthGuard.html': {}, 'guards/RolesGuard.html': {} },
        },
      ],
      [
        'constructor(stripepaymentgateway',
        { _index: 1300, title: {}, body: { 'injectables/PaymentGatewayFactory.html': {} } },
      ],
      [
        'constructor(teamsrepository',
        { _index: 1554, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'constructor(userrepository',
        { _index: 1715, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'contain',
        {
          _index: 557,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      ['contendo', { _index: 720, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'contenttype',
        {
          _index: 82,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'context',
        {
          _index: 320,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'context.getclass',
        {
          _index: 1013,
          title: {},
          body: { 'guards/JwtAuthGuard.html': {}, 'guards/RolesGuard.html': {} },
        },
      ],
      [
        'context.gethandler',
        {
          _index: 1011,
          title: {},
          body: { 'guards/JwtAuthGuard.html': {}, 'guards/RolesGuard.html': {} },
        },
      ],
      [
        'context.switchtohttp().getrequest',
        {
          _index: 327,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      ['conteúdo', { _index: 721, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['controll', { _index: 379, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'controller',
        {
          _index: 248,
          title: {
            'controllers/AuthController.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
          body: {
            'controllers/AuthController.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "controller('auth",
        { _index: 285, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        "controller('partners",
        {
          _index: 1160,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
          },
        },
      ],
      [
        "controller('users",
        { _index: 1687, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'controllers',
        {
          _index: 245,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'modules/AuthModule.html': {},
            'modules/FileModule.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'controllers/partners.controller',
        { _index: 1228, title: {}, body: { 'modules/PartnersModule.html': {} } },
      ],
      [
        'controllers/partners.teams.controller',
        { _index: 1230, title: {}, body: { 'modules/PartnersModule.html': {} } },
      ],
      [
        'convert',
        { _index: 1502, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'cookie',
        {
          _index: 303,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['cookieresolver', { _index: 204, title: {}, body: { 'modules/AppModule.html': {} } }],
      ["cookieresolver(['lang", { _index: 244, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['cookies', { _index: 375, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'copy',
        {
          _index: 1150,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
          },
        },
      ],
      [
        'copy.ts',
        {
          _index: 1814,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'country',
        {
          _index: 606,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'countuserfollowers',
        { _index: 797, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'countuserfollowers(partner',
        { _index: 805, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'countuserfollows',
        { _index: 798, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'countuserfollows(user',
        { _index: 807, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'coupon',
        {
          _index: 472,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
          },
        },
      ],
      [
        'couponcode',
        { _index: 523, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'coverage',
        {
          _index: 1786,
          title: { 'coverage.html': {} },
          body: { 'coverage.html': {}, 'index.html': {} },
        },
      ],
      [
        'create',
        {
          _index: 1184,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'create(@body',
        { _index: 1688, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'create(@currentuser',
        { _index: 1214, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'create(createuserdto',
        {
          _index: 1665,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'create(current',
        { _index: 1188, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'create(currentuser',
        { _index: 1242, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      ['create(user', { _index: 1560, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'createcustomer',
        {
          _index: 1312,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'createcustomer(createcustomerdto',
        {
          _index: 1315,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'createcustomerdto',
        {
          _index: 467,
          title: { 'classes/CreateCustomerDto.html': {} },
          body: {
            'classes/CreateCustomerDto.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createcustomerdto.address',
        { _index: 1487, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.coupon',
        { _index: 1493, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.description',
        { _index: 1491, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.email',
        { _index: 1485, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.invoice_settings',
        { _index: 1489, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.metadata',
        { _index: 1490, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.name',
        { _index: 1484, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.payment_method',
        { _index: 1488, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.phone',
        { _index: 1486, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'createcustomerdto.tax_exempt',
        { _index: 1492, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'created_at',
        {
          _index: 840,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'classes/SoftFieldsForEntities.html': {} },
        },
      ],
      [
        'createdatecolumn',
        {
          _index: 784,
          title: {},
          body: { 'entities/FollowerEntity.html': {}, 'classes/SoftFieldsForEntities.html': {} },
        },
      ],
      [
        'createdatecolumn({type',
        { _index: 1453, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'createfiledto',
        {
          _index: 501,
          title: { 'classes/CreateFileDto.html': {} },
          body: {
            'classes/CreateFileDto.html': {},
            'classes/UpdateFileDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createparamdecorator((data',
        { _index: 1956, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'createparnterdto',
        { _index: 1189, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'createpartnerdto',
        {
          _index: 504,
          title: { 'classes/CreatePartnerDto.html': {} },
          body: {
            'classes/CreatePartnerDto.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'classes/UpdatePartnerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createpartnerdto.legal_name',
        { _index: 1264, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'createpartnerdto.legal_name.tolowercase',
        { _index: 1265, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'createpartnerteam',
        { _index: 1128, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'createpartnerteam(partnerid',
        { _index: 1137, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'createsubscription',
        {
          _index: 1313,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'createsubscription(createsubscriptiondto',
        {
          _index: 1317,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'createsubscriptiondto',
        {
          _index: 519,
          title: { 'classes/CreateSubscriptionDto.html': {} },
          body: {
            'classes/CreateSubscriptionDto.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createteamdto',
        {
          _index: 544,
          title: { 'classes/CreateTeamDto.html': {} },
          body: {
            'classes/CreateTeamDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/TeamsService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'createteamdto.name',
        {
          _index: 1170,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      [
        'createuserdto',
        {
          _index: 548,
          title: { 'classes/CreateUserDto.html': {} },
          body: {
            'classes/CreateUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'credentials',
        {
          _index: 630,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      [
        'crypto',
        {
          _index: 60,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['ctx', { _index: 1957, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'ctx.switchtohttp().getrequest',
        { _index: 1958, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'currency',
        { _index: 1504, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      ['current', { _index: 1191, title: {}, body: { 'controllers/PartnersController.html': {} } }],
      [
        'current_timestamp(6',
        { _index: 1454, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      ['currentcompany', { _index: 459, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'currentpartner',
        {
          _index: 1138,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'currentuser',
        {
          _index: 1133,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['cuserid', { _index: 460, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['custom', { _index: 243, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'customer',
        {
          _index: 524,
          title: {},
          body: {
            'classes/CreateSubscriptionDto.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'customer.dto',
        {
          _index: 1323,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'customer.dto.ts',
        {
          _index: 470,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'customer.dto.ts:10',
        {
          _index: 489,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:11',
        {
          _index: 485,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:12',
        {
          _index: 487,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:13',
        {
          _index: 482,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:14',
        {
          _index: 491,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:15',
        {
          _index: 495,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:16',
        { _index: 481, title: {}, body: { 'classes/CreateCustomerDto.html': {} } },
      ],
      [
        'customer.dto.ts:6',
        {
          _index: 483,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:7',
        {
          _index: 488,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:8',
        {
          _index: 490,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customer.dto.ts:9',
        {
          _index: 480,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'customeraddressinterface',
        {
          _index: 479,
          title: { 'interfaces/CustomerAddressInterface.html': {} },
          body: {
            'classes/CreateCustomerDto.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'classes/UpdateCustomerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'customerid',
        { _index: 1472, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'customermetadatainterface',
        {
          _index: 486,
          title: { 'interfaces/CustomerMetadataInterface.html': {} },
          body: {
            'classes/CreateCustomerDto.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/UpdateCustomerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'customi18nmodule',
        {
          _index: 171,
          title: { 'modules/CustomI18nModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'customi18nservice',
        {
          _index: 277,
          title: { 'injectables/CustomI18nService.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'injectables/FollowersService.html': {},
            'classes/LoginDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['d', { _index: 1962, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['da', { _index: 728, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'dados',
        {
          _index: 731,
          title: {},
          body: { 'injectables/FileService.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      ['dark', { _index: 1855, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      ['datasource', { _index: 194, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['datasourceoptions', { _index: 193, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'date',
        {
          _index: 864,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'de',
        {
          _index: 708,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['deados', { _index: 341, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } }],
      [
        'declarations',
        {
          _index: 164,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'decorators',
        {
          _index: 138,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'controllers/AuthController.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'entities/FileEntity.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'classes/LoginDto.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'decorators/current',
        {
          _index: 1148,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'decorators/public.decorator',
        {
          _index: 284,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      [
        'decorators/role.decorator',
        { _index: 1372, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'default',
        {
          _index: 23,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerProfileEntity.html': {},
            'guards/RolesGuard.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'entities/UserSettingsEntity.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'default_payment_method',
        { _index: 998, title: {}, body: { 'interfaces/InvoiceSettingsInterface.html': {} } },
      ],
      [
        'defined',
        {
          _index: 21,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['deleta', { _index: 699, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'delete',
        {
          _index: 17,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'delete(filekey',
        {
          _index: 30,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'delete(ilekey',
        { _index: 670, title: {}, body: { 'interfaces/FileImplInterface.html': {} } },
      ],
      [
        'deletecmd',
        {
          _index: 97,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['deleted', { _index: 763, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'deleted_at',
        {
          _index: 848,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'classes/SoftFieldsForEntities.html': {} },
        },
      ],
      [
        'deletedatecolumn',
        { _index: 1462, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'deletedatecolumn({type',
        { _index: 1456, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      ['deletefile', { _index: 688, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'deletefile(fileid',
        { _index: 697, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'deleteobjectcommand',
        {
          _index: 53,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'deleting',
        {
          _index: 99,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['deliver', { _index: 449, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'dependencies',
        {
          _index: 162,
          title: { 'dependencies.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'dependencies.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'description',
        {
          _index: 473,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
            'index.html': {},
            'properties.html': {},
          },
        },
      ],
      ['development', { _index: 1879, title: {}, body: { 'index.html': {} } }],
      ['digital', { _index: 621, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      [
        'digitaloceanspaces',
        {
          _index: 614,
          title: { 'classes/DigitalOceanSpaces.html': {} },
          body: {
            'classes/DigitalOceanSpaces.html': {},
            'modules/FileModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['documentation', { _index: 1787, title: {}, body: { 'coverage.html': {} } }],
      [
        "doesn't",
        {
          _index: 1024,
          title: {},
          body: {
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'done',
        {
          _index: 84,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'down',
        {
          _index: 109,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'down(queryrunner',
        {
          _index: 112,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'drop',
        {
          _index: 121,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      ['dtos/add', { _index: 1573, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'dtos/create',
        {
          _index: 1210,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'dtos/follow',
        { _index: 819, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'dtos/login.dto',
        { _index: 275, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        'dtos/set',
        {
          _index: 1212,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'dtos/signup',
        {
          _index: 282,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        'dtos/signup.dto',
        {
          _index: 276,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        'dtos/unfollow',
        { _index: 821, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'dtos/update',
        {
          _index: 1211,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['dtos/user', { _index: 1686, title: {}, body: { 'controllers/UsersController.html': {} } }],
      [
        'e',
        {
          _index: 552,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'injectables/FileService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['e2e', { _index: 1889, title: {}, body: { 'index.html': {} } }],
      ['east', { _index: 70, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['efficient', { _index: 1866, title: {}, body: { 'index.html': {} } }],
      [
        'em',
        {
          _index: 391,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'email',
        {
          _index: 422,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/Init1731534812101.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'en',
        {
          _index: 230,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'classes/Init1731534812101.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      ['encontrada', { _index: 760, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['encontrado', { _index: 755, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['encryptpass', { _index: 1638, title: {}, body: { 'entities/UserEntity.html': {} } }],
      [
        'endpoint',
        {
          _index: 627,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      [
        'entities',
        {
          _index: 637,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'entities.ts',
        {
          _index: 1452,
          title: {},
          body: { 'classes/SoftFieldsForEntities.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'entities.ts:13',
        { _index: 1455, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'entities.ts:19',
        { _index: 1460, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'entities.ts:24',
        { _index: 1457, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'entities/file.entity',
        {
          _index: 682,
          title: {},
          body: { 'modules/FileModule.html': {}, 'injectables/FileService.html': {} },
        },
      ],
      [
        'entities/followers.entity',
        {
          _index: 793,
          title: {},
          body: { 'modules/FollowersModule.html': {}, 'injectables/FollowersService.html': {} },
        },
      ],
      [
        'entities/partner',
        {
          _index: 1227,
          title: {},
          body: { 'modules/PartnersModule.html': {}, 'injectables/PartnersService.html': {} },
        },
      ],
      [
        'entities/partner.entity',
        {
          _index: 1154,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'entities/team',
        {
          _index: 1549,
          title: {},
          body: { 'modules/TeamsModule.html': {}, 'injectables/TeamsService.html': {} },
        },
      ],
      [
        'entities/teams.entity',
        {
          _index: 1548,
          title: {},
          body: { 'modules/TeamsModule.html': {}, 'injectables/TeamsService.html': {} },
        },
      ],
      [
        'entities/user',
        {
          _index: 1708,
          title: {},
          body: { 'modules/UsersModule.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'entities/user.entity',
        {
          _index: 1683,
          title: {},
          body: {
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'entity',
        {
          _index: 635,
          title: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'enum',
        {
          _index: 1114,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      ["enum('dark", { _index: 871, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ["enum('en", { _index: 874, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ["enum('male", { _index: 854, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'enumerations',
        {
          _index: 1845,
          title: { 'miscellaneous/enumerations.html': {} },
          body: { 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'enums/locales.enum',
        {
          _index: 1434,
          title: {},
          body: { 'classes/SetUserSettingsDto.html': {}, 'entities/UserSettingsEntity.html': {} },
        },
      ],
      ['enums/roles.enum', { _index: 1374, title: {}, body: { 'guards/RolesGuard.html': {} } }],
      [
        'enums/theme.enum',
        {
          _index: 1118,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      ['enviado', { _index: 1944, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'error',
        {
          _index: 294,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ["error('arquivo", { _index: 753, title: {}, body: { 'injectables/FileService.html': {} } }],
      ["error('cant", { _index: 764, title: {}, body: { 'injectables/FileService.html': {} } }],
      ["error('empresa", { _index: 758, title: {}, body: { 'injectables/FileService.html': {} } }],
      ["error('usuário", { _index: 738, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['error(`aws', { _index: 87, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['error(`filestore', { _index: 667, title: {}, body: { 'entities/FileEntity.html': {} } }],
      [
        "error(this.i18n.t('auth.validations.signup_failed",
        {
          _index: 292,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        "error(this.i18n.t('auth.validations.user_or_password_not_found",
        { _index: 441, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        "error(this.i18n.t('partners..validations.not_found",
        { _index: 828, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        "error(this.i18n.t('partners.validations.not_found",
        {
          _index: 827,
          title: {},
          body: {
            'injectables/FollowersService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "error(this.i18n.t('partners.validations.update_not_found",
        { _index: 1289, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        "error(this.i18n.t('teams.validations.not_a_owner",
        { _index: 1167, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        "error(this.i18n.t('teams.validations.not_found",
        { _index: 1586, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        "error(this.i18n.t('users.validations.not_found",
        { _index: 823, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        "error(this.i18n.t('users.validations.update_not_found",
        { _index: 1776, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'error.message',
        {
          _index: 90,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'es',
        {
          _index: 876,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      ['example', { _index: 1875, title: {}, body: { 'index.html': {} } }],
      [
        'exclude',
        {
          _index: 641,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'exclude()@column',
        {
          _index: 645,
          title: {},
          body: { 'entities/FileEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'exclude()@column({nullable',
        { _index: 1625, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'executioncontext',
        {
          _index: 318,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'exempt',
        {
          _index: 493,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'expiresin',
        {
          _index: 362,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        'export',
        {
          _index: 65,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'exports',
        {
          _index: 167,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'express',
        {
          _index: 280,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'express.multer.file',
        {
          _index: 49,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'extends',
        {
          _index: 660,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'extractfromheaders',
        {
          _index: 312,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      [
        'extractfromheaders(request',
        {
          _index: 321,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      [
        'failed',
        {
          _index: 88,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      ['fallbacklanguage', { _index: 229, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['false', { _index: 1758, title: {}, body: { 'injectables/UsersService.html': {} } }],
      ['faz', { _index: 726, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'female',
        {
          _index: 855,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'fields',
        {
          _index: 658,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'file',
        {
          _index: 5,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'file.buffer',
        {
          _index: 80,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'file.constants',
        {
          _index: 684,
          title: {},
          body: { 'modules/FileModule.html': {}, 'injectables/FileService.html': {} },
        },
      ],
      ['file.dto', { _index: 1602, title: {}, body: { 'classes/UpdateFileDto.html': {} } }],
      [
        'file.dto.ts',
        {
          _index: 503,
          title: {},
          body: {
            'classes/CreateFileDto.html': {},
            'classes/UpdateFileDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'file.id',
        {
          _index: 1092,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'file.impl.interface',
        {
          _index: 56,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      ['file.key', { _index: 752, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'file.mimetype',
        {
          _index: 83,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['file.service', { _index: 681, title: {}, body: { 'modules/FileModule.html': {} } }],
      [
        'file_service_provider',
        {
          _index: 683,
          title: {},
          body: {
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'fileentity',
        {
          _index: 636,
          title: { 'entities/FileEntity.html': {} },
          body: {
            'entities/FileEntity.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['filefromdb', { _index: 750, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['fileid', { _index: 709, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'fileimplinterface',
        {
          _index: 9,
          title: { 'interfaces/FileImplInterface.html': {} },
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'filekey',
        {
          _index: 38,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
          },
        },
      ],
      [
        'filemodule',
        {
          _index: 172,
          title: { 'modules/FileModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/FileModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'filename',
        {
          _index: 50,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      ['filerepository', { _index: 696, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'files',
        {
          _index: 659,
          title: {},
          body: { 'entities/FileEntity.html': {}, 'classes/Init1731534812101.html': {} },
        },
      ],
      ['files"("id', { _index: 957, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'files/entities/file.entity',
        {
          _index: 1117,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'fileservice',
        {
          _index: 679,
          title: { 'injectables/FileService.html': {} },
          body: {
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'fileserviceprovider',
        { _index: 694, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      ['filestorage', { _index: 639, title: {}, body: { 'entities/FileEntity.html': {} } }],
      [
        'find',
        {
          _index: 1566,
          title: {},
          body: { 'injectables/TeamsService.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'findall',
        {
          _index: 1129,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      [
        "findall(@param('partner_id",
        { _index: 1162, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'findall(id',
        { _index: 1141, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'findall(partnerid',
        { _index: 1562, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      ['findbyemail', { _index: 1711, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'findbyemail(email',
        { _index: 1722, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'findbyid',
        {
          _index: 1185,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "findbyid(@param('id",
        { _index: 1693, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        "findbyid(@param('partner_id",
        { _index: 1219, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      ['findbyid(id', { _index: 1564, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'findbyid(partnerid',
        {
          _index: 1193,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'findbyid(userid',
        {
          _index: 1667,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'findoneoptions',
        { _index: 1245, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'findoptions',
        { _index: 1256, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'first',
        {
          _index: 1411,
          title: {},
          body: { 'classes/SetUserProfileDto.html': {}, 'classes/SignUpPartnerDto.html': {} },
        },
      ],
      [
        'first_name',
        {
          _index: 857,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'fk_0bb30eecfe3e109dd0c5fbfbc50',
        { _index: 977, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'fk_2a67fee319e78de064f02103478',
        { _index: 980, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'fk_35ba194e002c739c3caf41fdac4',
        { _index: 981, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'fk_37fe67a713a33c9385ede5782df',
        { _index: 986, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'fk_a5dd1e5a6d76ed2607dd31b0e62',
        { _index: 978, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'fk_ee316e71a670dca8d696490aeeb',
        { _index: 987, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'fk_fde44edfeb831a0f12733b09383',
        {
          _index: 123,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
          },
        },
      ],
      [
        'fk_followers_partner_id',
        {
          _index: 779,
          title: {},
          body: { 'entities/FollowerEntity.html': {}, 'classes/Init1731534812101.html': {} },
        },
      ],
      [
        'fk_followers_user_id',
        {
          _index: 782,
          title: {},
          body: { 'entities/FollowerEntity.html': {}, 'classes/Init1731534812101.html': {} },
        },
      ],
      [
        'fk_partner_profile_id',
        {
          _index: 964,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerEntity.html': {} },
        },
      ],
      [
        'fk_partner_settings_id',
        {
          _index: 966,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerEntity.html': {} },
        },
      ],
      [
        'fk_partner_user_id',
        {
          _index: 962,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/ReviewsEntity.html': {} },
        },
      ],
      [
        'fk_profile_banner_id',
        {
          _index: 960,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerProfileEntity.html': {} },
        },
      ],
      [
        'fk_profile_logo_id',
        {
          _index: 959,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerProfileEntity.html': {} },
        },
      ],
      [
        'fk_profile_partner_id',
        {
          _index: 958,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerProfileEntity.html': {} },
        },
      ],
      [
        'fk_profile_photo_id',
        {
          _index: 956,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'fk_profile_user_id',
        {
          _index: 954,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'fk_reviews_user_id',
        {
          _index: 961,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/ReviewsEntity.html': {} },
        },
      ],
      [
        'fk_settings_partner_id',
        {
          _index: 963,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerSettingsEntity.html': {} },
        },
      ],
      [
        'fk_subscribers_partner_id',
        {
          _index: 969,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/SubscriberEntity.html': {} },
        },
      ],
      [
        'fk_subscribers_user_id',
        {
          _index: 968,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/SubscriberEntity.html': {} },
        },
      ],
      [
        'fk_team_member_id',
        {
          _index: 982,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/TeamMemberEntity.html': {} },
        },
      ],
      [
        'fk_team_member_role_id',
        {
          _index: 984,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/TeamMemberEntity.html': {} },
        },
      ],
      [
        'fk_team_member_tem_id',
        {
          _index: 970,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/TeamMemberEntity.html': {} },
        },
      ],
      [
        'fk_team_member_user_id',
        {
          _index: 972,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/TeamMemberEntity.html': {},
          },
        },
      ],
      [
        'fk_team_members_id',
        { _index: 1536, title: {}, body: { 'entities/TeamsEntity.html': {} } },
      ],
      [
        'fk_user_profile_id',
        {
          _index: 973,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'fk_user_settings_id',
        {
          _index: 975,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'follow',
        {
          _index: 404,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/FollowersService.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'follow(user',
        { _index: 809, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'followers',
        {
          _index: 785,
          title: {},
          body: {
            'entities/FollowerEntity.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
          },
        },
      ],
      [
        'followers.partner',
        { _index: 1042, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'followers.service',
        { _index: 794, title: {}, body: { 'modules/FollowersModule.html': {} } },
      ],
      [
        'followers/dtos/follow',
        { _index: 1685, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'followers/entities/followers.entity',
        {
          _index: 1077,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'followers/followers.module',
        { _index: 1707, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'followers/followers.service',
        { _index: 1747, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'followersentity',
        {
          _index: 770,
          title: { 'entities/FollowerEntity.html': {} },
          body: {
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'followersmodule',
        {
          _index: 173,
          title: { 'modules/FollowersModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/UsersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'followersrepository',
        { _index: 804, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'followersservice',
        {
          _index: 791,
          title: { 'injectables/FollowersService.html': {} },
          body: {
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'followparnerdto',
        { _index: 1671, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'followparnerdto.partner_id',
        { _index: 1700, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'followpartner',
        {
          _index: 1662,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'followpartner(@currentuser',
        { _index: 1698, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'followpartner(currentuser',
        { _index: 1670, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'followpartner(user',
        { _index: 1725, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'followpartnerdto',
        {
          _index: 765,
          title: { 'classes/FollowPartnerDto.html': {} },
          body: {
            'classes/FollowPartnerDto.html': {},
            'injectables/FollowersService.html': {},
            'controllers/UsersController.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['follows', { _index: 1614, title: {}, body: { 'entities/UserEntity.html': {} } }],
      ['follows.user', { _index: 1617, title: {}, body: { 'entities/UserEntity.html': {} } }],
      ['followservice', { _index: 1718, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'foreign',
        {
          _index: 125,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'foreignkeyconstraintname',
        {
          _index: 778,
          title: {},
          body: {
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'forwardref',
        {
          _index: 817,
          title: {},
          body: {
            'injectables/FollowersService.html': {},
            'modules/PartnersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['framework', { _index: 1864, title: {}, body: { 'index.html': {} } }],
      ['frontend', { _index: 451, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['function', { _index: 1819, title: {}, body: { 'coverage.html': {} } }],
      [
        'functions',
        {
          _index: 1858,
          title: { 'miscellaneous/functions.html': {} },
          body: { 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'gateway.factory',
        {
          _index: 1329,
          title: {},
          body: {
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
          },
        },
      ],
      [
        'gateway.factory.ts',
        {
          _index: 1298,
          title: {},
          body: { 'injectables/PaymentGatewayFactory.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway.factory.ts:6',
        { _index: 1302, title: {}, body: { 'injectables/PaymentGatewayFactory.html': {} } },
      ],
      [
        'gateway.factory.ts:9',
        { _index: 1303, title: {}, body: { 'injectables/PaymentGatewayFactory.html': {} } },
      ],
      [
        'gateway.interface',
        {
          _index: 1308,
          title: {},
          body: {
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'gateway.interface.ts',
        {
          _index: 1311,
          title: {},
          body: { 'interfaces/PaymentGatewayInterface.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway.interface.ts:11',
        { _index: 1318, title: {}, body: { 'interfaces/PaymentGatewayInterface.html': {} } },
      ],
      [
        'gateway.interface.ts:6',
        { _index: 1316, title: {}, body: { 'interfaces/PaymentGatewayInterface.html': {} } },
      ],
      [
        'gateway.interface.ts:7',
        { _index: 1321, title: {}, body: { 'interfaces/PaymentGatewayInterface.html': {} } },
      ],
      ['gateway.module', { _index: 213, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'gateway.module.ts',
        { _index: 1328, title: {}, body: { 'modules/PaymentGatewayModule.html': {} } },
      ],
      [
        'gateway.service',
        {
          _index: 414,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'gateway.service.ts',
        {
          _index: 1330,
          title: {},
          body: { 'injectables/PaymentGatewayService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway.service.ts:12',
        { _index: 1335, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'gateway.service.ts:16',
        { _index: 1334, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'gateway.service.ts:21',
        { _index: 1333, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'gateway.service.ts:9',
        { _index: 1332, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'gateway/dtos/create',
        {
          _index: 469,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/dtos/update',
        {
          _index: 1599,
          title: {},
          body: {
            'classes/UpdateCustomerDto.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/implementations/stripe',
        {
          _index: 1464,
          title: {},
          body: { 'injectables/StripePaymentGateway.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/intefaces/customer',
        {
          _index: 603,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gateway/intefaces/payment',
        {
          _index: 1310,
          title: {},
          body: { 'interfaces/PaymentGatewayInterface.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'gateway/payment',
        {
          _index: 212,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/AuthService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'gatewaypayload',
        { _index: 1762, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      ['gatewayuser', { _index: 431, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['gatewayuser.id', { _index: 436, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'gender',
        {
          _index: 862,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'generate',
        {
          _index: 43,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'generatehash',
        {
          _index: 1079,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'generatehash(refreshtoken',
        { _index: 1760, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'generatehash(secret',
        { _index: 1940, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'generatehash(this.password',
        { _index: 1641, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'generatepresignedurl',
        { _index: 689, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'generatepresignedurl(id',
        { _index: 710, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'generateurl',
        {
          _index: 18,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
          },
        },
      ],
      [
        'generateurl(filekey',
        {
          _index: 41,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
          },
        },
      ],
      [
        'generating',
        {
          _index: 96,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      [
        'gera',
        {
          _index: 712,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['gerar', { _index: 1949, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ["get(':id", { _index: 1668, title: {}, body: { 'controllers/UsersController.html': {} } }],
      [
        "get(':partner_id",
        { _index: 1194, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        "get(':partner_id/teams",
        { _index: 1142, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        "get(':partner_id/teams/:team_id/members",
        { _index: 1145, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'get(filekey',
        {
          _index: 46,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
          },
        },
      ],
      [
        'getcookiesforlogout',
        { _index: 366, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'getcookiewithjwtaccesstoken',
        { _index: 367, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'getcookiewithjwtaccesstoken(userid',
        { _index: 376, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'getcookiewithjwtrefreshtoken',
        { _index: 368, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'getcookiewithjwtrefreshtoken(userid',
        { _index: 385, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      ['getfile', { _index: 690, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['getfile(file', { _index: 716, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'getfilecmd',
        {
          _index: 92,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      ['getfilecmd).catch', { _index: 666, title: {}, body: { 'entities/FileEntity.html': {} } }],
      [
        'getfilecmd).catch((error',
        {
          _index: 95,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['getmembers', { _index: 1553, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'getmembers(partnerid',
        { _index: 1567, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'getobjectcommand',
        {
          _index: 54,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      [
        'getpartnerfollows',
        { _index: 799, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'getpartnerfollows(partner',
        { _index: 811, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'getpartnerteams',
        { _index: 1234, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'getpartnerteams(partnerid',
        { _index: 1247, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'getpaymentgateway',
        { _index: 1299, title: {}, body: { 'injectables/PaymentGatewayFactory.html': {} } },
      ],
      [
        'getsignedurl',
        {
          _index: 61,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      [
        'getsignedurl(this.filestorage',
        { _index: 665, title: {}, body: { 'entities/FileEntity.html': {} } },
      ],
      [
        'getsignedurl(this.s3v3',
        {
          _index: 94,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'getteammembers',
        { _index: 1130, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'getteammembers(partnerid',
        { _index: 1144, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      ['getting', { _index: 1860, title: { 'index.html': {} }, body: {} }],
      [
        'getuserfollows',
        { _index: 800, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'getuserfollows(user',
        { _index: 813, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'getuserifrefreshtokenmatches',
        { _index: 1712, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'getuserifrefreshtokenmatches(refreshtoken',
        { _index: 1727, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'global',
        {
          _index: 358,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/PaymentGatewayModule.html': {},
          },
        },
      ],
      ['graph', { _index: 1920, title: {}, body: { 'modules.html': {} } }],
      ['grow', { _index: 1896, title: {}, body: { 'index.html': {} } }],
      [
        'guard',
        {
          _index: 305,
          title: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
          },
          body: { 'coverage.html': {} },
        },
      ],
      [
        'guards',
        {
          _index: 307,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
            'overview.html': {},
          },
        },
      ],
      ['guards/auth', { _index: 225, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'hash',
        {
          _index: 1640,
          title: {},
          body: {
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['headerresolver', { _index: 205, title: {}, body: { 'modules/AppModule.html': {} } }],
      ["headerresolver(['x", { _index: 242, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'here',
        {
          _index: 1496,
          title: {},
          body: { 'injectables/StripePaymentGateway.html': {}, 'index.html': {} },
        },
      ],
      ['hexadecimal', { _index: 1954, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['hospedado', { _index: 702, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['httponly', { _index: 381, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['https://nestjs.com', { _index: 1913, title: {}, body: { 'index.html': {} } }],
      [
        'i18n',
        {
          _index: 209,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/CustomI18nService.html': {},
            'injectables/FollowersService.html': {},
            'classes/LoginDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'classes/UpdateUserDto.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['i18n.service', { _index: 586, title: {}, body: { 'modules/CustomI18nModule.html': {} } }],
      [
        'i18n/i18n.service',
        {
          _index: 278,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/FollowersService.html': {},
            'classes/LoginDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'i18ncontext',
        { _index: 596, title: {}, body: { 'injectables/CustomI18nService.html': {} } },
      ],
      [
        'i18ncontext.current().lang',
        { _index: 598, title: {}, body: { 'injectables/CustomI18nService.html': {} } },
      ],
      ['i18nmodule', { _index: 206, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['i18nmodule.forroot', { _index: 228, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'i18nservice',
        { _index: 590, title: {}, body: { 'injectables/CustomI18nService.html': {} } },
      ],
      [
        'i18nvalidationmessage',
        {
          _index: 573,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'id',
        {
          _index: 346,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreatePartnerDto.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'entities/FollowerEntity.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'injectables/PartnersService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UpdateTeamDto.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['identifier', { _index: 1788, title: {}, body: { 'coverage.html': {} } }],
      [
        'idx_0bb30eecfe3e109dd0c5fbfbc5',
        { _index: 938, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'idx_2a67fee319e78de064f0210347',
        { _index: 942, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'idx_35ba194e002c739c3caf41fdac',
        { _index: 943, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'idx_37fe67a713a33c9385ede5782d',
        { _index: 952, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'idx_a5dd1e5a6d76ed2607dd31b0e6',
        { _index: 939, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'idx_d28e1ffff7d6b7d3eb26253f9d',
        { _index: 949, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'idx_ee316e71a670dca8d696490aee',
        { _index: 953, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'idx_f4d4e7ba1240fe5f2c4be80d13',
        { _index: 948, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      ['ilekey', { _index: 672, title: {}, body: { 'interfaces/FileImplInterface.html': {} } }],
      [
        'implement',
        { _index: 1497, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'implementations/digitalocean',
        { _index: 685, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'implementations/stripe',
        {
          _index: 1305,
          title: {},
          body: {
            'injectables/PaymentGatewayFactory.html': {},
            'modules/PaymentGatewayModule.html': {},
          },
        },
      ],
      [
        'implements',
        {
          _index: 8,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/Manytoone1731887989393.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'import',
        {
          _index: 52,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'imports',
        {
          _index: 190,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'index',
        {
          _index: 10,
          title: { 'index.html': {} },
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'indexable',
        { _index: 612, title: {}, body: { 'interfaces/CustomerMetadataInterface.html': {} } },
      ],
      [
        'info',
        {
          _index: 3,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['informada', { _index: 759, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'informado',
        {
          _index: 336,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'init.ts',
        {
          _index: 835,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'coverage.html': {} },
        },
      ],
      ['init.ts:4', { _index: 836, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['init.ts:6', { _index: 838, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['init.ts:67', { _index: 837, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'init1731534812101',
        {
          _index: 833,
          title: { 'classes/Init1731534812101.html': {} },
          body: { 'classes/Init1731534812101.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'inject',
        {
          _index: 733,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'inject(file_service_provider',
        { _index: 735, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'inject(forwardref',
        { _index: 1751, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'injectable',
        {
          _index: 323,
          title: {
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/RolesService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/RolesService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'injectables',
        {
          _index: 364,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/RolesService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'injectrepository',
        {
          _index: 732,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'injectrepository(fileentity',
        { _index: 734, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'injectrepository(followersentity',
        { _index: 822, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'injectrepository(partnerentity',
        { _index: 1257, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'injectrepository(partnerprofileentity',
        { _index: 1258, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'injectrepository(partnersettingsentity',
        { _index: 1259, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'injectrepository(teammemberentity',
        { _index: 1575, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'injectrepository(teamsentity',
        { _index: 1574, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'injectrepository(userentity',
        { _index: 1748, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'injectrepository(userprofileentity',
        { _index: 1749, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'injectrepository(usersettingsentity',
        { _index: 1750, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      ['installation', { _index: 1874, title: {}, body: { 'index.html': {} } }],
      ['installrunning', { _index: 1877, title: {}, body: { 'index.html': {} } }],
      ['int', { _index: 1348, title: {}, body: { 'entities/ReviewsEntity.html': {} } }],
      [
        'intefaces/customer',
        {
          _index: 496,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'intefaces/payment',
        {
          _index: 1307,
          title: {},
          body: {
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      ['integer', { _index: 895, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'interface',
        {
          _index: 601,
          title: {
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'interfaces/FileImplInterface.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
          },
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'interfaces/FileImplInterface.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'interfaces',
        {
          _index: 602,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'interfaces/FileImplInterface.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'invalid',
        {
          _index: 554,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      ['invalida', { _index: 1406, title: {}, body: { 'classes/SetUserProfileDto.html': {} } }],
      [
        'inversejoincolumn',
        {
          _index: 1048,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'invoice',
        {
          _index: 498,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'classes/UpdateCustomerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'invoice_settings',
        {
          _index: 474,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
          },
        },
      ],
      [
        'invoicesettingsinterface',
        {
          _index: 484,
          title: { 'interfaces/InvoiceSettingsInterface.html': {} },
          body: {
            'classes/CreateCustomerDto.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'classes/UpdateCustomerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['inválido', { _index: 739, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'is_public_key',
        {
          _index: 1007,
          title: {},
          body: {
            'guards/JwtAuthGuard.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['isarray', { _index: 151, title: {}, body: { 'classes/AddteamMemberDto.html': {} } }],
      ['isboolean', { _index: 542, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } }],
      [
        'isboolean()@isoptional',
        { _index: 529, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'isdate',
        {
          _index: 572,
          title: {},
          body: { 'classes/CreateUserDto.html': {}, 'classes/SetUserProfileDto.html': {} },
        },
      ],
      [
        'isemail',
        {
          _index: 514,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'isenum',
        {
          _index: 1401,
          title: {},
          body: {
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
          },
        },
      ],
      [
        'isenum(locales_enum',
        { _index: 1435, title: {}, body: { 'classes/SetUserSettingsDto.html': {} } },
      ],
      [
        'isenum(theme_enum',
        {
          _index: 1402,
          title: {},
          body: { 'classes/SetPartnerProfileDto.html': {}, 'classes/SetUserSettingsDto.html': {} },
        },
      ],
      [
        'isenum(user_gender_enum',
        { _index: 1425, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'isnotempty',
        {
          _index: 152,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      [
        'isnotempty({message',
        {
          _index: 139,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      ['isnumber', { _index: 543, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } }],
      [
        'isnumber()@isoptional',
        { _index: 539, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'isoptional',
        {
          _index: 541,
          title: {},
          body: {
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/UpdateTeamDto.html': {},
          },
        },
      ],
      [
        'isoptional()@isdate({message',
        { _index: 1405, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'isoptional()@isenum(theme_enum',
        { _index: 1399, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'isoptional()@isstring({message',
        {
          _index: 1387,
          title: {},
          body: { 'classes/SetPartnerProfileDto.html': {}, 'classes/SetUserProfileDto.html': {} },
        },
      ],
      [
        "isoptional()@isuuid('4",
        { _index: 1438, title: {}, body: { 'classes/SignUpDto.html': {} } },
      ],
      [
        'isowner',
        { _index: 1165, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      ['ispasscorrect', { _index: 442, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'ispublic',
        {
          _index: 736,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'guards/JwtAuthGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'isstring',
        {
          _index: 513,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
          },
        },
      ],
      [
        'isstring()@isnotempty',
        { _index: 534, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'isstring()@isoptional',
        { _index: 531, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'isuuid',
        {
          _index: 153,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      [
        "isuuid('4",
        {
          _index: 769,
          title: {},
          body: {
            'classes/FollowPartnerDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      ['join', { _index: 1903, title: {}, body: { 'index.html': {} } }],
      [
        'joincolumn',
        {
          _index: 653,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'jointable',
        {
          _index: 1071,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      ['js', { _index: 1834, title: {}, body: { 'dependencies.html': {} } }],
      [
        'jwt',
        {
          _index: 309,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'coverage.html': {} },
        },
      ],
      ['jwt.guard', { _index: 226, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'jwt.guard.ts',
        { _index: 999, title: {}, body: { 'guards/JwtAuthGuard.html': {}, 'coverage.html': {} } },
      ],
      ['jwt.guard.ts:19', { _index: 1002, title: {}, body: { 'guards/JwtAuthGuard.html': {} } }],
      ['jwt.guard.ts:28', { _index: 1003, title: {}, body: { 'guards/JwtAuthGuard.html': {} } }],
      ['jwt.guard.ts:73', { _index: 1004, title: {}, body: { 'guards/JwtAuthGuard.html': {} } }],
      [
        'jwtauthguard',
        {
          _index: 224,
          title: { 'guards/JwtAuthGuard.html': {} },
          body: {
            'modules/AppModule.html': {},
            'guards/JwtAuthGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'jwtcookie',
        {
          _index: 298,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      ['jwtmodule', { _index: 355, title: {}, body: { 'modules/AuthModule.html': {} } }],
      [
        'jwtmodule.registerasync',
        { _index: 357, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'jwtrefreshcookie',
        {
          _index: 299,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      ['jwtrefreshtoken', { _index: 445, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'jwtservice',
        {
          _index: 314,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
          },
        },
      ],
      ['kamil', { _index: 1910, title: {}, body: { 'index.html': {} } }],
      [
        'key',
        {
          _index: 81,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      ['l', { _index: 241, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'lang',
        {
          _index: 239,
          title: {},
          body: { 'modules/AppModule.html': {}, 'injectables/CustomI18nService.html': {} },
        },
      ],
      ['language', { _index: 1429, title: {}, body: { 'classes/SetUserSettingsDto.html': {} } }],
      [
        'last',
        {
          _index: 1415,
          title: {},
          body: { 'classes/SetUserProfileDto.html': {}, 'classes/SignUpPartnerDto.html': {} },
        },
      ],
      [
        'last_name',
        {
          _index: 858,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'legal_name',
        {
          _index: 508,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'injectables/PartnersService.html': {},
            'classes/UpdatePartnerDto.html': {},
          },
        },
      ],
      [
        'legal_name.tolowercase',
        { _index: 1262, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'legend',
        {
          _index: 163,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'length',
        {
          _index: 1119,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'entities/TagEntity.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      ['length(5', { _index: 1424, title: {}, body: { 'classes/SetUserProfileDto.html': {} } }],
      [
        'letter',
        {
          _index: 575,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        "letter'})@matches(passregex.min_8",
        {
          _index: 564,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        "letter'})@matches(passregex.number",
        {
          _index: 559,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      ['license', { _index: 1916, title: {}, body: { 'index.html': {}, 'properties.html': {} } }],
      ['licensed', { _index: 1893, title: {}, body: { 'index.html': {} } }],
      [
        'light',
        {
          _index: 872,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'line1',
        {
          _index: 607,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'line2',
        {
          _index: 608,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['link', { _index: 713, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'list',
        {
          _index: 141,
          title: {},
          body: { 'classes/AddteamMemberDto.html': {}, 'injectables/PartnersService.html': {} },
        },
      ],
      [
        'listofnewmembers',
        { _index: 1173, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'listofnewmembers.push(memberfromdb',
        { _index: 1179, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      ['literal', { _index: 393, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['loaderoptions', { _index: 231, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['loadpressignedurl', { _index: 662, title: {}, body: { 'entities/FileEntity.html': {} } }],
      [
        'locale',
        {
          _index: 240,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'classes/Init1731534812101.html': {},
            'classes/SetUserSettingsDto.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      ['locales', { _index: 233, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'locales_enum',
        {
          _index: 1428,
          title: {},
          body: {
            'classes/SetUserSettingsDto.html': {},
            'entities/UserSettingsEntity.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'locales_enum.en',
        { _index: 1659, title: {}, body: { 'entities/UserSettingsEntity.html': {} } },
      ],
      [
        'logger',
        {
          _index: 640,
          title: {},
          body: { 'entities/FileEntity.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      ['logger(file.name', { _index: 647, title: {}, body: { 'entities/FileEntity.html': {} } }],
      ['logic', { _index: 1499, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } }],
      [
        'login',
        {
          _index: 253,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      ['login(@req', { _index: 297, title: {}, body: { 'controllers/AuthController.html': {} } }],
      ['login(req', { _index: 256, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        'logindto',
        {
          _index: 257,
          title: { 'classes/LoginDto.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'classes/LoginDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'logindto.password',
        { _index: 301, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      ['logo', { _index: 1091, title: {}, body: { 'entities/PartnerProfileEntity.html': {} } }],
      [
        'logo_id',
        {
          _index: 884,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerProfileEntity.html': {} },
        },
      ],
      [
        'logout',
        {
          _index: 254,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['logout(user', { _index: 394, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'long',
        {
          _index: 569,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        "long'})@matches(passregex.max_16",
        {
          _index: 567,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'look',
        {
          _index: 1025,
          title: {},
          body: {
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'lowercase',
        {
          _index: 558,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['mail', { _index: 553, title: {}, body: { 'classes/CreateUserDto.html': {} } }],
      ['make', { _index: 403, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['male', { _index: 1857, title: {}, body: { 'miscellaneous/enumerations.html': {} } }],
      [
        'many',
        {
          _index: 105,
          title: {},
          body: { 'classes/AddManyToOne1731880851697.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'manytomany',
        {
          _index: 1072,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'manytomany(undefined',
        {
          _index: 1046,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'manytomany(undefined)@jointable({name',
        {
          _index: 1065,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'manytoone',
        {
          _index: 654,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'manytoone(undefined',
        {
          _index: 773,
          title: {},
          body: {
            'entities/FollowerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
          },
        },
      ],
      [
        'manytoone.ts',
        {
          _index: 1030,
          title: {},
          body: { 'classes/Manytoone1731887989393.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'manytoone.ts:12',
        { _index: 1032, title: {}, body: { 'classes/Manytoone1731887989393.html': {} } },
      ],
      [
        'manytoone.ts:4',
        { _index: 1031, title: {}, body: { 'classes/Manytoone1731887989393.html': {} } },
      ],
      [
        'manytoone.ts:6',
        { _index: 1033, title: {}, body: { 'classes/Manytoone1731887989393.html': {} } },
      ],
      [
        'manytoone1731887989393',
        {
          _index: 1028,
          title: { 'classes/Manytoone1731887989393.html': {} },
          body: { 'classes/Manytoone1731887989393.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'matches',
        {
          _index: 515,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'matches(passregex.lowercase',
        {
          _index: 574,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'matches(passregex.max_16',
        {
          _index: 581,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'matches(passregex.min_8',
        {
          _index: 580,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'matches(passregex.number',
        {
          _index: 576,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'matches(passregex.special_char',
        {
          _index: 577,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'matches(passregex.uppercase',
        {
          _index: 579,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'matching',
        {
          _index: 101,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'max',
        {
          _index: 457,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      ['max_16', { _index: 1966, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'maxlength',
        {
          _index: 1441,
          title: {},
          body: { 'classes/SignUpDto.html': {}, 'classes/SignUpPartnerDto.html': {} },
        },
      ],
      ['maxlength(20', { _index: 1450, title: {}, body: { 'classes/SignUpPartnerDto.html': {} } }],
      [
        'member',
        {
          _index: 140,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'controllers/PartnerTeamsController.html': {},
          },
        },
      ],
      [
        'member.dto',
        {
          _index: 1159,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      [
        'member.dto.ts',
        {
          _index: 135,
          title: {},
          body: { 'classes/AddteamMemberDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'member.dto.ts:8',
        { _index: 149, title: {}, body: { 'classes/AddteamMemberDto.html': {} } },
      ],
      [
        'member.entity',
        {
          _index: 1364,
          title: {},
          body: {
            'entities/RoleEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      [
        'member.entity.ts',
        {
          _index: 1520,
          title: {},
          body: { 'entities/TeamMemberEntity.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'member.entity.ts:20',
        { _index: 1521, title: {}, body: { 'entities/TeamMemberEntity.html': {} } },
      ],
      [
        'member.entity.ts:28',
        { _index: 1527, title: {}, body: { 'entities/TeamMemberEntity.html': {} } },
      ],
      [
        'member.entity.ts:36',
        { _index: 1523, title: {}, body: { 'entities/TeamMemberEntity.html': {} } },
      ],
      [
        'member.entity.ts:52',
        { _index: 1525, title: {}, body: { 'entities/TeamMemberEntity.html': {} } },
      ],
      [
        'memberfromdb',
        { _index: 1175, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'members',
        {
          _index: 136,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      ['memeber', { _index: 146, title: {}, body: { 'classes/AddteamMemberDto.html': {} } }],
      ['mesmo', { _index: 338, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } }],
      [
        'message',
        {
          _index: 145,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      [
        'metadata',
        {
          _index: 428,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'metadata.interface',
        {
          _index: 500,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'metadata.interface.ts',
        {
          _index: 611,
          title: {},
          body: { 'interfaces/CustomerMetadataInterface.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'metadata.interface.ts:1',
        { _index: 613, title: {}, body: { 'interfaces/CustomerMetadataInterface.html': {} } },
      ],
      [
        'methods',
        {
          _index: 15,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/Manytoone1731887989393.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'migrationinterface',
        {
          _index: 107,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      ['min', { _index: 1442, title: {}, body: { 'classes/SignUpDto.html': {} } }],
      ['min_8', { _index: 1965, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'miscellaneous',
        {
          _index: 1844,
          title: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
          body: {
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['missing', { _index: 427, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['mit', { _index: 1892, title: {}, body: { 'index.html': {} } }],
      ['mode', { _index: 1882, title: {}, body: { 'index.html': {} } }],
      [
        'module',
        {
          _index: 159,
          title: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/NotificationsModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'modules/ReviewsModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/TagsModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/TransactionsModule.html': {},
            'modules/UsersModule.html': {},
          },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/NotificationsModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'modules/ReviewsModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/TagsModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/TransactionsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'modules',
        {
          _index: 161,
          title: { 'modules.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/NotificationsModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'modules/ReviewsModule.html': {},
            'modules/RolesModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules/TagsModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/TransactionsModule.html': {},
            'modules/UsersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['more', { _index: 1906, title: {}, body: { 'index.html': {} } }],
      ['myśliwiec', { _index: 1911, title: {}, body: { 'index.html': {} } }],
      ['na', { _index: 703, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'name',
        {
          _index: 36,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateTeamDto.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['needs', { _index: 147, title: {}, body: { 'classes/AddteamMemberDto.html': {} } }],
      ['nest', { _index: 1871, title: {}, body: { 'index.html': {} } }],
      ['nestframework', { _index: 1915, title: {}, body: { 'index.html': {} } }],
      [
        'nestjs',
        {
          _index: 208,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/LoginDto.html': {},
            'classes/UpdateUserDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/common',
        {
          _index: 201,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'entities/FileEntity.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'modules/NotificationsModule.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'modules/ReviewsModule.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'modules/SubscribersModule.html': {},
            'modules/TagsModule.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/core',
        {
          _index: 223,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'nestjs/jwt',
        {
          _index: 325,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['nestjs/platform', { _index: 1828, title: {}, body: { 'dependencies.html': {} } }],
      [
        'nestjs/typeorm',
        {
          _index: 192,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['never', { _index: 448, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'new',
        {
          _index: 67,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['newentities', { _index: 1587, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'newentities.push(newteammember',
        { _index: 1592, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      ['newfile', { _index: 747, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'newfollower',
        { _index: 829, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      ['newpartner', { _index: 1266, title: {}, body: { 'injectables/PartnersService.html': {} } }],
      [
        'newpartnerprofile',
        { _index: 1280, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'newsettings',
        { _index: 1290, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      ['newteam', { _index: 1576, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      ['newteammember', { _index: 1590, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'newuser',
        {
          _index: 290,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'newusersettings',
        { _index: 1783, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      ['node.js', { _index: 1863, title: {}, body: { 'index.html': {} } }],
      [
        'none',
        {
          _index: 492,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'notificationsmodule',
        {
          _index: 174,
          title: { 'modules/NotificationsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/NotificationsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['novo', { _index: 1738, title: {}, body: { 'injectables/UsersService.html': {} } }],
      ['now', { _index: 847, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        "now'::text)::timestamp(6",
        { _index: 843, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      ['npm', { _index: 1876, title: {}, body: { 'index.html': {} } }],
      [
        'null',
        {
          _index: 842,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'nullable',
        {
          _index: 1093,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'number',
        {
          _index: 538,
          title: {},
          body: {
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateUserDto.html': {},
            'entities/FollowerEntity.html': {},
            'classes/LoginDto.html': {},
            'entities/ReviewsEntity.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "number'})@matches(passregex.special_char",
        {
          _index: 560,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      ['não', { _index: 754, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'o',
        {
          _index: 337,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/FileService.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['object', { _index: 1960, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['objecto', { _index: 719, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['observable', { _index: 1369, title: {}, body: { 'guards/RolesGuard.html': {} } }],
      ['ocean', { _index: 622, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      [
        'ondelete',
        {
          _index: 775,
          title: {},
          body: {
            'entities/FollowerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
          },
        },
      ],
      [
        'one',
        {
          _index: 148,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'one.ts',
        {
          _index: 106,
          title: {},
          body: { 'classes/AddManyToOne1731880851697.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'one.ts:12',
        { _index: 114, title: {}, body: { 'classes/AddManyToOne1731880851697.html': {} } },
      ],
      [
        'one.ts:4',
        { _index: 111, title: {}, body: { 'classes/AddManyToOne1731880851697.html': {} } },
      ],
      [
        'one.ts:6',
        { _index: 116, title: {}, body: { 'classes/AddManyToOne1731880851697.html': {} } },
      ],
      [
        'onetomany',
        {
          _index: 1073,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'onetomany(undefined',
        {
          _index: 1041,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'onetoone',
        {
          _index: 1074,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'onetoone(undefined',
        {
          _index: 1051,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'onetoone(undefined)@joincolumn({name',
        {
          _index: 1104,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      ['onupdate', { _index: 1459, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } }],
      ['open', { _index: 1894, title: {}, body: { 'index.html': {} } }],
      [
        'optional',
        {
          _index: 37,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerProfileEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'classes/UpdateCustomerDto.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'options',
        {
          _index: 238,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'injectables/CustomI18nService.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'out',
        {
          _index: 188,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['overview', { _index: 1922, title: { 'overview.html': {} }, body: { 'overview.html': {} } }],
      ['owner.id', { _index: 1294, title: {}, body: { 'injectables/PartnersService.html': {} } }],
      [
        'owners',
        {
          _index: 1036,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'injectables/PartnersService.html': {} },
        },
      ],
      ['ownertype', { _index: 723, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'package',
        { _index: 1824, title: { 'dependencies.html': {}, 'properties.html': {} }, body: {} },
      ],
      ['para', { _index: 1739, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'param',
        {
          _index: 72,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'injectables/FileService.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        "param('partner_id",
        {
          _index: 1171,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
          },
        },
      ],
      [
        "param('team_id",
        { _index: 1172, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'parameters',
        {
          _index: 35,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'params',
        {
          _index: 76,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'parnterhasprofile',
        { _index: 1275, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'parnterhasprofile.id',
        { _index: 1279, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      ['parser', { _index: 1832, title: {}, body: { 'dependencies.html': {} } }],
      [
        'parseuuidpipe',
        {
          _index: 1147,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'partial',
        {
          _index: 1589,
          title: {},
          body: {
            'injectables/TeamsService.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateUserDto.html': {},
          },
        },
      ],
      [
        'partner',
        {
          _index: 401,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreatePartnerDto.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'entities/ReviewsEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SignUpDto.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'partner.dto',
        {
          _index: 283,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'injectables/FollowersService.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'classes/UpdatePartnerDto.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'partner.dto.ts',
        {
          _index: 506,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'partner.dto.ts:11',
        {
          _index: 511,
          title: {},
          body: { 'classes/CreatePartnerDto.html': {}, 'classes/FollowPartnerDto.html': {} },
        },
      ],
      [
        'partner.dto.ts:13',
        { _index: 1448, title: {}, body: { 'classes/SignUpPartnerDto.html': {} } },
      ],
      [
        'partner.dto.ts:17',
        { _index: 1444, title: {}, body: { 'classes/SignUpPartnerDto.html': {} } },
      ],
      [
        'partner.dto.ts:39',
        { _index: 1449, title: {}, body: { 'classes/SignUpPartnerDto.html': {} } },
      ],
      [
        'partner.dto.ts:6',
        {
          _index: 1598,
          title: {},
          body: { 'classes/UnfollowPartnerDto.html': {}, 'classes/UserFollowPartnerDto.html': {} },
        },
      ],
      [
        'partner.dto.ts:7',
        {
          _index: 512,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
          },
        },
      ],
      [
        'partner.dto.ts:8',
        { _index: 1447, title: {}, body: { 'classes/SignUpPartnerDto.html': {} } },
      ],
      [
        'partner.dto.ts:9',
        { _index: 1597, title: {}, body: { 'classes/UnfollowPartnerDto.html': {} } },
      ],
      [
        'partner.entity',
        {
          _index: 1116,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
          },
        },
      ],
      [
        'partner.followers',
        { _index: 774, title: {}, body: { 'entities/FollowerEntity.html': {} } },
      ],
      ['partner.owners', { _index: 1620, title: {}, body: { 'entities/UserEntity.html': {} } }],
      ['partner.reviews', { _index: 1346, title: {}, body: { 'entities/ReviewsEntity.html': {} } }],
      [
        'partner.subscribers',
        { _index: 1510, title: {}, body: { 'entities/SubscriberEntity.html': {} } },
      ],
      ['partner.teams', { _index: 1541, title: {}, body: { 'entities/TeamsEntity.html': {} } }],
      [
        'partner.teams)@joincolumn({name',
        { _index: 1539, title: {}, body: { 'entities/TeamsEntity.html': {} } },
      ],
      [
        'partner_id',
        {
          _index: 126,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'classes/SignUpDto.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      [
        'partner_owner',
        { _index: 1853, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'partner_profile',
        {
          _index: 882,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerProfileEntity.html': {} },
        },
      ],
      [
        'partner_profile"("id',
        { _index: 965, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'partner_settings',
        {
          _index: 906,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerSettingsEntity.html': {} },
        },
      ],
      [
        'partner_settings"("id',
        { _index: 967, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'partnerentity',
        {
          _index: 416,
          title: { 'entities/PartnerEntity.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'partnerentity(partnerid',
        { _index: 1169, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'partnerexists',
        { _index: 1260, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partnerfromdb',
        {
          _index: 1017,
          title: {},
          body: {
            'guards/JwtAuthGuard.html': {},
            'injectables/PartnersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'partnerfromdb.id',
        { _index: 1277, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partnerfromdb.owners.some((owner',
        { _index: 1293, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partnerhassettings',
        { _index: 1283, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partnerhassettings.id',
        { _index: 1287, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partnerid',
        {
          _index: 1014,
          title: {},
          body: {
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['partnerowner', { _index: 746, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'partnerprofileentity',
        {
          _index: 1050,
          title: { 'entities/PartnerProfileEntity.html': {} },
          body: {
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'partnerprofilerepository',
        { _index: 1236, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partnerrepository',
        { _index: 1239, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partners',
        {
          _index: 909,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'partners"("id',
        {
          _index: 128,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
          },
        },
      ],
      [
        'partners.service',
        {
          _index: 1157,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
          },
        },
      ],
      [
        'partners/entities/partner.entity',
        {
          _index: 417,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'partners/partners.module',
        {
          _index: 356,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'partners/partners.service',
        {
          _index: 415,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/FollowersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'partners_owners',
        {
          _index: 940,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerEntity.html': {} },
        },
      ],
      [
        'partners_tags',
        {
          _index: 935,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/PartnerEntity.html': {} },
        },
      ],
      [
        'partnerscontroller',
        {
          _index: 1182,
          title: { 'controllers/PartnersController.html': {} },
          body: {
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'partnersettingsentity',
        {
          _index: 1058,
          title: { 'entities/PartnerSettingsEntity.html': {} },
          body: {
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'partnersettingsrepository',
        { _index: 1237, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'partnersmodule',
        {
          _index: 175,
          title: { 'modules/PartnersModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'partnersservice',
        {
          _index: 370,
          title: { 'injectables/PartnersService.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'partnerteamscontroller',
        {
          _index: 1125,
          title: { 'controllers/PartnerTeamsController.html': {} },
          body: {
            'controllers/PartnerTeamsController.html': {},
            'modules/PartnersModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'partrner.decorator',
        {
          _index: 1149,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['pass', { _index: 407, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'pass.rules',
        {
          _index: 518,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        'pass.rules.ts',
        {
          _index: 1791,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'passregex',
        {
          _index: 516,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'password',
        {
          _index: 450,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/Init1731534812101.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'patch',
        {
          _index: 1209,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      ["patch(':id", { _index: 1680, title: {}, body: { 'controllers/UsersController.html': {} } }],
      [
        "patch(':partner_id",
        { _index: 1206, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        "patch('profile",
        { _index: 1675, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        "patch('settings",
        { _index: 1678, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'path',
        {
          _index: 221,
          title: {},
          body: { 'modules/AppModule.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      ['path.join(__dirname', { _index: 232, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'payload',
        {
          _index: 330,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
          },
        },
      ],
      [
        'payload.userid',
        {
          _index: 344,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      [
        'payment',
        {
          _index: 413,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'payment.gateway',
        {
          _index: 1306,
          title: {},
          body: {
            'injectables/PaymentGatewayFactory.html': {},
            'modules/PaymentGatewayModule.html': {},
          },
        },
      ],
      [
        'payment.gateway.ts',
        {
          _index: 1465,
          title: {},
          body: { 'injectables/StripePaymentGateway.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'payment.gateway.ts:11',
        { _index: 1468, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'payment.gateway.ts:19',
        { _index: 1473, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'payment.gateway.ts:34',
        { _index: 1476, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'payment.gateway.ts:41',
        { _index: 1474, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'payment.gateway.ts:46',
        { _index: 1471, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'payment_method',
        {
          _index: 475,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
          },
        },
      ],
      [
        'payment_method_types',
        { _index: 1506, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'paymentgateway',
        { _index: 1336, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'paymentgateway.createcustomer(createcustomerdto',
        { _index: 1340, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'paymentgateway.createsubscription(createsubscriptiondto',
        { _index: 1339, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'paymentgateway.updatecustomer(paymentgatewayuserid',
        { _index: 1338, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'paymentgatewayfactory',
        {
          _index: 1297,
          title: { 'injectables/PaymentGatewayFactory.html': {} },
          body: {
            'injectables/PaymentGatewayFactory.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'paymentgatewayinterface',
        {
          _index: 1304,
          title: { 'interfaces/PaymentGatewayInterface.html': {} },
          body: {
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'paymentgatewaymodule',
        {
          _index: 176,
          title: { 'modules/PaymentGatewayModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'paymentgatewayservice',
        {
          _index: 371,
          title: { 'injectables/PaymentGatewayService.html': {} },
          body: {
            'injectables/AuthService.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'paymentgatewayuserid',
        {
          _index: 1322,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
          },
        },
      ],
      [
        'paymentmethodid',
        { _index: 525, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      ['paymentuser', { _index: 426, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'pbkdf2sync(secret',
        { _index: 1945, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      ['pg', { _index: 1837, title: {}, body: { 'dependencies.html': {} } }],
      [
        'phone',
        {
          _index: 476,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['photo', { _index: 1650, title: {}, body: { 'entities/UserProfileEntity.html': {} } }],
      [
        'pk_00f004f5922a0744d174530d639',
        { _index: 880, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_1dc8e359c31a2f2c70a816f7fb7',
        { _index: 941, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_231ae565c273ee700b283f15c1d',
        { _index: 901, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_25ec258b870291f743c1ff00248',
        { _index: 908, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_44faff5f032dc54a4484741b078',
        { _index: 889, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_4d8cf4d84ca3df7d35f03654707',
        { _index: 947, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_69cefba3f2570d1a040530ced75',
        { _index: 937, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_6c16b9093a142e0e7613b04a3d9',
        { _index: 851, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_7e5523774a38b08a6236d322403',
        { _index: 927, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_7f29e59d4fa87411d3fa79c5db4',
        { _index: 951, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_998645b20820e4ab99aeae03b41',
        { _index: 916, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_a3ffb1c0c8416b9fc6f907b7433',
        { _index: 934, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_c1433d71a4838793a49dcad46ab',
        { _index: 921, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_c90cfc5b18edd29bd15ba95c1a4',
        { _index: 891, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_ca3eae89dcf20c9fd95bf7460aa',
        { _index: 926, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_cbe0a7a9256c826f403c0236b67',
        { _index: 918, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_e7dc17249a1148a1970748eda99',
        { _index: 905, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'pk_f44d0cd18cfd80b0fed7806c3b7',
        { _index: 869, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      ['planid', { _index: 526, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } }],
      [
        'plansmodule',
        {
          _index: 177,
          title: { 'modules/PlansModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/PlansModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['please', { _index: 1904, title: {}, body: { 'index.html': {} } }],
      ['porpuses', { _index: 1735, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'post',
        {
          _index: 270,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        "post(':partner_id/profile",
        { _index: 1198, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        "post(':partner_id/settings",
        { _index: 1202, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        "post(':partner_id/teams",
        { _index: 1139, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        "post(':partner_id/teams/:team_id/members",
        { _index: 1135, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        "post('follow",
        { _index: 1672, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      ["post('login", { _index: 296, title: {}, body: { 'controllers/AuthController.html': {} } }],
      ["post('logout", { _index: 261, title: {}, body: { 'controllers/AuthController.html': {} } }],
      ["post('signup", { _index: 287, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        'postal',
        {
          _index: 1394,
          title: {},
          body: { 'classes/SetPartnerProfileDto.html': {}, 'classes/SetUserProfileDto.html': {} },
        },
      ],
      [
        'postal_code',
        {
          _index: 609,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'preferred_locales',
        {
          _index: 477,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'prefix',
        {
          _index: 251,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'presigner',
        {
          _index: 64,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['primary', { _index: 852, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'primarycolumn',
        { _index: 1124, title: {}, body: { 'entities/PartnerSettingsEntity.html': {} } },
      ],
      [
        'primarygeneratedcolumn',
        {
          _index: 655,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        "primarygeneratedcolumn('uuid",
        {
          _index: 643,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'private',
        {
          _index: 12,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'process.env.aws_private_bucket_name',
        { _index: 26, title: {}, body: { 'classes/AWSS3.html': {} } },
      ],
      [
        'process.env.digital_ocean_private_bucket_name',
        { _index: 618, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } },
      ],
      [
        'process.env.file_storage_acess_key',
        {
          _index: 632,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      [
        'process.env.file_storage_bucket_name',
        { _index: 663, title: {}, body: { 'entities/FileEntity.html': {} } },
      ],
      [
        'process.env.file_storage_endepoint',
        {
          _index: 628,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      [
        'process.env.file_storage_region',
        {
          _index: 629,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      [
        'process.env.file_storage_secret_key',
        {
          _index: 634,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      [
        'process.env.secrect_jwt_expiration_time',
        {
          _index: 363,
          title: {},
          body: { 'modules/AuthModule.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        'process.env.secret_jwt',
        {
          _index: 360,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
          },
        },
      ],
      [
        'process.env.secret_refresh_jwt',
        {
          _index: 333,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      [
        'process.env.secret_refresh_jwt_expiration_time',
        { _index: 461, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'process.env.secret_salt_hash',
        { _index: 1955, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      ['production', { _index: 1884, title: {}, body: { 'index.html': {} } }],
      [
        'productsmodule',
        {
          _index: 178,
          title: { 'modules/ProductsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/ProductsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'profile',
        {
          _index: 1037,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'injectables/PartnersService.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'profile.dto',
        {
          _index: 1213,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'profile.dto.ts',
        {
          _index: 1386,
          title: {},
          body: {
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'profile.dto.ts:11',
        { _index: 1388, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:13',
        { _index: 1422, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:15',
        { _index: 1398, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:17',
        { _index: 1408, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:19',
        { _index: 1389, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:21',
        { _index: 1421, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:23',
        { _index: 1397, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:26',
        { _index: 1420, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:27',
        { _index: 1396, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:30',
        { _index: 1410, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:31',
        { _index: 1391, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:34',
        { _index: 1409, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:35',
        { _index: 1390, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:39',
        {
          _index: 1393,
          title: {},
          body: { 'classes/SetPartnerProfileDto.html': {}, 'classes/SetUserProfileDto.html': {} },
        },
      ],
      [
        'profile.dto.ts:43',
        {
          _index: 1400,
          title: {},
          body: { 'classes/SetPartnerProfileDto.html': {}, 'classes/SetUserProfileDto.html': {} },
        },
      ],
      [
        'profile.dto.ts:47',
        { _index: 1417, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:6',
        { _index: 1412, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:7',
        { _index: 1392, title: {}, body: { 'classes/SetPartnerProfileDto.html': {} } },
      ],
      [
        'profile.dto.ts:9',
        { _index: 1416, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        'profile.entity',
        {
          _index: 1075,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'entities/UserEntity.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'profile.entity.ts',
        {
          _index: 1089,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'profile.entity.ts:12',
        {
          _index: 1101,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:15',
        {
          _index: 1103,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:18',
        {
          _index: 1100,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:21',
        {
          _index: 1095,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:24',
        {
          _index: 1111,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:27',
        {
          _index: 1096,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:30',
        {
          _index: 1110,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:33',
        {
          _index: 1109,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:36',
        {
          _index: 1099,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:39',
        {
          _index: 1098,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:42',
        {
          _index: 1106,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:49',
        {
          _index: 1115,
          title: {},
          body: { 'entities/PartnerProfileEntity.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'profile.entity.ts:55',
        { _index: 1651, title: {}, body: { 'entities/UserProfileEntity.html': {} } },
      ],
      [
        'profile.entity.ts:57',
        { _index: 1105, title: {}, body: { 'entities/PartnerProfileEntity.html': {} } },
      ],
      [
        'profile.entity.ts:59',
        { _index: 1652, title: {}, body: { 'entities/UserProfileEntity.html': {} } },
      ],
      [
        'profile.entity.ts:65',
        { _index: 1102, title: {}, body: { 'entities/PartnerProfileEntity.html': {} } },
      ],
      [
        'profile.entity.ts:73',
        { _index: 1094, title: {}, body: { 'entities/PartnerProfileEntity.html': {} } },
      ],
      [
        'profile_id',
        {
          _index: 910,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      ['progressive', { _index: 1862, title: {}, body: { 'index.html': {} } }],
      ['project', { _index: 1895, title: {}, body: { 'index.html': {} } }],
      [
        'promise',
        {
          _index: 45,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/Manytoone1731887989393.html': {},
            'injectables/PartnersService.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'properties',
        {
          _index: 11,
          title: { 'properties.html': {} },
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'properties.html': {},
          },
        },
      ],
      [
        'provide',
        {
          _index: 246,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/FileModule.html': {} },
        },
      ],
      [
        'providers',
        {
          _index: 166,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'pt',
        {
          _index: 875,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'miscellaneous/enumerations.html': {} },
        },
      ],
      [
        'public',
        {
          _index: 108,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'injectables/FileService.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'public"."idx_0bb30eecfe3e109dd0c5fbfbc5',
        { _index: 996, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."idx_2a67fee319e78de064f0210347',
        { _index: 994, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."idx_35ba194e002c739c3caf41fdac',
        { _index: 993, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."idx_37fe67a713a33c9385ede5782d',
        { _index: 990, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."idx_a5dd1e5a6d76ed2607dd31b0e6',
        { _index: 995, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."idx_d28e1ffff7d6b7d3eb26253f9d',
        { _index: 991, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."idx_ee316e71a670dca8d696490aee',
        { _index: 989, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."idx_f4d4e7ba1240fe5f2c4be80d13',
        { _index: 992, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."partner_profile_theme_enum',
        { _index: 881, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."user_profile_gender_enum',
        { _index: 853, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."user_settings_locale_enum',
        { _index: 873, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'public"."user_settings_theme_enum',
        { _index: 870, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        "public()@post('login",
        { _index: 258, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        "public()@post('signup",
        { _index: 266, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      ['queryresolver', { _index: 207, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'queryrunner',
        {
          _index: 113,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'queryrunner.query(`alter',
        {
          _index: 118,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'queryrunner.query(`create',
        { _index: 839, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'queryrunner.query(`drop',
        { _index: 988, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      ['randomica', { _index: 1952, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'randomuuid',
        {
          _index: 59,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['read', { _index: 1905, title: {}, body: { 'index.html': {} } }],
      [
        'readonly',
        {
          _index: 286,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['realiza', { _index: 705, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['record', { _index: 593, title: {}, body: { 'injectables/CustomI18nService.html': {} } }],
      [
        'recover_pass_token',
        {
          _index: 930,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'redirect',
        {
          _index: 271,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      ['referal', { _index: 437, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'referencedcolumnname',
        {
          _index: 777,
          title: {},
          body: {
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'references',
        {
          _index: 127,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      ['referência', { _index: 730, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['reflect', { _index: 1839, title: {}, body: { 'dependencies.html': {} } }],
      [
        'reflector',
        {
          _index: 1001,
          title: {},
          body: { 'guards/JwtAuthGuard.html': {}, 'guards/RolesGuard.html': {} },
        },
      ],
      [
        'refresh',
        {
          _index: 387,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'refresh.guard.ts',
        {
          _index: 310,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'refresh.guard.ts:13',
        { _index: 319, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } },
      ],
      [
        'refresh.guard.ts:41',
        { _index: 322, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } },
      ],
      [
        'refresh.guard.ts:8',
        { _index: 316, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } },
      ],
      [
        'refresh_token',
        {
          _index: 929,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['refreshtoken', { _index: 1731, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'region',
        {
          _index: 68,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      [
        'rel_23371445bd80cb3e413089551b',
        { _index: 932, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_3c011f4eefd39da06c16ace49a',
        { _index: 868, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_43e166de56d428d545402567fd',
        { _index: 907, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_4ed056b9344e6f7d8d46ec4b30',
        { _index: 879, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_50daa33af878bb6b33b68a3b44',
        { _index: 886, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_7e549309be75f65476d4a0a98a',
        { _index: 888, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_9fb38ad65447f6855d619dd2ce',
        { _index: 914, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_aa03f4d6277ce01b387c99d856',
        { _index: 933, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_c2bf4967c8c2a6b845dadfbf3d',
        {
          _index: 925,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'classes/Manytoone1731887989393.html': {} },
        },
      ],
      [
        'rel_d50aa4ca9c1c0b68de9519c26d',
        { _index: 887, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_eee360f3bff24af1b689076520',
        { _index: 867, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_f01a03d81d935e1e4545ef0ecf',
        { _index: 915, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_fdad7d5768277e60c40e01cdce',
        { _index: 924, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'rel_fde44edfeb831a0f12733b0938',
        {
          _index: 124,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
          },
        },
      ],
      [
        'relations',
        {
          _index: 825,
          title: {},
          body: {
            'injectables/FollowersService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      ['remove', { _index: 1734, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'removerefreshtoken',
        { _index: 1713, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'removerefreshtoken(userid',
        { _index: 1732, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'repository',
        {
          _index: 693,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      ['repositório', { _index: 707, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['req', { _index: 260, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        "req.res.setheader('set",
        { _index: 302, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      ['req.user', { _index: 304, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        'request',
        {
          _index: 63,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'guards/JwtAuthGuard.html': {},
            'dependencies.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'request.current_partner',
        {
          _index: 1020,
          title: {},
          body: { 'guards/JwtAuthGuard.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'request.current_user',
        {
          _index: 345,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ["request.headers['x", { _index: 1015, title: {}, body: { 'guards/JwtAuthGuard.html': {} } }],
      [
        'request?.cookies?.vg1',
        { _index: 1021, title: {}, body: { 'guards/JwtAuthGuard.html': {} } },
      ],
      [
        'request?.cookies?.vg2',
        { _index: 347, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } },
      ],
      ['requied', { _index: 1608, title: {}, body: { 'classes/UpdateTeamDto.html': {} } }],
      [
        "requied'})@isuuid('4",
        { _index: 1606, title: {}, body: { 'classes/UpdateTeamDto.html': {} } },
      ],
      [
        'required',
        {
          _index: 156,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      [
        "required'})@isarray({message",
        { _index: 142, title: {}, body: { 'classes/AddteamMemberDto.html': {} } },
      ],
      [
        "required'})@isemail",
        {
          _index: 551,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        "required'})@isenum(locales_enum",
        { _index: 1430, title: {}, body: { 'classes/SetUserSettingsDto.html': {} } },
      ],
      [
        "required'})@isenum(theme_enum",
        { _index: 1432, title: {}, body: { 'classes/SetUserSettingsDto.html': {} } },
      ],
      [
        "required'})@isstring({message",
        {
          _index: 510,
          title: {},
          body: {
            'classes/CreatePartnerDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
          },
        },
      ],
      [
        "required'})@isuuid('4",
        {
          _index: 767,
          title: {},
          body: { 'classes/FollowPartnerDto.html': {}, 'classes/UserFollowPartnerDto.html': {} },
        },
      ],
      ['requiredroles', { _index: 1375, title: {}, body: { 'guards/RolesGuard.html': {} } }],
      [
        'requiredroles.some((role',
        { _index: 1377, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      ['res', { _index: 272, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        'reset',
        {
          _index: 187,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
      ['resolvers', { _index: 236, title: {}, body: { 'modules/AppModule.html': {} } }],
      ['response', { _index: 279, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        'results',
        {
          _index: 100,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'dependencies.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/functions.html': {},
            'index.html': {},
            'modules.html': {},
            'overview.html': {},
            'properties.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'retorna',
        {
          _index: 718,
          title: {},
          body: { 'injectables/FileService.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      ['retornado', { _index: 390, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'return',
        {
          _index: 73,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'returns',
        {
          _index: 39,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/CustomI18nService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/Manytoone1731887989393.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/StripePaymentGateway.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'reverse',
        {
          _index: 494,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      ['review', { _index: 1055, title: {}, body: { 'entities/PartnerEntity.html': {} } }],
      ['review.partner', { _index: 1056, title: {}, body: { 'entities/PartnerEntity.html': {} } }],
      [
        'reviews',
        {
          _index: 892,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      ['reviews.user', { _index: 1628, title: {}, body: { 'entities/UserEntity.html': {} } }],
      [
        'reviews/entities/reviews.entity',
        {
          _index: 1078,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'reviewsentity',
        {
          _index: 1054,
          title: { 'entities/ReviewsEntity.html': {} },
          body: {
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/UserEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'reviewsmodule',
        {
          _index: 179,
          title: { 'modules/ReviewsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/ReviewsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'role',
        {
          _index: 920,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/RoleEntity.html': {} },
        },
      ],
      [
        'role_id',
        {
          _index: 946,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/TeamMemberEntity.html': {} },
        },
      ],
      [
        'roles',
        {
          _index: 919,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'guards/JwtAuthGuard.html': {},
            'entities/RoleEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['roles"("id', { _index: 985, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['roles.service', { _index: 1383, title: {}, body: { 'modules/RolesModule.html': {} } }],
      [
        'roles.team_members',
        { _index: 1530, title: {}, body: { 'entities/TeamMemberEntity.html': {} } },
      ],
      [
        'roles.team_members)@jointable({name',
        { _index: 1524, title: {}, body: { 'entities/TeamMemberEntity.html': {} } },
      ],
      [
        'roles/entities/roles.entity',
        { _index: 1529, title: {}, body: { 'entities/TeamMemberEntity.html': {} } },
      ],
      [
        'roles_enum',
        {
          _index: 1373,
          title: {},
          body: {
            'guards/RolesGuard.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'roles_key',
        {
          _index: 1371,
          title: {},
          body: {
            'guards/RolesGuard.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'rolesentity',
        {
          _index: 1355,
          title: { 'entities/RoleEntity.html': {} },
          body: {
            'entities/RoleEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'rolesguard',
        {
          _index: 1365,
          title: { 'guards/RolesGuard.html': {} },
          body: { 'guards/RolesGuard.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'rolesmodule',
        {
          _index: 180,
          title: { 'modules/RolesModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/RolesModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'rolesservice',
        {
          _index: 1381,
          title: { 'injectables/RolesService.html': {} },
          body: {
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['run', { _index: 1880, title: {}, body: { 'index.html': {} } }],
      [
        'rxjs',
        {
          _index: 1370,
          title: {},
          body: { 'guards/RolesGuard.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        's3',
        {
          _index: 34,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['s3.ts', { _index: 7, title: {}, body: { 'classes/AWSS3.html': {}, 'coverage.html': {} } }],
      ['s3.ts:11', { _index: 29, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['s3.ts:12', { _index: 22, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['s3.ts:25', { _index: 51, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['s3.ts:46', { _index: 47, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['s3.ts:62', { _index: 42, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['s3.ts:77', { _index: 32, title: {}, body: { 'classes/AWSS3.html': {} } }],
      [
        's3client',
        {
          _index: 28,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      [
        's3v3',
        {
          _index: 14,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['sa', { _index: 69, title: {}, body: { 'classes/AWSS3.html': {} } }],
      ['salt', { _index: 1942, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['salva', { _index: 729, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['salvo', { _index: 339, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } }],
      ['scalable', { _index: 1867, title: {}, body: { 'index.html': {} } }],
      ['scope', { _index: 1005, title: {}, body: { 'guards/JwtAuthGuard.html': {} } }],
      ['scope.request', { _index: 1009, title: {}, body: { 'guards/JwtAuthGuard.html': {} } }],
      [
        'sdk/client',
        {
          _index: 55,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'sdk/lib',
        {
          _index: 57,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'sdk/s3',
        {
          _index: 62,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'se',
        {
          _index: 335,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'secret',
        {
          _index: 332,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'secretaccesskey',
        {
          _index: 633,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'entities/FileEntity.html': {} },
        },
      ],
      [
        'secretsalthash',
        {
          _index: 1822,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      ['sequencia', { _index: 1951, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['serial', { _index: 893, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['server', { _index: 1868, title: {}, body: { 'index.html': {} } }],
      ['serviço', { _index: 727, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['sessio', { _index: 378, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['session', { _index: 388, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'set',
        {
          _index: 433,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['setado', { _index: 382, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'setcurrentrefreshtoken',
        { _index: 1714, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setcurrentrefreshtoken(userid',
        { _index: 1736, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        "setmetadata('roles",
        { _index: 1968, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'setmetadata(is_public_key',
        { _index: 1959, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'setparnterprofiledto',
        { _index: 1249, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'setpartnerprofile',
        {
          _index: 1186,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'setpartnerprofile(partnerid',
        {
          _index: 1196,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'setpartnerprofiledto',
        {
          _index: 1197,
          title: { 'classes/SetPartnerProfileDto.html': {} },
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'setpartnersettingdto',
        { _index: 1251, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'setpartnersettings',
        {
          _index: 1187,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'setpartnersettings(partnerid',
        {
          _index: 1200,
          title: {},
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'setpartnersettingsdto',
        { _index: 1201, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      ['setprofiledto', { _index: 1741, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'setprofiledto.city',
        { _index: 1768, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.complement',
        { _index: 1767, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.country',
        { _index: 1770, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.first_name',
        { _index: 1763, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.last_name',
        { _index: 1764, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.phone',
        { _index: 1765, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.postal_code',
        { _index: 1771, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.state',
        { _index: 1769, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setprofiledto.street',
        { _index: 1766, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      ['setprofileobj', { _index: 1777, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'settings',
        {
          _index: 1038,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'injectables/PartnersService.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'settings.dto',
        {
          _index: 1684,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'settings.dto.ts',
        {
          _index: 1427,
          title: {},
          body: { 'classes/SetUserSettingsDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'settings.dto.ts:12',
        { _index: 1431, title: {}, body: { 'classes/SetUserSettingsDto.html': {} } },
      ],
      [
        'settings.dto.ts:8',
        { _index: 1433, title: {}, body: { 'classes/SetUserSettingsDto.html': {} } },
      ],
      [
        'settings.entity',
        {
          _index: 1083,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'entities/UserEntity.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'settings.entity.ts',
        {
          _index: 1121,
          title: {},
          body: {
            'entities/PartnerSettingsEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'settings.entity.ts:14',
        { _index: 1655, title: {}, body: { 'entities/UserSettingsEntity.html': {} } },
      ],
      [
        'settings.entity.ts:17',
        { _index: 1123, title: {}, body: { 'entities/PartnerSettingsEntity.html': {} } },
      ],
      [
        'settings.entity.ts:18',
        { _index: 1658, title: {}, body: { 'entities/UserSettingsEntity.html': {} } },
      ],
      [
        'settings.entity.ts:25',
        { _index: 1657, title: {}, body: { 'entities/UserSettingsEntity.html': {} } },
      ],
      [
        'settings.entity.ts:32',
        { _index: 1656, title: {}, body: { 'entities/UserSettingsEntity.html': {} } },
      ],
      [
        'settings.entity.ts:9',
        { _index: 1122, title: {}, body: { 'entities/PartnerSettingsEntity.html': {} } },
      ],
      [
        'settings.interface',
        {
          _index: 499,
          title: {},
          body: { 'classes/CreateCustomerDto.html': {}, 'classes/UpdateCustomerDto.html': {} },
        },
      ],
      [
        'settings.interface.ts',
        {
          _index: 997,
          title: {},
          body: { 'interfaces/InvoiceSettingsInterface.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'settings_id',
        {
          _index: 911,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'setuserprofile',
        {
          _index: 1663,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'setuserprofile(@currentuser',
        { _index: 1694, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'setuserprofile(currentuser',
        { _index: 1674, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'setuserprofile(user',
        { _index: 1740, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setuserprofiledto',
        {
          _index: 1403,
          title: { 'classes/SetUserProfileDto.html': {} },
          body: {
            'classes/SetUserProfileDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'setusersettings',
        {
          _index: 1664,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'setusersettings(@currentuser',
        { _index: 1696, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'setusersettings(currentuser',
        { _index: 1677, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'setusersettings(user',
        { _index: 1743, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'setusersettingsdto',
        {
          _index: 1426,
          title: { 'classes/SetUserSettingsDto.html': {} },
          body: {
            'classes/SetUserSettingsDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "sha512').tostring('hex",
        { _index: 1948, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      ['shoud', { _index: 143, title: {}, body: { 'classes/AddteamMemberDto.html': {} } }],
      ['si', { _index: 392, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['side', { _index: 1869, title: {}, body: { 'index.html': {} } }],
      ['sidnupdto', { _index: 268, title: {}, body: { 'controllers/AuthController.html': {} } }],
      ['signoptions', { _index: 361, title: {}, body: { 'modules/AuthModule.html': {} } }],
      [
        'signup',
        {
          _index: 255,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'injectables/AuthService.html': {} },
        },
      ],
      ['signup(@body', { _index: 288, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        'signup(sidnupdto',
        { _index: 264, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        'signup(singupdto',
        { _index: 397, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'signupdto',
        {
          _index: 265,
          title: { 'classes/SignUpDto.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/SignUpDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'signuppartnerdto',
        {
          _index: 281,
          title: { 'classes/SignUpPartnerDto.html': {} },
          body: {
            'controllers/AuthController.html': {},
            'injectables/AuthService.html': {},
            'classes/SignUpPartnerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['singup', { _index: 399, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['singupdto', { _index: 405, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['singupdto.email', { _index: 423, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'singupdto.partner_id',
        { _index: 438, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      ['size', { _index: 1419, title: {}, body: { 'classes/SetUserProfileDto.html': {} } }],
      ['softdelete', { _index: 706, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'softfieldsforentities',
        {
          _index: 656,
          title: { 'classes/SoftFieldsForEntities.html': {} },
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'source',
        {
          _index: 4,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'modules/AppModule.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreateFileDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'modules/CustomI18nModule.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'modules/FileModule.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'modules/FollowersModule.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'modules/NotificationsModule.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'modules/PartnersModule.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'modules/PlansModule.html': {},
            'modules/ProductsModule.html': {},
            'entities/ReviewsEntity.html': {},
            'modules/ReviewsModule.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'modules/RolesModule.html': {},
            'injectables/RolesService.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'modules/SubscribersModule.html': {},
            'entities/TagEntity.html': {},
            'modules/TagsModule.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'modules/TransactionsModule.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdateFileDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'index.html': {},
          },
        },
      ],
      [
        'spaces',
        {
          _index: 623,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'modules/FileModule.html': {} },
        },
      ],
      [
        'spaces.ts',
        {
          _index: 616,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'coverage.html': {} },
        },
      ],
      ['spaces.ts:12', { _index: 619, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      ['spaces.ts:13', { _index: 617, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      ['spaces.ts:31', { _index: 626, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      ['spaces.ts:54', { _index: 625, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      ['spaces.ts:72', { _index: 624, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      ['spaces.ts:89', { _index: 620, title: {}, body: { 'classes/DigitalOceanSpaces.html': {} } }],
      [
        'special',
        {
          _index: 561,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      ['special_char', { _index: 1963, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['sponsors', { _index: 1898, title: {}, body: { 'index.html': {} } }],
      ['src/.../auth', { _index: 1937, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'src/.../current',
        { _index: 1934, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'src/.../encryption.ts',
        { _index: 1933, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'src/.../file.constants.ts',
        { _index: 1935, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'src/.../locales.enum.ts',
        { _index: 1846, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/.../main.ts',
        { _index: 1859, title: {}, body: { 'miscellaneous/functions.html': {} } },
      ],
      [
        'src/.../public.decorator.ts',
        { _index: 1936, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'src/.../role.decorator.ts',
        { _index: 1938, title: {}, body: { 'miscellaneous/variables.html': {} } },
      ],
      [
        'src/.../roles.enum.ts',
        { _index: 1847, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/.../theme.enum.ts',
        { _index: 1848, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/.../user.enum.dto.ts',
        { _index: 1849, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      ['src/app.module.ts', { _index: 189, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'src/apps/auth/auth',
        {
          _index: 1790,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/apps/auth/auth.controller.ts',
        {
          _index: 250,
          title: {},
          body: { 'controllers/AuthController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/auth/auth.controller.ts:19',
        { _index: 267, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        'src/apps/auth/auth.controller.ts:33',
        { _index: 259, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        'src/apps/auth/auth.controller.ts:45',
        { _index: 262, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        'src/apps/auth/auth.module.ts',
        { _index: 352, title: {}, body: { 'modules/AuthModule.html': {} } },
      ],
      [
        'src/apps/auth/auth.service.ts',
        {
          _index: 365,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/auth/auth.service.ts:105',
        { _index: 395, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'src/apps/auth/auth.service.ts:116',
        { _index: 377, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'src/apps/auth/auth.service.ts:13',
        { _index: 372, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'src/apps/auth/auth.service.ts:132',
        { _index: 386, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'src/apps/auth/auth.service.ts:153',
        { _index: 373, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'src/apps/auth/auth.service.ts:29',
        { _index: 398, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'src/apps/auth/auth.service.ts:69',
        { _index: 408, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'src/apps/auth/dtos/login.dto.ts',
        { _index: 1022, title: {}, body: { 'classes/LoginDto.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/auth/dtos/login.dto.ts:12',
        { _index: 1026, title: {}, body: { 'classes/LoginDto.html': {} } },
      ],
      [
        'src/apps/auth/dtos/login.dto.ts:34',
        { _index: 1027, title: {}, body: { 'classes/LoginDto.html': {} } },
      ],
      [
        'src/apps/auth/dtos/login.dto.ts:6',
        { _index: 1023, title: {}, body: { 'classes/LoginDto.html': {} } },
      ],
      [
        'src/apps/auth/dtos/signup',
        {
          _index: 1443,
          title: {},
          body: { 'classes/SignUpPartnerDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/auth/dtos/signup.dto.ts',
        { _index: 1436, title: {}, body: { 'classes/SignUpDto.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/auth/dtos/signup.dto.ts:29',
        { _index: 1440, title: {}, body: { 'classes/SignUpDto.html': {} } },
      ],
      [
        'src/apps/auth/dtos/signup.dto.ts:33',
        { _index: 1439, title: {}, body: { 'classes/SignUpDto.html': {} } },
      ],
      [
        'src/apps/auth/dtos/signup.dto.ts:7',
        { _index: 1437, title: {}, body: { 'classes/SignUpDto.html': {} } },
      ],
      [
        'src/apps/files/dto/create',
        { _index: 502, title: {}, body: { 'classes/CreateFileDto.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/files/dto/update',
        {
          _index: 1601,
          title: {},
          body: { 'classes/UpdateFileDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/files/entities/file.entity.ts',
        { _index: 638, title: {}, body: { 'entities/FileEntity.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/files/entities/file.entity.ts:23',
        { _index: 648, title: {}, body: { 'entities/FileEntity.html': {} } },
      ],
      [
        'src/apps/files/entities/file.entity.ts:26',
        { _index: 642, title: {}, body: { 'entities/FileEntity.html': {} } },
      ],
      [
        'src/apps/files/entities/file.entity.ts:36',
        { _index: 644, title: {}, body: { 'entities/FileEntity.html': {} } },
      ],
      [
        'src/apps/files/entities/file.entity.ts:40',
        { _index: 646, title: {}, body: { 'entities/FileEntity.html': {} } },
      ],
      [
        'src/apps/files/entities/file.entity.ts:42',
        { _index: 649, title: {}, body: { 'entities/FileEntity.html': {} } },
      ],
      [
        'src/apps/files/file.constants.ts',
        {
          _index: 1798,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/apps/files/file.impl.interface.ts',
        {
          _index: 669,
          title: {},
          body: { 'interfaces/FileImplInterface.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/files/file.impl.interface.ts:2',
        { _index: 675, title: {}, body: { 'interfaces/FileImplInterface.html': {} } },
      ],
      [
        'src/apps/files/file.impl.interface.ts:3',
        { _index: 674, title: {}, body: { 'interfaces/FileImplInterface.html': {} } },
      ],
      [
        'src/apps/files/file.impl.interface.ts:4',
        { _index: 673, title: {}, body: { 'interfaces/FileImplInterface.html': {} } },
      ],
      [
        'src/apps/files/file.impl.interface.ts:5',
        { _index: 671, title: {}, body: { 'interfaces/FileImplInterface.html': {} } },
      ],
      [
        'src/apps/files/file.module.ts',
        { _index: 680, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'src/apps/files/file.service.ts',
        {
          _index: 687,
          title: {},
          body: { 'injectables/FileService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/files/file.service.ts:13',
        { _index: 695, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'src/apps/files/file.service.ts:32',
        { _index: 725, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'src/apps/files/file.service.ts:58',
        { _index: 717, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'src/apps/files/file.service.ts:73',
        { _index: 711, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'src/apps/files/file.service.ts:89',
        { _index: 698, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'src/apps/files/implementations/aws',
        { _index: 6, title: {}, body: { 'classes/AWSS3.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/files/implementations/digitalocean',
        {
          _index: 615,
          title: {},
          body: { 'classes/DigitalOceanSpaces.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/followers/dtos/follow',
        {
          _index: 766,
          title: {},
          body: { 'classes/FollowPartnerDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/followers/dtos/unfollow',
        {
          _index: 1596,
          title: {},
          body: { 'classes/UnfollowPartnerDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/followers/entities/followers.entity.ts',
        {
          _index: 771,
          title: {},
          body: { 'entities/FollowerEntity.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/followers/entities/followers.entity.ts:12',
        { _index: 772, title: {}, body: { 'entities/FollowerEntity.html': {} } },
      ],
      [
        'src/apps/followers/entities/followers.entity.ts:20',
        { _index: 783, title: {}, body: { 'entities/FollowerEntity.html': {} } },
      ],
      [
        'src/apps/followers/entities/followers.entity.ts:30',
        { _index: 780, title: {}, body: { 'entities/FollowerEntity.html': {} } },
      ],
      [
        'src/apps/followers/followers.module.ts',
        { _index: 792, title: {}, body: { 'modules/FollowersModule.html': {} } },
      ],
      [
        'src/apps/followers/followers.service.ts',
        {
          _index: 796,
          title: {},
          body: { 'injectables/FollowersService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/followers/followers.service.ts:14',
        { _index: 803, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'src/apps/followers/followers.service.ts:22',
        { _index: 814, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'src/apps/followers/followers.service.ts:31',
        { _index: 808, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'src/apps/followers/followers.service.ts:39',
        { _index: 812, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'src/apps/followers/followers.service.ts:48',
        { _index: 806, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'src/apps/followers/followers.service.ts:56',
        { _index: 810, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'src/apps/followers/followers.service.ts:70',
        { _index: 816, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'src/apps/i18n/i18n.module.ts',
        { _index: 585, title: {}, body: { 'modules/CustomI18nModule.html': {} } },
      ],
      [
        'src/apps/i18n/i18n.service.ts',
        {
          _index: 587,
          title: {},
          body: { 'injectables/CustomI18nService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/i18n/i18n.service.ts:5',
        { _index: 591, title: {}, body: { 'injectables/CustomI18nService.html': {} } },
      ],
      [
        'src/apps/i18n/i18n.service.ts:8',
        { _index: 594, title: {}, body: { 'injectables/CustomI18nService.html': {} } },
      ],
      [
        'src/apps/notifications/notifications.module.ts',
        { _index: 1034, title: {}, body: { 'modules/NotificationsModule.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.controller.ts',
        {
          _index: 1183,
          title: {},
          body: { 'controllers/PartnersController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/partners/controllers/partners.controller.ts:33',
        { _index: 1190, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.controller.ts:42',
        { _index: 1192, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.controller.ts:47',
        { _index: 1207, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.controller.ts:59',
        { _index: 1195, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.controller.ts:64',
        { _index: 1199, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.controller.ts:76',
        { _index: 1203, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.teams.controller.ts',
        {
          _index: 1126,
          title: {},
          body: { 'controllers/PartnerTeamsController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/partners/controllers/partners.teams.controller.ts:31',
        { _index: 1143, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.teams.controller.ts:36',
        { _index: 1140, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.teams.controller.ts:57',
        { _index: 1136, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'src/apps/partners/controllers/partners.teams.controller.ts:86',
        { _index: 1146, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'src/apps/partners/dtos/create',
        {
          _index: 505,
          title: {},
          body: { 'classes/CreatePartnerDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/partners/dtos/set',
        {
          _index: 1385,
          title: {},
          body: { 'classes/SetPartnerProfileDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/partners/dtos/update',
        {
          _index: 1603,
          title: {},
          body: { 'classes/UpdatePartnerDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/partners/entities/partner',
        {
          _index: 1088,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts',
        {
          _index: 1035,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:35',
        { _index: 1044, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:38',
        { _index: 1045, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:41',
        { _index: 1040, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:49',
        { _index: 1053, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:57',
        { _index: 1059, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:60',
        { _index: 1063, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:63',
        { _index: 1043, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:66',
        { _index: 1057, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:80',
        { _index: 1066, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:94',
        { _index: 1049, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/entities/partner.entity.ts:97',
        { _index: 1069, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'src/apps/partners/partners.module.ts',
        { _index: 1226, title: {}, body: { 'modules/PartnersModule.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts',
        {
          _index: 1232,
          title: {},
          body: { 'injectables/PartnersService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/partners/partners.service.ts:129',
        { _index: 1252, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:15',
        { _index: 1238, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:163',
        { _index: 1241, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:175',
        { _index: 1248, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:31',
        { _index: 1243, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:62',
        { _index: 1255, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:70',
        { _index: 1244, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:74',
        { _index: 1246, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/partners/partners.service.ts:87',
        { _index: 1250, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'src/apps/payment',
        {
          _index: 468,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/apps/plans/plans.module.ts',
        { _index: 1341, title: {}, body: { 'modules/PlansModule.html': {} } },
      ],
      [
        'src/apps/products/products.module.ts',
        { _index: 1342, title: {}, body: { 'modules/ProductsModule.html': {} } },
      ],
      [
        'src/apps/reviews/entities/reviews.entity.ts',
        {
          _index: 1343,
          title: {},
          body: { 'entities/ReviewsEntity.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/reviews/entities/reviews.entity.ts:12',
        { _index: 1345, title: {}, body: { 'entities/ReviewsEntity.html': {} } },
      ],
      [
        'src/apps/reviews/entities/reviews.entity.ts:16',
        { _index: 1352, title: {}, body: { 'entities/ReviewsEntity.html': {} } },
      ],
      [
        'src/apps/reviews/entities/reviews.entity.ts:22',
        { _index: 1347, title: {}, body: { 'entities/ReviewsEntity.html': {} } },
      ],
      [
        'src/apps/reviews/entities/reviews.entity.ts:25',
        { _index: 1350, title: {}, body: { 'entities/ReviewsEntity.html': {} } },
      ],
      [
        'src/apps/reviews/entities/reviews.entity.ts:28',
        { _index: 1344, title: {}, body: { 'entities/ReviewsEntity.html': {} } },
      ],
      [
        'src/apps/reviews/reviews.module.ts',
        { _index: 1354, title: {}, body: { 'modules/ReviewsModule.html': {} } },
      ],
      [
        'src/apps/roles/entities/roles.entity.ts',
        { _index: 1356, title: {}, body: { 'entities/RoleEntity.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/roles/entities/roles.entity.ts:10',
        { _index: 1357, title: {}, body: { 'entities/RoleEntity.html': {} } },
      ],
      [
        'src/apps/roles/entities/roles.entity.ts:13',
        { _index: 1358, title: {}, body: { 'entities/RoleEntity.html': {} } },
      ],
      [
        'src/apps/roles/entities/roles.entity.ts:16',
        { _index: 1362, title: {}, body: { 'entities/RoleEntity.html': {} } },
      ],
      [
        'src/apps/roles/roles.module.ts',
        { _index: 1382, title: {}, body: { 'modules/RolesModule.html': {} } },
      ],
      [
        'src/apps/roles/roles.service.ts',
        {
          _index: 1384,
          title: {},
          body: { 'injectables/RolesService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/subscribers/entities/subscribers.entity.ts',
        {
          _index: 1508,
          title: {},
          body: { 'entities/SubscriberEntity.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/subscribers/entities/subscribers.entity.ts:11',
        { _index: 1509, title: {}, body: { 'entities/SubscriberEntity.html': {} } },
      ],
      [
        'src/apps/subscribers/entities/subscribers.entity.ts:17',
        { _index: 1513, title: {}, body: { 'entities/SubscriberEntity.html': {} } },
      ],
      [
        'src/apps/subscribers/entities/subscribers.entity.ts:23',
        { _index: 1511, title: {}, body: { 'entities/SubscriberEntity.html': {} } },
      ],
      [
        'src/apps/subscribers/subscribers.module.ts',
        { _index: 1514, title: {}, body: { 'modules/SubscribersModule.html': {} } },
      ],
      [
        'src/apps/tags/entities/tags.entity.ts',
        { _index: 1515, title: {}, body: { 'entities/TagEntity.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/tags/entities/tags.entity.ts:14',
        { _index: 1517, title: {}, body: { 'entities/TagEntity.html': {} } },
      ],
      [
        'src/apps/tags/entities/tags.entity.ts:9',
        { _index: 1516, title: {}, body: { 'entities/TagEntity.html': {} } },
      ],
      [
        'src/apps/tags/tags.module.ts',
        { _index: 1518, title: {}, body: { 'modules/TagsModule.html': {} } },
      ],
      [
        'src/apps/teams/dtos/add',
        {
          _index: 133,
          title: {},
          body: { 'classes/AddteamMemberDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/teams/dtos/create',
        { _index: 545, title: {}, body: { 'classes/CreateTeamDto.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/teams/dtos/update',
        {
          _index: 1604,
          title: {},
          body: { 'classes/UpdateTeamDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/teams/entities/team',
        {
          _index: 1519,
          title: {},
          body: { 'entities/TeamMemberEntity.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/teams/entities/teams.entity.ts',
        { _index: 1531, title: {}, body: { 'entities/TeamsEntity.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/teams/entities/teams.entity.ts:19',
        { _index: 1532, title: {}, body: { 'entities/TeamsEntity.html': {} } },
      ],
      [
        'src/apps/teams/entities/teams.entity.ts:22',
        { _index: 1538, title: {}, body: { 'entities/TeamsEntity.html': {} } },
      ],
      [
        'src/apps/teams/entities/teams.entity.ts:26',
        { _index: 1540, title: {}, body: { 'entities/TeamsEntity.html': {} } },
      ],
      [
        'src/apps/teams/entities/teams.entity.ts:34',
        { _index: 1537, title: {}, body: { 'entities/TeamsEntity.html': {} } },
      ],
      [
        'src/apps/teams/teams.module.ts',
        { _index: 1546, title: {}, body: { 'modules/TeamsModule.html': {} } },
      ],
      [
        'src/apps/teams/teams.service.ts',
        {
          _index: 1551,
          title: {},
          body: { 'injectables/TeamsService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/teams/teams.service.ts:103',
        { _index: 1568, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'src/apps/teams/teams.service.ts:16',
        { _index: 1556, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'src/apps/teams/teams.service.ts:32',
        { _index: 1561, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'src/apps/teams/teams.service.ts:46',
        { _index: 1572, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'src/apps/teams/teams.service.ts:61',
        { _index: 1563, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'src/apps/teams/teams.service.ts:75',
        { _index: 1565, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'src/apps/teams/teams.service.ts:85',
        { _index: 1559, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'src/apps/transactions/transactions.module.ts',
        { _index: 1595, title: {}, body: { 'modules/TransactionsModule.html': {} } },
      ],
      [
        'src/apps/users/dtos/create',
        { _index: 549, title: {}, body: { 'classes/CreateUserDto.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/users/dtos/set',
        {
          _index: 1404,
          title: {},
          body: {
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/apps/users/dtos/update',
        {
          _index: 1610,
          title: {},
          body: { 'classes/UpdateUserDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/users/dtos/user',
        {
          _index: 1648,
          title: {},
          body: { 'classes/UserFollowPartnerDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/users/entities/user',
        {
          _index: 1649,
          title: {},
          body: {
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/apps/users/entities/user.entity.ts',
        { _index: 1613, title: {}, body: { 'entities/UserEntity.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:34',
        { _index: 1619, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:37',
        { _index: 1616, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:41',
        { _index: 1622, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:45',
        { _index: 1627, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:49',
        { _index: 1626, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:53',
        { _index: 1637, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:61',
        { _index: 1624, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:69',
        { _index: 1631, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:72',
        { _index: 1633, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:75',
        { _index: 1618, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:78',
        { _index: 1629, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:92',
        { _index: 1634, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:95',
        { _index: 1621, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/entities/user.entity.ts:98',
        { _index: 1636, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        'src/apps/users/user.enum.dto.ts',
        { _index: 1856, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/apps/users/users.controller.ts',
        {
          _index: 1661,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/users/users.controller.ts:17',
        { _index: 1666, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'src/apps/users/users.controller.ts:26',
        { _index: 1681, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'src/apps/users/users.controller.ts:36',
        { _index: 1669, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'src/apps/users/users.controller.ts:41',
        { _index: 1676, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'src/apps/users/users.controller.ts:46',
        { _index: 1679, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'src/apps/users/users.controller.ts:51',
        { _index: 1673, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'src/apps/users/users.module.ts',
        { _index: 1705, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts',
        {
          _index: 1710,
          title: {},
          body: { 'injectables/UsersService.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/apps/users/users.service.ts:103',
        { _index: 1737, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:116',
        { _index: 1733, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:128',
        { _index: 1726, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:140',
        { _index: 1742, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:185',
        { _index: 1744, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:21',
        { _index: 1719, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:41',
        { _index: 1721, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:52',
        { _index: 1746, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:67',
        { _index: 1724, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:77',
        { _index: 1723, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/apps/users/users.service.ts:89',
        { _index: 1728, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'src/decorators/current',
        {
          _index: 1813,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/decorators/public.decorator.ts',
        {
          _index: 1816,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/decorators/role.decorator.ts',
        {
          _index: 1817,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/enums/locales.enum.ts',
        { _index: 1850, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/enums/roles.enum.ts',
        { _index: 1851, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/enums/theme.enum.ts',
        { _index: 1854, title: {}, body: { 'miscellaneous/enumerations.html': {} } },
      ],
      [
        'src/guards/auth',
        {
          _index: 308,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'src/guards/roles.guard.ts',
        { _index: 1366, title: {}, body: { 'guards/RolesGuard.html': {}, 'coverage.html': {} } },
      ],
      [
        'src/guards/roles.guard.ts:10',
        { _index: 1368, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'src/guards/roles.guard.ts:8',
        { _index: 1367, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'src/main.ts',
        {
          _index: 1818,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/functions.html': {} },
        },
      ],
      [
        'src/migrations/1731534812101',
        {
          _index: 834,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/migrations/1731880851697',
        {
          _index: 103,
          title: {},
          body: { 'classes/AddManyToOne1731880851697.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/migrations/1731887989393',
        {
          _index: 1029,
          title: {},
          body: { 'classes/Manytoone1731887989393.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'src/utils/encryption.ts',
        {
          _index: 1820,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'src/utils/soft',
        {
          _index: 1451,
          title: {},
          body: { 'classes/SoftFieldsForEntities.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'stars',
        {
          _index: 894,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/ReviewsEntity.html': {} },
        },
      ],
      ['start', { _index: 1881, title: {}, body: { 'index.html': {} } }],
      ['start:dev', { _index: 1883, title: {}, body: { 'index.html': {} } }],
      ['start:prodtest', { _index: 1885, title: {}, body: { 'index.html': {} } }],
      ['started', { _index: 1861, title: { 'index.html': {} }, body: {} }],
      ['starter', { _index: 1873, title: {}, body: { 'index.html': {} } }],
      [
        'state',
        {
          _index: 610,
          title: {},
          body: {
            'interfaces/CustomerAddressInterface.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['statements', { _index: 1789, title: {}, body: { 'coverage.html': {} } }],
      ['stay', { _index: 1907, title: {}, body: { 'index.html': {} } }],
      [
        'storage',
        {
          _index: 58,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'dependencies.html': {},
          },
        },
      ],
      ['storedhash', { _index: 1939, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'street',
        {
          _index: 859,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'string',
        {
          _index: 31,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'interfaces/CustomerMetadataInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        "string'})@isenum(user_gender_enum",
        { _index: 1414, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        "string'})@length(5",
        { _index: 1418, title: {}, body: { 'classes/SetUserProfileDto.html': {} } },
      ],
      [
        "string'})@matches(passregex.lowercase",
        {
          _index: 556,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
          },
        },
      ],
      [
        "string'})@maxlength(20",
        { _index: 1445, title: {}, body: { 'classes/SignUpPartnerDto.html': {} } },
      ],
      [
        'stripe',
        {
          _index: 1466,
          title: {},
          body: { 'injectables/StripePaymentGateway.html': {}, 'dependencies.html': {} },
        },
      ],
      [
        'stripe(process.env.stripe_secret_key',
        { _index: 1479, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'stripepaymentgateway',
        {
          _index: 1301,
          title: { 'injectables/StripePaymentGateway.html': {} },
          body: {
            'injectables/PaymentGatewayFactory.html': {},
            'modules/PaymentGatewayModule.html': {},
            'injectables/StripePaymentGateway.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'stripuserid',
        { _index: 1477, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      ['subscriber', { _index: 1061, title: {}, body: { 'entities/PartnerEntity.html': {} } }],
      [
        'subscriber.partner',
        { _index: 1062, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      [
        'subscribers',
        {
          _index: 917,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/SubscriberEntity.html': {},
          },
        },
      ],
      [
        'subscribers/entities/subscribers.entity',
        {
          _index: 1076,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'subscribersentity',
        {
          _index: 1060,
          title: { 'entities/SubscriberEntity.html': {} },
          body: {
            'entities/PartnerEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/UserEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'subscribersmodule',
        {
          _index: 181,
          title: { 'modules/SubscribersModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/SubscribersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'subscription.dto',
        {
          _index: 1324,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'subscription.dto.ts',
        {
          _index: 520,
          title: {},
          body: { 'classes/CreateSubscriptionDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'subscription.dto.ts:14',
        { _index: 535, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'subscription.dto.ts:18',
        { _index: 537, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'subscription.dto.ts:22',
        { _index: 540, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'subscription.dto.ts:26',
        { _index: 530, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'subscription.dto.ts:30',
        { _index: 533, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'subscription.dto.ts:34',
        { _index: 532, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'subscription.dto.ts:38',
        { _index: 536, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      ['subscriptions', { _index: 1615, title: {}, body: { 'entities/UserEntity.html': {} } }],
      ['subscriptions.user', { _index: 1632, title: {}, body: { 'entities/UserEntity.html': {} } }],
      [
        'super',
        {
          _index: 661,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      ['support', { _index: 1899, title: {}, body: { 'index.html': {}, 'modules.html': {} } }],
      ['svg', { _index: 1918, title: {}, body: { 'modules.html': {} } }],
      ['t', { _index: 588, title: {}, body: { 'injectables/CustomI18nService.html': {} } }],
      ['t(key', { _index: 592, title: {}, body: { 'injectables/CustomI18nService.html': {} } }],
      [
        'table',
        {
          _index: 119,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 1823, title: {}, body: { 'coverage.html': {} } },
      ],
      [
        'tag',
        {
          _index: 903,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/TagEntity.html': {} },
        },
      ],
      [
        'tag_id',
        {
          _index: 936,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'tags',
        {
          _index: 902,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      ['tags"("id', { _index: 979, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'tags/entities/tags.entity',
        {
          _index: 1082,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'tagsentity',
        {
          _index: 1064,
          title: { 'entities/TagEntity.html': {} },
          body: {
            'entities/PartnerEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/UserEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'tagsmodule',
        {
          _index: 182,
          title: { 'modules/TagsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/TagsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      ['também', { _index: 389, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'tax_exempt',
        {
          _index: 478,
          title: {},
          body: {
            'classes/CreateCustomerDto.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
          },
        },
      ],
      [
        'team',
        {
          _index: 134,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreateTeamDto.html': {},
            'entities/PartnerEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UpdateTeamDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'team.dto',
        {
          _index: 1153,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      [
        'team.dto.ts',
        {
          _index: 546,
          title: {},
          body: {
            'classes/CreateTeamDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['team.dto.ts:12', { _index: 1607, title: {}, body: { 'classes/UpdateTeamDto.html': {} } }],
      [
        'team.dto.ts:5',
        {
          _index: 547,
          title: {},
          body: { 'classes/CreateTeamDto.html': {}, 'classes/UpdateTeamDto.html': {} },
        },
      ],
      ['team.dto.ts:8', { _index: 1605, title: {}, body: { 'classes/UpdateTeamDto.html': {} } }],
      ['team.members', { _index: 1526, title: {}, body: { 'entities/TeamMemberEntity.html': {} } }],
      ['team.partner', { _index: 1068, title: {}, body: { 'entities/PartnerEntity.html': {} } }],
      [
        'team_id',
        {
          _index: 923,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/TeamMemberEntity.html': {},
            'classes/UpdateTeamDto.html': {},
          },
        },
      ],
      [
        'team_member_id',
        {
          _index: 945,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/TeamMemberEntity.html': {} },
        },
      ],
      [
        'team_members',
        {
          _index: 922,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/RoleEntity.html': {},
            'entities/TeamMemberEntity.html': {},
          },
        },
      ],
      [
        'team_members"("id',
        { _index: 983, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'team_members_roles',
        {
          _index: 944,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/TeamMemberEntity.html': {} },
        },
      ],
      ['team_memebers_id', { _index: 1535, title: {}, body: { 'entities/TeamsEntity.html': {} } }],
      ['teamfromdb', { _index: 1584, title: {}, body: { 'injectables/TeamsService.html': {} } }],
      [
        'teamid',
        {
          _index: 1132,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      ['teammeamber', { _index: 1533, title: {}, body: { 'entities/TeamsEntity.html': {} } }],
      ['teammeamber.id', { _index: 1542, title: {}, body: { 'entities/TeamsEntity.html': {} } }],
      [
        'teammeamber.id)@joincolumn({name',
        { _index: 1534, title: {}, body: { 'entities/TeamsEntity.html': {} } },
      ],
      [
        'teammember',
        {
          _index: 1360,
          title: {},
          body: { 'entities/RoleEntity.html': {}, 'injectables/TeamsService.html': {} },
        },
      ],
      ['teammember.members', { _index: 1361, title: {}, body: { 'entities/RoleEntity.html': {} } }],
      [
        'teammemberentity',
        {
          _index: 1359,
          title: { 'entities/TeamMemberEntity.html': {} },
          body: {
            'entities/RoleEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'teammemberpayload',
        { _index: 1588, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'teammemberrepository',
        { _index: 1555, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'teams',
        {
          _index: 120,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'entities/PartnerEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      ['teams"("id', { _index: 971, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['teams.entity', { _index: 1528, title: {}, body: { 'entities/TeamMemberEntity.html': {} } }],
      ['teams.members', { _index: 1635, title: {}, body: { 'entities/UserEntity.html': {} } }],
      ['teams.service', { _index: 1547, title: {}, body: { 'modules/TeamsModule.html': {} } }],
      [
        'teams/dtos/add',
        { _index: 1158, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'teams/dtos/create',
        {
          _index: 1152,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
          },
        },
      ],
      [
        'teams/entities/team',
        { _index: 1363, title: {}, body: { 'entities/RoleEntity.html': {} } },
      ],
      [
        'teams/entities/teams.entity',
        {
          _index: 1084,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'teams/teams.module',
        { _index: 1229, title: {}, body: { 'modules/PartnersModule.html': {} } },
      ],
      [
        'teams/teams.service',
        {
          _index: 1156,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      [
        'teamsentity',
        {
          _index: 1067,
          title: { 'entities/TeamsEntity.html': {} },
          body: {
            'entities/PartnerEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'teamsmodule',
        {
          _index: 183,
          title: { 'modules/TeamsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/TeamsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'teamsrepository',
        { _index: 1557, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'teamsservice',
        {
          _index: 1155,
          title: { 'injectables/TeamsService.html': {} },
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'modules/TeamsModule.html': {},
            'injectables/TeamsService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['termporário', { _index: 715, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['test', { _index: 1888, title: {}, body: { 'index.html': {} } }],
      ['test:covsupport', { _index: 1891, title: {}, body: { 'index.html': {} } }],
      ['test:e2e', { _index: 1890, title: {}, body: { 'index.html': {} } }],
      ['tests', { _index: 1887, title: {}, body: { 'index.html': {} } }],
      ['thanks', { _index: 1897, title: {}, body: { 'index.html': {} } }],
      [
        'theme',
        {
          _index: 878,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'theme_enum',
        {
          _index: 1112,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'entities/UserSettingsEntity.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'theme_enum.light',
        {
          _index: 1120,
          title: {},
          body: {
            'entities/PartnerProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'this.authservice.signup(sidnupdto',
        { _index: 291, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        'this.authservice.userlogin(logindto.email',
        { _index: 300, title: {}, body: { 'controllers/AuthController.html': {} } },
      ],
      [
        'this.bucketname',
        {
          _index: 78,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'this.extractfromheaders(request',
        {
          _index: 329,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      [
        'this.filerepository.create(uploadoptions',
        { _index: 748, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.filerepository.findone',
        { _index: 751, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.filerepository.save(newfile',
        { _index: 749, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.filerepository.softdelete(fileid',
        { _index: 762, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.fileserviceprovider.delete(file.key',
        { _index: 761, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.fileserviceprovider.generateurl(filefromdb.key',
        { _index: 757, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.fileserviceprovider.get(filefromdb.key',
        { _index: 756, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.fileserviceprovider.upload(file',
        { _index: 741, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      [
        'this.findbyid(id',
        { _index: 1272, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.findbyid(partnerid',
        { _index: 1274, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.findbyid(teamid',
        { _index: 1585, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.findbyid(updateteamsdto.team_id',
        { _index: 1581, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.findbyid(userid',
        { _index: 1754, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.followersrepository.count',
        { _index: 826, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'this.followersrepository.create',
        { _index: 830, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'this.followersrepository.find',
        { _index: 824, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'this.followersrepository.save(newfollower',
        { _index: 831, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'this.followersrepository.softdelete',
        { _index: 832, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'this.followservice.follow(user',
        { _index: 1761, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.getcookiesforlogout',
        { _index: 454, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.getcookiewithjwtaccesstoken(userfromdb.id',
        { _index: 444, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.getcookiewithjwtrefreshtoken(userfromdb.id',
        { _index: 446, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        "this.i18n.t('auth.validations.already_exists",
        { _index: 420, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        "this.i18n.t('partners.validations.already_exists",
        { _index: 1263, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        "this.i18n.t('users.validations.not_found",
        { _index: 1177, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'this.i18n.translate(key',
        { _index: 600, title: {}, body: { 'injectables/CustomI18nService.html': {} } },
      ],
      [
        'this.id',
        {
          _index: 1086,
          title: {},
          body: { 'entities/PartnerEntity.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'this.jwtservice.sign(payload',
        { _index: 455, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.jwtservice.verify(token',
        {
          _index: 331,
          title: {},
          body: { 'guards/AuthJwtRefreshGuard.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      ['this.key', { _index: 664, title: {}, body: { 'entities/FileEntity.html': {} } }],
      [
        'this.partnerprofilerepository.create',
        { _index: 1281, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerprofilerepository.findone',
        { _index: 1276, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerprofilerepository.save(newpartnerprofile',
        { _index: 1282, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerprofilerepository.update',
        { _index: 1278, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerrepository.create',
        { _index: 1267, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerrepository.find',
        { _index: 1273, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerrepository.findone',
        { _index: 1261, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerrepository.save(newpartner',
        { _index: 1268, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnerrepository.update(id',
        { _index: 1269, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnersettingsrepository.create',
        { _index: 1291, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnersettingsrepository.findone',
        { _index: 1284, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnersettingsrepository.save(newsettings',
        { _index: 1292, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnersettingsrepository.update',
        { _index: 1286, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.partnersservice.checkparnterowener(currentuser',
        { _index: 1166, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'this.partnersservice.create(current',
        { _index: 1215, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'this.partnersservice.findall',
        { _index: 1216, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'this.partnersservice.findbyid(partnerid',
        {
          _index: 1018,
          title: {},
          body: {
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'this.partnersservice.setpartnerprofile(partnerid',
        { _index: 1220, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'this.partnersservice.setpartnersettings(partnerid',
        { _index: 1221, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      [
        'this.partnersservice.update(partnerid',
        { _index: 1217, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      ['this.password', { _index: 1639, title: {}, body: { 'entities/UserEntity.html': {} } }],
      [
        'this.paymentgatewayfactory.getpaymentgateway',
        { _index: 1337, title: {}, body: { 'injectables/PaymentGatewayService.html': {} } },
      ],
      [
        'this.paymentgatewayservice.createcustomer(paymentuser',
        { _index: 432, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.paymentgatewayservice.updatecustomer(user.user_gateway_id',
        { _index: 1772, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.recover_pass_token',
        { _index: 1646, title: {}, body: { 'entities/UserEntity.html': {} } },
      ],
      [
        "this.reflector.get('roles",
        { _index: 1010, title: {}, body: { 'guards/JwtAuthGuard.html': {} } },
      ],
      [
        'this.reflector.getallandoverride(is_public_key',
        { _index: 1012, title: {}, body: { 'guards/JwtAuthGuard.html': {} } },
      ],
      [
        'this.reflector.getallandoverride(roles_key',
        { _index: 1376, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'this.s3v3',
        {
          _index: 66,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'this.s3v3.send(deletecmd).catch((error',
        {
          _index: 98,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'this.s3v3.send(getfilecmd).catch((error',
        {
          _index: 93,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      [
        'this.stripe',
        { _index: 1478, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'this.stripe.customers.create',
        { _index: 1483, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'this.stripe.customers.update(stripuserid',
        { _index: 1494, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'this.stripe.paymentintents.create',
        { _index: 1500, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'this.stripe.subscriptions.create(createsubscriptiondto',
        { _index: 1495, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'this.stripepaymentgateway',
        { _index: 1309, title: {}, body: { 'injectables/PaymentGatewayFactory.html': {} } },
      ],
      [
        'this.teammemberrepository.create(teammemberpayload',
        { _index: 1591, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teammemberrepository.find',
        { _index: 1594, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teammemberrepository.save(newentities',
        { _index: 1593, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teamsrepository.create',
        { _index: 1577, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teamsrepository.find',
        { _index: 1582, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teamsrepository.findone',
        { _index: 1583, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teamsrepository.save(newteam',
        { _index: 1578, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teamsrepository.update(updateteamsdto.team_id',
        { _index: 1579, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'this.teamsservice.addmembers(currentuser',
        { _index: 1180, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'this.teamsservice.create(currentuser',
        { _index: 1168, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'this.teamsservice.findall(id',
        { _index: 1163, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'this.teamsservice.findbyid(partnerid',
        { _index: 1296, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'this.teamsservice.getmembers(partnerid',
        { _index: 1181, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      ['this.url', { _index: 668, title: {}, body: { 'entities/FileEntity.html': {} } }],
      [
        'this.userprofilerepository.create',
        { _index: 1778, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userprofilerepository.findone',
        { _index: 1774, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userprofilerepository.save(setprofileobj',
        { _index: 1779, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userprofilerepository.update(userhasprofile.id',
        { _index: 1775, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.create(createuserdto',
        { _index: 1752, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.findone',
        { _index: 1756, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.findoneby',
        { _index: 1757, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.save(newuser',
        { _index: 1753, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userrepository.update(userid',
        { _index: 1755, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.userservice.findbyid(member.id',
        { _index: 1176, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'this.usersettingsrepository.create',
        { _index: 1784, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.usersettingsrepository.findone',
        { _index: 1781, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.usersettingsrepository.save(newusersettings',
        { _index: 1785, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.usersettingsrepository.update(userhassettings.id',
        { _index: 1782, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'this.usersservice.create(createuserdto',
        { _index: 1689, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'this.usersservice.create(singupdto',
        { _index: 425, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.usersservice.findbyemail(singupdto.email',
        { _index: 419, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.usersservice.findbyemail(useremail',
        { _index: 440, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.usersservice.findbyid(userid',
        {
          _index: 1016,
          title: {},
          body: { 'guards/JwtAuthGuard.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      [
        'this.usersservice.followpartner(currentuser',
        { _index: 1699, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'this.usersservice.followpartner(userfromdb',
        { _index: 439, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.usersservice.getuserifrefreshtokenmatches(token',
        { _index: 343, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } },
      ],
      [
        'this.usersservice.removerefreshtoken(user.id',
        { _index: 453, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.usersservice.setcurrentrefreshtoken(userfromdb.id',
        { _index: 447, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'this.usersservice.setuserprofile(currentuser',
        { _index: 1695, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'this.usersservice.setusersettings(currentuser',
        { _index: 1697, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'this.usersservice.update(currentuser.id',
        { _index: 1692, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'this.usersservice.update(userfromdb.id',
        { _index: 434, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      ['throught', { _index: 410, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'throw',
        {
          _index: 86,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['time', { _index: 844, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'timestamp',
        {
          _index: 841,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'classes/SoftFieldsForEntities.html': {} },
        },
      ],
      [
        'token',
        {
          _index: 328,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['tokens', { _index: 409, title: {}, body: { 'injectables/AuthService.html': {} } }],
      ['touch', { _index: 1908, title: {}, body: { 'index.html': {} } }],
      [
        'transactionsmodule',
        {
          _index: 184,
          title: { 'modules/TransactionsModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/TransactionsModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'transformer',
        {
          _index: 650,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'trialperioddays',
        { _index: 527, title: {}, body: { 'classes/CreateSubscriptionDto.html': {} } },
      ],
      [
        'true',
        {
          _index: 235,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'modules/AuthModule.html': {},
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'injectables/PartnersService.html': {},
            'guards/RolesGuard.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'true})@joincolumn({name',
        {
          _index: 1052,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        'try',
        {
          _index: 289,
          title: {},
          body: {
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/FileService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      ['twitter', { _index: 1914, title: {}, body: { 'index.html': {} } }],
      [
        'type',
        {
          _index: 27,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/AddteamMemberDto.html': {},
            'controllers/AuthController.html': {},
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'classes/CreateCustomerDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'injectables/CustomI18nService.html': {},
            'interfaces/CustomerAddressInterface.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'interfaces/InvoiceSettingsInterface.html': {},
            'guards/JwtAuthGuard.html': {},
            'classes/LoginDto.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayFactory.html': {},
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'guards/RolesGuard.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'injectables/StripePaymentGateway.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdateCustomerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'typeorm',
        {
          _index: 117,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'entities/FileEntity.html': {},
            'injectables/FileService.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/PartnerSettingsEntity.html': {},
            'injectables/PartnersService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'classes/SoftFieldsForEntities.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/TeamsEntity.html': {},
            'injectables/TeamsService.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'injectables/UsersService.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'typeormmodule',
        {
          _index: 191,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
          },
        },
      ],
      [
        'typeormmodule.forfeature([fileentity',
        { _index: 686, title: {}, body: { 'modules/FileModule.html': {} } },
      ],
      [
        'typeormmodule.forfeature([followersentity',
        { _index: 795, title: {}, body: { 'modules/FollowersModule.html': {} } },
      ],
      [
        'typeormmodule.forfeature([partnerentity',
        { _index: 1231, title: {}, body: { 'modules/PartnersModule.html': {} } },
      ],
      [
        'typeormmodule.forfeature([teamsentity',
        { _index: 1550, title: {}, body: { 'modules/TeamsModule.html': {} } },
      ],
      [
        'typeormmodule.forfeature([userentity',
        { _index: 1709, title: {}, body: { 'modules/UsersModule.html': {} } },
      ],
      [
        'typeormmodule.forroot(datasourceoptions',
        { _index: 227, title: {}, body: { 'modules/AppModule.html': {} } },
      ],
      ['typescript', { _index: 1872, title: {}, body: { 'index.html': {} } }],
      [
        'um',
        {
          _index: 700,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'injectables/UsersService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['uma', { _index: 1950, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      [
        'unauthorizedexception',
        {
          _index: 324,
          title: {},
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'guards/JwtAuthGuard.html': {},
            'guards/RolesGuard.html': {},
          },
        },
      ],
      [
        'undefined',
        {
          _index: 745,
          title: {},
          body: {
            'injectables/FileService.html': {},
            'entities/PartnerEntity.html': {},
            'entities/PartnerProfileEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      ['unfollow', { _index: 801, title: {}, body: { 'injectables/FollowersService.html': {} } }],
      [
        'unfollow(user',
        { _index: 815, title: {}, body: { 'injectables/FollowersService.html': {} } },
      ],
      [
        'unfollowpartnerdto',
        {
          _index: 820,
          title: { 'classes/UnfollowPartnerDto.html': {} },
          body: {
            'injectables/FollowersService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'unique',
        {
          _index: 131,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'entities/FollowerEntity.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
          },
        },
      ],
      [
        "unique('unique_follow",
        { _index: 786, title: {}, body: { 'entities/FollowerEntity.html': {} } },
      ],
      [
        "unique(['user",
        { _index: 1654, title: {}, body: { 'entities/UserProfileEntity.html': {} } },
      ],
      ['unique_follow', { _index: 890, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['unit', { _index: 1886, title: {}, body: { 'index.html': {} } }],
      [
        'unknown',
        {
          _index: 40,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'controllers/AuthController.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/TeamsService.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['unlicensed', { _index: 1931, title: {}, body: { 'properties.html': {} } }],
      [
        'up',
        {
          _index: 110,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'up(queryrunner',
        {
          _index: 115,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
          },
        },
      ],
      [
        'update',
        {
          _index: 130,
          title: {},
          body: {
            'classes/AddManyToOne1731880851697.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'update(@currentuser',
        { _index: 1690, title: {}, body: { 'controllers/UsersController.html': {} } },
      ],
      [
        'update(currentuser',
        {
          _index: 1569,
          title: {},
          body: { 'injectables/TeamsService.html': {}, 'controllers/UsersController.html': {} },
        },
      ],
      ['update(id', { _index: 1254, title: {}, body: { 'injectables/PartnersService.html': {} } }],
      [
        'update(partnerid',
        { _index: 1204, title: {}, body: { 'controllers/PartnersController.html': {} } },
      ],
      ['update(userid', { _index: 1745, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'updatecustomer',
        {
          _index: 1314,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
          },
        },
      ],
      [
        'updatecustomer(paymentgatewayuserid',
        {
          _index: 1319,
          title: {},
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
          },
        },
      ],
      [
        'updatecustomer(stripuserid',
        { _index: 1475, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } },
      ],
      [
        'updatecustomerdto',
        {
          _index: 1320,
          title: { 'classes/UpdateCustomerDto.html': {} },
          body: {
            'interfaces/PaymentGatewayInterface.html': {},
            'injectables/PaymentGatewayService.html': {},
            'injectables/StripePaymentGateway.html': {},
            'classes/UpdateCustomerDto.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updated_at',
        {
          _index: 846,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'classes/SoftFieldsForEntities.html': {} },
        },
      ],
      [
        'updatedatecolumn',
        { _index: 1461, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'updatedatecolumn({type',
        { _index: 1458, title: {}, body: { 'classes/SoftFieldsForEntities.html': {} } },
      ],
      [
        'updatefiledto',
        {
          _index: 1600,
          title: { 'classes/UpdateFileDto.html': {} },
          body: { 'classes/UpdateFileDto.html': {}, 'coverage.html': {} },
        },
      ],
      [
        'updatepartnerdto',
        {
          _index: 1205,
          title: { 'classes/UpdatePartnerDto.html': {} },
          body: {
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'classes/UpdatePartnerDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateresult',
        {
          _index: 818,
          title: {},
          body: {
            'injectables/FollowersService.html': {},
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'updateresult.affected',
        {
          _index: 1270,
          title: {},
          body: {
            'injectables/PartnersService.html': {},
            'injectables/TeamsService.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'updateresults',
        { _index: 1285, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'updateresults.affected',
        { _index: 1288, title: {}, body: { 'injectables/PartnersService.html': {} } },
      ],
      [
        'updateteamdto',
        {
          _index: 1571,
          title: { 'classes/UpdateTeamDto.html': {} },
          body: {
            'injectables/TeamsService.html': {},
            'classes/UpdateTeamDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'updateteamsdto',
        { _index: 1570, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'updateteamsdto.name',
        { _index: 1580, title: {}, body: { 'injectables/TeamsService.html': {} } },
      ],
      [
        'updateuserdto',
        {
          _index: 1609,
          title: { 'classes/UpdateUserDto.html': {} },
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'upload',
        {
          _index: 19,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
            'injectables/FileService.html': {},
          },
        },
      ],
      [
        'upload(file',
        {
          _index: 48,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'interfaces/FileImplInterface.html': {},
          },
        },
      ],
      ['uploadedfile', { _index: 740, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'uploadedfile.key',
        { _index: 743, title: {}, body: { 'injectables/FileService.html': {} } },
      ],
      ['uploadfile', { _index: 691, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['uploadfile(file', { _index: 722, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'uploading',
        {
          _index: 89,
          title: {},
          body: { 'classes/AWSS3.html': {}, 'classes/DigitalOceanSpaces.html': {} },
        },
      ],
      ['uploadoptions', { _index: 742, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'uppercase',
        {
          _index: 563,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      [
        'uq_97672ac88f789774dd47f7c8be3',
        { _index: 931, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'uq_ca34102014a1fd8163017a58dc2',
        { _index: 913, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'uq_dc1522c9bf1cabc0c85359c2d68',
        { _index: 912, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'uq_eee360f3bff24af1b6890765201',
        { _index: 866, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'url',
        {
          _index: 44,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
          },
        },
      ],
      ['usd', { _index: 1505, title: {}, body: { 'injectables/StripePaymentGateway.html': {} } }],
      ['use', { _index: 237, title: {}, body: { 'modules/AppModule.html': {} } }],
      [
        'useclass',
        {
          _index: 247,
          title: {},
          body: { 'modules/AppModule.html': {}, 'modules/FileModule.html': {} },
        },
      ],
      ['usefactory', { _index: 359, title: {}, body: { 'modules/AuthModule.html': {} } }],
      [
        'user',
        {
          _index: 396,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'entities/PartnerEntity.html': {},
            'injectables/PartnersService.html': {},
            'entities/ReviewsEntity.html': {},
            'guards/RolesGuard.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'user.decorator',
        {
          _index: 1151,
          title: {},
          body: {
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'user.decorator.ts',
        {
          _index: 1815,
          title: {},
          body: { 'coverage.html': {}, 'miscellaneous/variables.html': {} },
        },
      ],
      [
        'user.dto',
        {
          _index: 1612,
          title: {},
          body: {
            'classes/UpdateUserDto.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'user.dto.ts',
        {
          _index: 550,
          title: {},
          body: {
            'classes/CreateUserDto.html': {},
            'classes/UpdateUserDto.html': {},
            'coverage.html': {},
          },
        },
      ],
      ['user.dto.ts:30', { _index: 570, title: {}, body: { 'classes/CreateUserDto.html': {} } }],
      ['user.dto.ts:32', { _index: 571, title: {}, body: { 'classes/CreateUserDto.html': {} } }],
      ['user.dto.ts:6', { _index: 1611, title: {}, body: { 'classes/UpdateUserDto.html': {} } }],
      ['user.dto.ts:8', { _index: 555, title: {}, body: { 'classes/CreateUserDto.html': {} } }],
      [
        'user.entity',
        {
          _index: 1653,
          title: {},
          body: { 'entities/UserProfileEntity.html': {}, 'entities/UserSettingsEntity.html': {} },
        },
      ],
      [
        'user.enum.dto',
        {
          _index: 1423,
          title: {},
          body: { 'classes/SetUserProfileDto.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      ['user.follows', { _index: 781, title: {}, body: { 'entities/FollowerEntity.html': {} } }],
      [
        'user.id',
        {
          _index: 1295,
          title: {},
          body: { 'injectables/PartnersService.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      ['user.partners', { _index: 1087, title: {}, body: { 'entities/PartnerEntity.html': {} } }],
      [
        'user.partners)@jointable({name',
        { _index: 1047, title: {}, body: { 'entities/PartnerEntity.html': {} } },
      ],
      ['user.reviews', { _index: 1351, title: {}, body: { 'entities/ReviewsEntity.html': {} } }],
      [
        'user.roles?.includes(role',
        { _index: 1378, title: {}, body: { 'guards/RolesGuard.html': {} } },
      ],
      [
        'user.subscriptions',
        { _index: 1512, title: {}, body: { 'entities/SubscriberEntity.html': {} } },
      ],
      ['user.teams', { _index: 1522, title: {}, body: { 'entities/TeamMemberEntity.html': {} } }],
      [
        'user_gateway_id',
        {
          _index: 435,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/CreateUserDto.html': {},
            'classes/Init1731534812101.html': {},
            'classes/UpdateUserDto.html': {},
            'entities/UserEntity.html': {},
          },
        },
      ],
      [
        'user_gender_enum',
        {
          _index: 1413,
          title: {},
          body: {
            'classes/SetUserProfileDto.html': {},
            'entities/UserProfileEntity.html': {},
            'miscellaneous/enumerations.html': {},
          },
        },
      ],
      [
        'user_id',
        {
          _index: 429,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'user_profile',
        {
          _index: 856,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserProfileEntity.html': {} },
        },
      ],
      [
        'user_profile"("id',
        { _index: 974, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'user_settings',
        {
          _index: 877,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserSettingsEntity.html': {} },
        },
      ],
      [
        'user_settings"("id',
        { _index: 976, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      ['useremail', { _index: 411, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'userentity',
        {
          _index: 137,
          title: { 'entities/UserEntity.html': {} },
          body: {
            'classes/AddteamMemberDto.html': {},
            'injectables/AuthService.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'entities/PartnerEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userfollowpartnerdto',
        {
          _index: 1647,
          title: { 'classes/UserFollowPartnerDto.html': {} },
          body: {
            'classes/UserFollowPartnerDto.html': {},
            'controllers/UsersController.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userfromdb',
        {
          _index: 424,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'guards/JwtAuthGuard.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'userfromdb.checkpassword(pass',
        { _index: 443, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      ['userfromdb.id', { _index: 430, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'userfromdb.password',
        {
          _index: 452,
          title: {},
          body: { 'injectables/AuthService.html': {}, 'guards/JwtAuthGuard.html': {} },
        },
      ],
      [
        'userfromdb.refresh_token',
        {
          _index: 1019,
          title: {},
          body: { 'guards/JwtAuthGuard.html': {}, 'injectables/UsersService.html': {} },
        },
      ],
      [
        'userhasprofile',
        { _index: 1773, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'userhassettings',
        { _index: 1780, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'userid',
        {
          _index: 384,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/FileService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/UsersController.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      ['userlogin', { _index: 369, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'userlogin(useremail',
        { _index: 406, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      [
        'username',
        { _index: 1178, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      ['userorpartner', { _index: 724, title: {}, body: { 'injectables/FileService.html': {} } }],
      ['userowner', { _index: 744, title: {}, body: { 'injectables/FileService.html': {} } }],
      [
        'userprofileentity',
        {
          _index: 1623,
          title: { 'entities/UserProfileEntity.html': {} },
          body: {
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userprofilerepository',
        { _index: 1716, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'userrepository',
        { _index: 1720, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'users',
        {
          _index: 928,
          title: {},
          body: {
            'classes/Init1731534812101.html': {},
            'entities/UserEntity.html': {},
            'controllers/UsersController.html': {},
          },
        },
      ],
      [
        'users"("id',
        {
          _index: 955,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'classes/Manytoone1731887989393.html': {} },
        },
      ],
      ['users.controller', { _index: 1706, title: {}, body: { 'modules/UsersModule.html': {} } }],
      [
        'users.service',
        {
          _index: 1682,
          title: {},
          body: { 'controllers/UsersController.html': {}, 'modules/UsersModule.html': {} },
        },
      ],
      [
        'users/entities/user.entity',
        {
          _index: 155,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'injectables/AuthService.html': {},
            'injectables/FileService.html': {},
            'classes/FollowPartnerDto.html': {},
            'entities/FollowerEntity.html': {},
            'injectables/FollowersService.html': {},
            'entities/PartnerEntity.html': {},
            'controllers/PartnerTeamsController.html': {},
            'controllers/PartnersController.html': {},
            'injectables/PartnersService.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TeamMemberEntity.html': {},
            'injectables/TeamsService.html': {},
            'classes/UnfollowPartnerDto.html': {},
          },
        },
      ],
      [
        'users/users.module',
        {
          _index: 354,
          title: {},
          body: {
            'modules/AuthModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/TeamsModule.html': {},
          },
        },
      ],
      [
        'users/users.service',
        {
          _index: 412,
          title: {},
          body: {
            'injectables/AuthService.html': {},
            'injectables/FollowersService.html': {},
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
          },
        },
      ],
      [
        'users_tags',
        {
          _index: 950,
          title: {},
          body: { 'classes/Init1731534812101.html': {}, 'entities/UserEntity.html': {} },
        },
      ],
      [
        'userscontroller',
        {
          _index: 1660,
          title: { 'controllers/UsersController.html': {} },
          body: {
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'userservice',
        { _index: 1161, title: {}, body: { 'controllers/PartnerTeamsController.html': {} } },
      ],
      [
        'usersettingsentity',
        {
          _index: 1630,
          title: { 'entities/UserSettingsEntity.html': {} },
          body: {
            'entities/UserEntity.html': {},
            'entities/UserSettingsEntity.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
          },
        },
      ],
      [
        'usersettingsrepository',
        { _index: 1717, title: {}, body: { 'injectables/UsersService.html': {} } },
      ],
      [
        'usersmodule',
        {
          _index: 185,
          title: { 'modules/UsersModule.html': {} },
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'modules.html': {},
            'overview.html': {},
          },
        },
      ],
      [
        'usersservice',
        {
          _index: 315,
          title: { 'injectables/UsersService.html': {} },
          body: {
            'guards/AuthJwtRefreshGuard.html': {},
            'injectables/AuthService.html': {},
            'injectables/FollowersService.html': {},
            'guards/JwtAuthGuard.html': {},
            'controllers/PartnerTeamsController.html': {},
            'injectables/TeamsService.html': {},
            'controllers/UsersController.html': {},
            'modules/UsersModule.html': {},
            'injectables/UsersService.html': {},
            'coverage.html': {},
            'overview.html': {},
          },
        },
      ],
      ['usuário', { _index: 1729, title: {}, body: { 'injectables/UsersService.html': {} } }],
      [
        'utils/encryption',
        {
          _index: 1081,
          title: {},
          body: {
            'entities/PartnerEntity.html': {},
            'entities/UserEntity.html': {},
            'injectables/UsersService.html': {},
          },
        },
      ],
      [
        'utils/soft',
        {
          _index: 657,
          title: {},
          body: {
            'entities/FileEntity.html': {},
            'entities/FollowerEntity.html': {},
            'entities/PartnerEntity.html': {},
            'entities/ReviewsEntity.html': {},
            'entities/RoleEntity.html': {},
            'entities/SubscriberEntity.html': {},
            'entities/TagEntity.html': {},
            'entities/TeamsEntity.html': {},
            'entities/UserEntity.html': {},
            'entities/UserProfileEntity.html': {},
            'entities/UserSettingsEntity.html': {},
          },
        },
      ],
      [
        'uuid',
        {
          _index: 768,
          title: {},
          body: {
            'classes/FollowPartnerDto.html': {},
            'classes/Init1731534812101.html': {},
            'classes/SignUpDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
          },
        },
      ],
      [
        'uuid_generate_v4',
        { _index: 849, title: {}, body: { 'classes/Init1731534812101.html': {} } },
      ],
      [
        'validator',
        {
          _index: 154,
          title: {},
          body: {
            'classes/AddteamMemberDto.html': {},
            'classes/CreatePartnerDto.html': {},
            'classes/CreateSubscriptionDto.html': {},
            'classes/CreateTeamDto.html': {},
            'classes/CreateUserDto.html': {},
            'classes/FollowPartnerDto.html': {},
            'classes/LoginDto.html': {},
            'classes/SetPartnerProfileDto.html': {},
            'classes/SetUserProfileDto.html': {},
            'classes/SetUserSettingsDto.html': {},
            'classes/SignUpDto.html': {},
            'classes/SignUpPartnerDto.html': {},
            'classes/UnfollowPartnerDto.html': {},
            'classes/UpdatePartnerDto.html': {},
            'classes/UpdateTeamDto.html': {},
            'classes/UpdateUserDto.html': {},
            'classes/UserFollowPartnerDto.html': {},
            'dependencies.html': {},
          },
        },
      ],
      [
        'value',
        {
          _index: 24,
          title: {},
          body: {
            'classes/AWSS3.html': {},
            'classes/AddManyToOne1731880851697.html': {},
            'classes/DigitalOceanSpaces.html': {},
            'entities/FileEntity.html': {},
            'classes/Init1731534812101.html': {},
            'classes/Manytoone1731887989393.html': {},
            'miscellaneous/enumerations.html': {},
            'miscellaneous/variables.html': {},
          },
        },
      ],
      ['variable', { _index: 1792, title: {}, body: { 'coverage.html': {} } }],
      [
        'variables',
        {
          _index: 1932,
          title: { 'miscellaneous/variables.html': {} },
          body: { 'miscellaneous/variables.html': {} },
        },
      ],
      ['varying', { _index: 850, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['varying(10', { _index: 860, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['varying(20', { _index: 904, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      ['verifica', { _index: 334, title: {}, body: { 'guards/AuthJwtRefreshGuard.html': {} } }],
      ['version', { _index: 1929, title: {}, body: { 'properties.html': {} } }],
      ['vg1=${token', { _index: 456, title: {}, body: { 'injectables/AuthService.html': {} } }],
      [
        'vg2=${jwtrefreshtoken',
        { _index: 462, title: {}, body: { 'injectables/AuthService.html': {} } },
      ],
      ['void', { _index: 263, title: {}, body: { 'controllers/AuthController.html': {} } }],
      [
        'watch',
        { _index: 234, title: {}, body: { 'modules/AppModule.html': {}, 'index.html': {} } },
      ],
      ['website', { _index: 1912, title: {}, body: { 'index.html': {} } }],
      ['width', { _index: 1349, title: {}, body: { 'entities/ReviewsEntity.html': {} } }],
      [
        'yes',
        {
          _index: 595,
          title: {},
          body: {
            'injectables/CustomI18nService.html': {},
            'injectables/PartnersService.html': {},
          },
        },
      ],
      ["you'd", { _index: 1902, title: {}, body: { 'index.html': {} } }],
      ['z', { _index: 1961, title: {}, body: { 'miscellaneous/variables.html': {} } }],
      ['zone', { _index: 845, title: {}, body: { 'classes/Init1731534812101.html': {} } }],
      [
        'zoom',
        {
          _index: 186,
          title: {},
          body: {
            'modules/AppModule.html': {},
            'modules/AuthModule.html': {},
            'modules/CustomI18nModule.html': {},
            'modules/FileModule.html': {},
            'modules/FollowersModule.html': {},
            'modules/PartnersModule.html': {},
            'modules/PaymentGatewayModule.html': {},
            'modules/RolesModule.html': {},
            'modules/TeamsModule.html': {},
            'modules/UsersModule.html': {},
            'overview.html': {},
          },
        },
      ],
    ],
    pipeline: ['stemmer'],
  },
  store: {
    'classes/AWSS3.html': {
      url: 'classes/AWSS3.html',
      title: 'class - AWSS3',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AWSS3\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/files/implementations/aws-s3.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            FileImplInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bucketName\n                            \n                            \n                                    Private\n                                s3V3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                generateUrl\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/apps/files/implementations/aws-s3.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bucketName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.AWS_PRIVATE_BUCKET_NAME\n                    \n                \n                    \n                        \n                                Defined in src/apps/files/implementations/aws-s3.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        s3V3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/files/implementations/aws-s3.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(filekey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/aws-s3.ts:77\n                        \n                    \n\n\n            \n                \n                        Delete a file from AWS S3\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filekey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUrl(fileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/aws-s3.ts:62\n                        \n                    \n\n\n            \n                \n                        Generate a url to a file on AWS S3\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(fileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/aws-s3.ts:46\n                        \n                    \n\n\n            \n                \n                        Get a file from AWS S3\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(file: Express.Multer.File, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/aws-s3.ts:25\n                        \n                    \n\n\n            \n                \n                        Upload a file to AWS S3\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  DeleteObjectCommand,\n  GetObjectCommand,\n  S3Client,\n} from '@aws-sdk/client-s3';\nimport { FileImplInterface } from '../file.impl.interface';\nimport { Upload } from '@aws-sdk/lib-storage';\nimport { randomUUID } from 'crypto';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nexport class AWSS3 implements FileImplInterface {\n  private s3V3: S3Client;\n  private bucketName = process.env.AWS_PRIVATE_BUCKET_NAME;\n\n  constructor() {\n    this.s3V3 = new S3Client({\n      region: 'sa-east-1',\n    });\n  }\n  /**\n   * Upload a file to AWS S3\n   * @param file\n   * @param filename\n   * @returns\n   */\n  async upload(file: Express.Multer.File, filename: string) {\n    return await new Upload({\n      client: this.s3V3,\n      params: {\n        Bucket: this.bucketName,\n        Body: file.buffer,\n        Key: `${filename}-${randomUUID()}`,\n        ContentType: file.mimetype,\n      },\n    })\n      .done()\n      .catch((error) => {\n        throw new Error(`AWS S3 - Failed uploading new file: ${error.message}`);\n      });\n  }\n\n  /**\n   * Get a file from AWS S3\n   * @param fileKey\n   * @returns\n   */\n  async get(fileKey: string) {\n    const getFileCmd = new GetObjectCommand({\n      Bucket: this.bucketName,\n      Key: fileKey,\n    });\n\n    return await this.s3V3.send(getFileCmd).catch((error) => {\n      throw new Error(`AWS S3 - Failed to get file: ${error.message}`);\n    });\n  }\n\n  /**\n   * Generate a url to a file on AWS S3\n   * @param fileKey\n   * @returns\n   */\n  async generateUrl(fileKey: string): Promise {\n    const getFileCmd = new GetObjectCommand({\n      Bucket: this.bucketName,\n      Key: fileKey,\n    });\n    return getSignedUrl(this.s3V3, getFileCmd).catch((error) => {\n      throw new Error(`AWS S3 - Failed generating url ${error.message} `);\n    });\n  }\n\n  /**\n   * Delete a file from AWS S3\n   * @param filekey\n   * @returns\n   */\n  async delete(filekey: string) {\n    const deleteCmd = new DeleteObjectCommand({\n      Bucket: this.bucketName,\n      Key: filekey,\n    });\n\n    return this.s3V3.send(deleteCmd).catch((error) => {\n      throw new Error(`AWS S3 - Failed deleting file: ${error.message}`);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/AddManyToOne1731880851697.html': {
      url: 'classes/AddManyToOne1731880851697.html',
      title: 'class - AddManyToOne1731880851697',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddManyToOne1731880851697\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1731880851697-add-many-to-one.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'AddManyToOne1731880851697\'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1731880851697-add-many-to-one.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1731880851697-add-many-to-one.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1731880851697-add-many-to-one.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from "typeorm";\n\nexport class AddManyToOne1731880851697 implements MigrationInterface {\n    name = \'AddManyToOne1731880851697\'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "FK_fde44edfeb831a0f12733b09383"`);\n        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "REL_fde44edfeb831a0f12733b0938"`);\n        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "FK_fde44edfeb831a0f12733b09383" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "FK_fde44edfeb831a0f12733b09383"`);\n        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "REL_fde44edfeb831a0f12733b0938" UNIQUE ("partner_id")`);\n        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "FK_fde44edfeb831a0f12733b09383" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/AddteamMemberDto.html': {
      url: 'classes/AddteamMemberDto.html',
      title: 'class - AddteamMemberDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddteamMemberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/teams/dtos/add-team-member.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                members\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Member list is required'})@IsArray({message: 'Member list shoud be an  array'})@ArrayMinSize(1, {message: 'Memeber list needs at least one member'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/dtos/add-team-member.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsArray, IsNotEmpty, IsUUID } from 'class-validator';\nimport { UserEntity } from '../../users/entities/user.entity';\n\nexport class AddteamMemberDto {\n  @IsNotEmpty({ message: 'Member list is required' })\n  @IsArray({ message: 'Member list shoud be an  array' })\n  @ArrayMinSize(1, { message: 'Memeber list needs at least one member' })\n  members: UserEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AppModule.html': {
      url: 'modules/AppModule.html',
      title: 'module - AppModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCustomI18nModule\n\nCustomI18nModule\n\nAppModule -->\n\nCustomI18nModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFollowersModule\n\nFollowersModule\n\nAppModule -->\n\nFollowersModule->AppModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nPartnersModule\n\nPartnersModule\n\nAppModule -->\n\nPartnersModule->AppModule\n\n\n\n\n\nPaymentGatewayModule\n\nPaymentGatewayModule\n\nAppModule -->\n\nPaymentGatewayModule->AppModule\n\n\n\n\n\nPlansModule\n\nPlansModule\n\nAppModule -->\n\nPlansModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTeamsModule\n\nTeamsModule\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CustomI18nModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            FollowersModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PartnersModule\n                        \n                        \n                            PaymentGatewayModule\n                        \n                        \n                            PlansModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            ReviewsModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TeamsModule\n                        \n                        \n                            TransactionsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { dataSourceOptions } from '../datasource';\nimport { AuthModule } from './apps/auth/auth.module';\nimport { FileModule } from './apps/files/file.module';\nimport { NotificationsModule } from './apps/notifications/notifications.module';\nimport { PartnersModule } from './apps/partners/partners.module';\nimport { TransactionsModule } from './apps/transactions/transactions.module';\nimport { UsersModule } from './apps/users/users.module';\nimport { Module } from '@nestjs/common';\nimport { ProductsModule } from './apps/products/products.module';\nimport {\n  AcceptLanguageResolver,\n  CookieResolver,\n  HeaderResolver,\n  I18nModule,\n  QueryResolver,\n} from 'nestjs-i18n';\nimport { CustomI18nModule } from './apps/i18n/i18n.module';\nimport { PaymentGatewayModule } from './apps/payment-gateway/payment-gateway.module';\nimport { SubscribersModule } from './apps/subscribers/subscribers.module';\nimport { FollowersModule } from './apps/followers/followers.module';\nimport { ReviewsModule } from './apps/reviews/reviews.module';\nimport { PlansModule } from './apps/plans/plans.module';\nimport { TagsModule } from './apps/tags/tags.module';\nimport { TeamsModule } from './apps/teams/teams.module';\nimport { RolesModule } from './apps/roles/roles.module';\nimport * as path from 'path';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './guards/auth-jwt.guard';\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(dataSourceOptions),\n    I18nModule.forRoot({\n      fallbackLanguage: 'en',\n      loaderOptions: {\n        path: path.join(__dirname, '../locales/'),\n        watch: true,\n      },\n      resolvers: [\n        { use: QueryResolver, options: ['lang', 'locale', 'l'] },\n\n        new HeaderResolver(['x-custom-lang']),\n\n        AcceptLanguageResolver,\n\n        new CookieResolver(['lang', 'locale', 'l']),\n      ],\n    }),\n    AuthModule,\n    UsersModule,\n    PartnersModule,\n    AuthModule,\n    TransactionsModule,\n    NotificationsModule,\n    FileModule,\n    ProductsModule,\n    CustomI18nModule,\n    PaymentGatewayModule,\n    SubscribersModule,\n    FollowersModule,\n    ReviewsModule,\n    PlansModule,\n    TagsModule,\n    TeamsModule,\n    RolesModule,\n  ],\n  controllers: [],\n  providers: [\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/AuthController.html': {
      url: 'controllers/AuthController.html',
      title: 'controller - AuthController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                logout\n                            \n                            \n                                    \n                                    \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req, loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/auth/auth.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(sidnupDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/auth/auth.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidnupDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Post, Redirect, Req, Res } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dtos/login.dto';\nimport { SignUpDto } from './dtos/signup.dto';\nimport { CustomI18nService } from '../i18n/i18n.service';\nimport { Response } from 'express';\nimport { SignUpPartnerDto } from './dtos/signup-partner.dto';\nimport { Public } from '../../decorators/public.decorator';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly i18n: CustomI18nService,\n  ) {}\n\n  @Public()\n  @Post('signup')\n  async signup(@Body() sidnupDto: SignUpDto) {\n    try {\n      const newUser = await this.authService.signup(sidnupDto);\n\n      if (newUser) return newUser;\n\n      throw new Error(this.i18n.t('auth.validations.signup_failed'));\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Public()\n  @Post('login')\n  async login(@Req() req, @Body() loginDto: LoginDto) {\n    try {\n      const { JwtCookie, JwtRefreshCookie } = await this.authService.userLogin(loginDto.email, loginDto.password);\n\n      req.res.setHeader('Set-Cookie', [JwtCookie, JwtRefreshCookie]);\n      return req.user;\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Post('logout')\n  logout() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/AuthJwtRefreshGuard.html': {
      url: 'guards/AuthJwtRefreshGuard.html',
      title: 'guard - AuthJwtRefreshGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthJwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth-jwt-refresh.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                extractFromHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth-jwt-refresh.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/auth-jwt-refresh.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extractFromHeaders\n                        \n                    \n                \n            \n            \n                \nextractFromHeaders(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/auth-jwt-refresh.guard.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\n\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { UsersService } from '../apps/users/users.service';\n\n@Injectable()\nexport default class AuthJwtRefreshGuard implements CanActivate {\n  constructor(\n    private readonly jwtService: JwtService,\n    private usersService: UsersService,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    try {\n      const request = context.switchToHttp().getRequest();\n      const token = this.extractFromHeaders(request);\n\n      if (!token) {\n        throw new UnauthorizedException();\n      }\n\n      const payload = await this.jwtService.verify(token, {\n        secret: process.env.SECRET_REFRESH_JWT,\n      });\n\n      /**\n       * Verifica se token informado é o mesmo salvo no banco deados\n       */\n      const checkRefreshTokenFromDb = await this.usersService.getUserIfRefreshTokenMatches(token, payload.userId);\n\n      if (!checkRefreshTokenFromDb) throw new Error();\n\n      request.current_user = { id: payload.userId };\n\n      return true;\n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n  }\n\n  extractFromHeaders(request: Request) {\n    return request?.cookies?.vg2;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/AuthModule.html': {
      url: 'modules/AuthModule.html',
      title: 'module - AuthModule',
      body: "\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nPartnersModule\n\nPartnersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPartnersModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PartnersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PartnersModule } from '../partners/partners.module';\n\n@Module({\n  imports: [\n    UsersModule,\n    PartnersModule,\n    JwtModule.registerAsync({\n      global: true,\n\n      useFactory: async () => ({\n        secret: process.env.SECRET_JWT,\n        signOptions: {\n          expiresIn: process.env.SECRECT_JWT_EXPIRATION_TIME,\n        },\n      }),\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/AuthService.html': {
      url: 'injectables/AuthService.html',
      title: 'injectable - AuthService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCookiesForLogOut\n                            \n                            \n                                getCookieWithJwtAccessToken\n                            \n                            \n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Async\n                                userLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, usersService: UsersService, partnersService: PartnersService, i18n: CustomI18nService, paymentGatewayService: PaymentGatewayService)\n                    \n                \n                        \n                            \n                                Defined in src/apps/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        partnersService\n                                                  \n                                                        \n                                                                        PartnersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        CustomI18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentGatewayService\n                                                  \n                                                        \n                                                                        PaymentGatewayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCookiesForLogOut\n                        \n                    \n                \n            \n            \n                \ngetCookiesForLogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/auth/auth.service.ts:153\n                        \n                    \n\n\n            \n                \n                        Clean cookies for logout\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCookieWithJwtAccessToken\n                        \n                    \n                \n            \n            \n                \ngetCookieWithJwtAccessToken(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/auth/auth.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Return a cookie for sessio controll\ncom HttpOnly setado como true\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \ngetCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/auth/auth.service.ts:132\n                        \n                    \n\n\n            \n                \n                        Return a refresh cookie for session controll\ncom HttpOnly setado como true, também é retornado o token em si.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/auth/auth.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Logout a user\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(singUpDto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/auth/auth.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Singup a user\nIf singup comes from a partner automatically make user\nfollow the partner\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                singUpDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(userEmail: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/auth/auth.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Login a user and return tokens session\nthrought cookies\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Redirect } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from '../users/users.service';\nimport { CustomI18nService } from '../i18n/i18n.service';\nimport { SignUpDto } from './dtos/signup.dto';\nimport { PaymentGatewayService } from '../payment-gateway/payment-gateway.service';\nimport { PartnersService } from '../partners/partners.service';\nimport { UserEntity } from '../users/entities/user.entity';\nimport { SignUpPartnerDto } from './dtos/signup-partner.dto';\nimport { PartnerEntity } from '../partners/entities/partner.entity';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly usersService: UsersService,\n    private readonly partnersService: PartnersService,\n    private readonly i18n: CustomI18nService,\n    private readonly paymentGatewayService: PaymentGatewayService,\n  ) {}\n\n  /**\n   * Singup a user\n   * If singup comes from a partner automatically make user\n   * follow the partner\n   * @param singUpDto\n   * @returns Promise\n   */\n  async signup(singUpDto: SignUpDto): Promise {\n    const alreadyExists = await this.usersService.findByEmail(singUpDto.email);\n    if (alreadyExists)\n      throw new Error(\n        this.i18n.t('auth.validations.already_exists', {\n          args: { email: singUpDto.email },\n        }),\n      );\n\n    const userFromDb = await this.usersService.create(singUpDto);\n\n    if (!userFromDb) new Error(this.i18n.t('auth.validations.signup_failed'));\n\n    const paymentUser = {\n      name: 'Missing name yet',\n      email: singUpDto.email,\n      metadata: {\n        user_id: userFromDb.id,\n      },\n    };\n\n    const gatewayUser = await this.paymentGatewayService.createCustomer(paymentUser);\n\n    // set gatewayuser Id\n    await this.usersService.update(userFromDb.id, {\n      user_gateway_id: gatewayUser.id,\n    });\n\n    // Referal follow\n    if (singUpDto.partner_id) {\n      this.usersService.followPartner(userFromDb, singUpDto.partner_id);\n    }\n\n    return userFromDb.id;\n  }\n\n  /**\n   * Login a user and return tokens session\n   * throught cookies\n   */\n  async userLogin(\n    userEmail: string,\n    pass: string,\n  ): Promise {\n    const userFromDb = await this.usersService.findByEmail(userEmail);\n    if (!userFromDb) throw new Error(this.i18n.t('auth.validations.user_or_password_not_found'));\n\n    const isPassCorrect = userFromDb.checkPassword(pass);\n\n    if (isPassCorrect) {\n      const JwtCookie = this.getCookieWithJwtAccessToken(userFromDb.id);\n      const { JwtRefreshCookie, jwtRefreshToken } = this.getCookieWithJwtRefreshToken(userFromDb.id);\n\n      this.usersService.setCurrentRefreshToken(userFromDb.id, jwtRefreshToken);\n\n      /** never deliver password to frontend */\n      delete userFromDb.password;\n\n      return {\n        user: userFromDb,\n        JwtCookie: JwtCookie,\n        JwtRefreshCookie,\n      };\n    }\n    throw new Error(this.i18n.t('auth.validations.user_or_password_not_found'));\n  }\n\n  /**\n   * Logout a user\n   * @param user\n   * @returns Promise\n   */\n  async logout(user: UserEntity): Promise {\n    await this.usersService.removeRefreshToken(user.id);\n    return this.getCookiesForLogOut();\n  }\n\n  /**\n   * Return a cookie for sessio controll\n   * com HttpOnly setado como true\n   * @param userId\n   * @returns {string}\n   */\n  getCookieWithJwtAccessToken(userId: string): string {\n    const payload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.SECRET_JWT,\n      expiresIn: process.env.SECRECT_JWT_EXPIRATION_TIME,\n    });\n    return `vg1=${token}; HttpOnly; Path=/; Max-Age=86400; `;\n  }\n\n  /**\n   * Return a refresh cookie for session controll\n   * com HttpOnly setado como true, também é retornado o token em si.\n   * @param CurrentCompany\n   * @param CuserId\n   * @returns Promise\n   */\n  getCookieWithJwtRefreshToken(userId: string): {\n    JwtRefreshCookie: string;\n    jwtRefreshToken: string;\n  } {\n    const payload = { userId };\n\n    const jwtRefreshToken = this.jwtService.sign(payload, {\n      secret: process.env.SECRET_REFRESH_JWT,\n      expiresIn: process.env.SECRET_REFRESH_JWT_EXPIRATION_TIME,\n    });\n    const JwtRefreshCookie = `vg2=${jwtRefreshToken}; HttpOnly; Path=/; Max-Age=172800; `;\n    return {\n      JwtRefreshCookie,\n      jwtRefreshToken,\n    };\n  }\n\n  /**\n   * Clean cookies for logout\n   * @returns {[string, String]}\n   */\n  getCookiesForLogOut(): [string, string] {\n    return ['bv1=; HttpOnly; Path=/; Max-Age=0', 'bv2=; HttpOnly; Path=/; Max-Age=0'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateCustomerDto.html': {
      url: 'classes/CreateCustomerDto.html',
      title: 'class - CreateCustomerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/dtos/create-customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                coupon\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                invoice_settings\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                payment_method\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                preferred_locales\n                            \n                            \n                                    Optional\n                                tax_exempt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomerAddressInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        invoice_settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoiceSettingsInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomerMetadataInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        payment_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        preferred_locales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tax_exempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"none\" | \"exempt\" | \"reverse\"\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-customer.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CustomerAddressInterface } from '../intefaces/customer-adress.inteface';\nimport { InvoiceSettingsInterface } from '../intefaces/customer-invoice-settings.interface';\nimport { CustomerMetadataInterface } from '../intefaces/customer-metadata.interface';\n\nexport class CreateCustomerDto {\n  email: string;\n  name: string;\n  phone?: string;\n  address?: CustomerAddressInterface;\n  payment_method?: string;\n  invoice_settings?: InvoiceSettingsInterface;\n  metadata?: CustomerMetadataInterface;\n  description?: string;\n  preferred_locales?: string[];\n  tax_exempt?: 'none' | 'exempt' | 'reverse';\n  coupon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateFileDto.html': {
      url: 'classes/CreateFileDto.html',
      title: 'class - CreateFileDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CreatePartnerDto.html': {
      url: 'classes/CreatePartnerDto.html',
      title: 'class - CreatePartnerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePartnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/dtos/create-partner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                business_id\n                            \n                            \n                                    \n                                    \n                                legal_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        business_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Business id is required'})@IsString({message: 'Business id should be a String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/create-partner.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        legal_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Partner name is required'})@IsString({message: 'Partner Name should be a String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/create-partner.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsEmail, Matches } from 'class-validator';\nimport { PassRegex } from '../../auth/auth-pass.rules';\n\nexport class CreatePartnerDto {\n  @IsNotEmpty({ message: 'Partner name is required' })\n  @IsString({ message: 'Partner Name should be a String' })\n  legal_name: string;\n\n  @IsNotEmpty({ message: 'Business id is required' })\n  @IsString({ message: 'Business id should be a String' })\n  business_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateSubscriptionDto.html': {
      url: 'classes/CreateSubscriptionDto.html',
      title: 'class - CreateSubscriptionDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriptionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/dtos/create-subscription.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                autoRenewal\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                billingCycleAnchor\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                couponCode\n                            \n                            \n                                    \n                                    \n                                customer\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                paymentMethodId\n                            \n                            \n                                    \n                                    \n                                planId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                trialPeriodDays\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        autoRenewal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-subscription.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        billingCycleAnchor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-subscription.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        couponCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-subscription.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-subscription.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        paymentMethodId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-subscription.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        planId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-subscription.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        trialPeriodDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/create-subscription.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsOptional,\n  IsNotEmpty,\n  IsBoolean,\n  IsNumber,\n} from \'class-validator\';\n\nexport class CreateSubscriptionDto {\n  @IsString()\n  @IsNotEmpty()\n  customer: string;\n\n  @IsString()\n  @IsNotEmpty()\n  planId: string;\n\n  @IsNumber()\n  @IsOptional()\n  trialPeriodDays?: number;\n\n  @IsBoolean()\n  @IsOptional()\n  autoRenewal?: boolean;\n\n  @IsString()\n  @IsOptional()\n  couponCode?: string;\n\n  @IsString()\n  @IsOptional()\n  billingCycleAnchor?: string;\n\n  @IsString()\n  @IsOptional()\n  paymentMethodId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/CreateTeamDto.html': {
      url: 'classes/CreateTeamDto.html',
      title: 'class - CreateTeamDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/teams/dtos/create-team.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Team name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/dtos/create-team.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsUUID } from 'class-validator';\n\nexport class CreateTeamDto {\n  @IsNotEmpty({ message: 'Team name is required' })\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/CreateUserDto.html': {
      url: 'classes/CreateUserDto.html',
      title: 'class - CreateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    Optional\n                                user_gateway_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email is required'})@IsEmail({}, {message: 'E-mail is invalid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})@IsString({message: 'Password should be a String'})@Matches(PassRegex.LOWERCASE, {message: 'Password must contain at least one lowercase letter'})@Matches(PassRegex.NUMBER, {message: 'Password must contain at least one number'})@Matches(PassRegex.SPECIAL_CHAR, {message: 'Password must contain at least one special character'})@Matches(PassRegex.UPPERCASE, {message: 'Password must contain at least one uppercase letter'})@Matches(PassRegex.MIN_8, {message: 'Password must be at least 8 characters long'})@Matches(PassRegex.MAX_16, {message: 'Password must be at most 16 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user_gateway_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsEmail, IsNotEmpty, IsOptional, IsString, Matches } from 'class-validator';\nimport { i18nValidationMessage } from 'nestjs-i18n';\nimport { PassRegex } from '../../auth/auth-pass.rules';\n\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Email is required' })\n  @IsEmail({}, { message: 'E-mail is invalid' })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  @IsString({ message: 'Password should be a String' })\n  @Matches(PassRegex.LOWERCASE, {\n    message: 'Password must contain at least one lowercase letter',\n  })\n  @Matches(PassRegex.NUMBER, {\n    message: 'Password must contain at least one number',\n  })\n  @Matches(PassRegex.SPECIAL_CHAR, {\n    message: 'Password must contain at least one special character',\n  })\n  @Matches(PassRegex.UPPERCASE, {\n    message: 'Password must contain at least one uppercase letter',\n  })\n  @Matches(PassRegex.MIN_8, {\n    message: 'Password must be at least 8 characters long',\n  })\n  @Matches(PassRegex.MAX_16, {\n    message: 'Password must be at most 16 characters long',\n  })\n  password: string;\n\n  user_gateway_id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/CustomI18nModule.html': {
      url: 'modules/CustomI18nModule.html',
      title: 'module - CustomI18nModule',
      body: '\n                   \n\n\n\n\n    Modules\n    CustomI18nModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomI18nModule\n\n\n\ncluster_CustomI18nModule_exports\n\n\n\ncluster_CustomI18nModule_providers\n\n\n\n\nCustomI18nService \n\nCustomI18nService \n\n\n\nCustomI18nModule\n\nCustomI18nModule\n\nCustomI18nService  -->\n\nCustomI18nModule->CustomI18nService \n\n\n\n\n\nCustomI18nService\n\nCustomI18nService\n\nCustomI18nModule -->\n\nCustomI18nService->CustomI18nModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/i18n/i18n.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomI18nService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomI18nService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \'@nestjs/common\';\nimport { CustomI18nService } from \'./i18n.service\';\n\n@Global()\n@Module({\n  providers: [CustomI18nService],\n  exports: [CustomI18nService],\n})\nexport class CustomI18nModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/CustomI18nService.html': {
      url: 'injectables/CustomI18nService.html',
      title: 'injectable - CustomI18nService',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomI18nService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/i18n/i18n.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                t\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i18n: I18nService)\n                    \n                \n                        \n                            \n                                Defined in src/apps/i18n/i18n.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                    I18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        t\n                        \n                    \n                \n            \n            \n                \nt(key: string, options?: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/i18n/i18n.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \'@nestjs/common\';\nimport { I18nContext, I18nService } from \'nestjs-i18n\';\n\n@Injectable()\nexport class CustomI18nService {\n  constructor(private readonly i18n: I18nService) {}\n\n  t(key: string, options?: Record): string {\n    const lang = I18nContext.current().lang;\n\n    console.log(lang);\n    return this.i18n.translate(key, { lang, ...options });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/CustomerAddressInterface.html': {
      url: 'interfaces/CustomerAddressInterface.html',
      title: 'interface - CustomerAddressInterface',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomerAddressInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/intefaces/customer-adress.inteface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            line1\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            line2\n                                        \n                                \n                                \n                                        \n                                            postal_code\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        line1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        line2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postal_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        postal_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CustomerAddressInterface {\n  line1: string;\n  line2?: string;\n  city: string;\n  state: string;\n  postal_code: string;\n  country: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/CustomerMetadataInterface.html': {
      url: 'interfaces/CustomerMetadataInterface.html',
      title: 'interface - CustomerMetadataInterface',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomerMetadataInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/intefaces/customer-metadata.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/apps/payment-gateway/intefaces/customer-metadata.interface.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface CustomerMetadataInterface {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/DigitalOceanSpaces.html': {
      url: 'classes/DigitalOceanSpaces.html',
      title: 'class - DigitalOceanSpaces',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DigitalOceanSpaces\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/files/implementations/digitalOcean-spaces.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            FileImplInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bucketName\n                            \n                            \n                                    Private\n                                s3V3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                generateUrl\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/apps/files/implementations/digitalOcean-spaces.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        bucketName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.DIGITAL_OCEAN_PRIVATE_BUCKET_NAME\n                    \n                \n                    \n                        \n                                Defined in src/apps/files/implementations/digitalOcean-spaces.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        s3V3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/files/implementations/digitalOcean-spaces.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(filekey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/digitalOcean-spaces.ts:89\n                        \n                    \n\n\n            \n                \n                        Delete a file from Digital Ocean Spaces\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filekey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUrl(fileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/digitalOcean-spaces.ts:72\n                        \n                    \n\n\n            \n                \n                        Generate a url to a file on Digital Ocean Spaces\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(fileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/digitalOcean-spaces.ts:54\n                        \n                    \n\n\n            \n                \n                        Get a file from Digital Ocean Spaces\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(file: Express.Multer.File, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/implementations/digitalOcean-spaces.ts:31\n                        \n                    \n\n\n            \n                \n                        Upload a file to Digital Ocean Spaces\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  DeleteObjectCommand,\n  GetObjectCommand,\n  S3Client,\n} from '@aws-sdk/client-s3';\nimport { FileImplInterface } from '../file.impl.interface';\n\nimport { Upload } from '@aws-sdk/lib-storage';\nimport { randomUUID } from 'crypto';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nexport class DigitalOceanSpaces implements FileImplInterface {\n  private s3V3: S3Client;\n  private bucketName = process.env.DIGITAL_OCEAN_PRIVATE_BUCKET_NAME;\n\n  constructor() {\n    this.s3V3 = new S3Client({\n      endpoint: process.env.FILE_STORAGE_ENDEPOINT,\n      region: process.env.FILE_STORAGE_REGION,\n      credentials: {\n        accessKeyId: process.env.FILE_STORAGE_ACESS_KEY,\n        secretAccessKey: process.env.FILE_STORAGE_SECRET_KEY,\n      },\n    });\n  }\n  /**\n   * Upload a file to Digital Ocean Spaces\n   * @param file\n   * @param filename\n   * @returns\n   */\n  async upload(file: Express.Multer.File, filename: string) {\n    return await new Upload({\n      client: this.s3V3,\n      params: {\n        Bucket: this.bucketName,\n        Body: file.buffer,\n        Key: `${filename}-${randomUUID()}`,\n        ContentType: file.mimetype,\n      },\n    })\n      .done()\n      .catch((error) => {\n        throw new Error(\n          `Digital Ocean Spaces - Failed uploading new file: ${error.message}`,\n        );\n      });\n  }\n\n  /**\n   * Get a file from Digital Ocean Spaces\n   * @param fileKey\n   * @returns\n   */\n  async get(fileKey: string) {\n    const getFileCmd = new GetObjectCommand({\n      Bucket: this.bucketName,\n      Key: fileKey,\n    });\n\n    return await this.s3V3.send(getFileCmd).catch((error) => {\n      throw new Error(\n        `Digital Ocean Spaces - Failed to get file: ${error.message}`,\n      );\n    });\n  }\n\n  /**\n   * Generate a url to a file on Digital Ocean Spaces\n   * @param fileKey\n   * @returns\n   */\n  async generateUrl(fileKey: string): Promise {\n    const getFileCmd = new GetObjectCommand({\n      Bucket: this.bucketName,\n      Key: fileKey,\n    });\n    return getSignedUrl(this.s3V3, getFileCmd).catch((error) => {\n      throw new Error(\n        `Digital Ocean Spaces - Failed generating url ${error.message} `,\n      );\n    });\n  }\n\n  /**\n   * Delete a file from Digital Ocean Spaces\n   * @param filekey\n   * @returns\n   */\n  async delete(filekey: string) {\n    const deleteCmd = new DeleteObjectCommand({\n      Bucket: this.bucketName,\n      Key: filekey,\n    });\n\n    return this.s3V3.send(deleteCmd).catch((error) => {\n      throw new Error(\n        `Digital Ocean Spaces - Failed deleting file: ${error.message}`,\n      );\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/FileEntity.html': {
      url: 'entities/FileEntity.html',
      title: 'entity - FileEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  FileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/files/entities/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                fileStorage\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                    Private\n                                logger\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        fileStorage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new S3Client({\n    endpoint: process.env.FILE_STORAGE_ENDEPOINT,\n    region: process.env.FILE_STORAGE_REGION,\n    credentials: {\n      accessKeyId: process.env.FILE_STORAGE_ACESS_KEY,\n      secretAccessKey: process.env.FILE_STORAGE_SECRET_KEY,\n    },\n  })\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/files/entities/file.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/files/entities/file.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/files/entities/file.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(File.name)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/files/entities/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/files/entities/file.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { S3Client, GetObjectCommand } from '@aws-sdk/client-s3';\nimport { getSignedUrl } from '@aws-sdk/s3-request-presigner';\nimport { Logger } from '@nestjs/common';\nimport { Exclude } from 'class-transformer';\nimport {\n  AfterLoad,\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\nimport { PartnerEntity } from '../../partners/entities/partner.entity';\n\n@Entity({ name: 'files' })\nexport class FileEntity extends SoftFieldsForEntities {\n  constructor() {\n    super();\n  }\n\n  @Exclude()\n  private logger = new Logger(File.name);\n\n  @Exclude()\n  private fileStorage = new S3Client({\n    endpoint: process.env.FILE_STORAGE_ENDEPOINT,\n    region: process.env.FILE_STORAGE_REGION,\n    credentials: {\n      accessKeyId: process.env.FILE_STORAGE_ACESS_KEY,\n      secretAccessKey: process.env.FILE_STORAGE_SECRET_KEY,\n    },\n  });\n\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Exclude()\n  @Column()\n  key: string;\n\n  url: string;\n\n  @AfterLoad()\n  async loadPressignedUrl() {\n    const getFileCmd = new GetObjectCommand({\n      Bucket: process.env.FILE_STORAGE_BUCKET_NAME,\n      Key: this.key,\n    });\n    const url = await getSignedUrl(this.fileStorage, getFileCmd).catch(\n      (error) => {\n        throw new Error(`FileStore - Failed generating url ${error.message} `);\n      },\n    );\n\n    this.url = url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/FileImplInterface.html': {
      url: 'interfaces/FileImplInterface.html',
      title: 'interface - FileImplInterface',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileImplInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/files/file.impl.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        generateUrl\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                                \n                                    \n                                        upload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(ileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.impl.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateUrl\n                        \n                    \n                \n            \n            \n                \ngenerateUrl(fileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.impl.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(fileKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.impl.interface.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n            \n                \nupload(file: Express.Multer.File, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.impl.interface.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileImplInterface {\n  upload(file: Express.Multer.File, filename: string): Promise;\n  get(fileKey: string): Promise;\n  generateUrl(fileKey: string): Promise;\n  delete(ileKey: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules/FileModule.html': {
      url: 'modules/FileModule.html',
      title: 'module - FileModule',
      body: "\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_FileModule_exports\n\n\n\n\nFileService \n\nFileService \n\n\n\nFileModule\n\nFileModule\n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/files/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { FileService } from './file.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FileEntity } from './entities/file.entity';\n\nimport { FILE_SERVICE_PROVIDER } from './file.constants';\nimport { DigitalOceanSpaces } from './implementations/digitalOcean-spaces';\n\n@Global()\n@Module({\n  imports: [TypeOrmModule.forFeature([FileEntity])],\n  controllers: [],\n  providers: [\n    FileService,\n    {\n      provide: FILE_SERVICE_PROVIDER,\n      useClass: DigitalOceanSpaces,\n    },\n  ],\n  exports: [FileService],\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FileService.html': {
      url: 'injectables/FileService.html',
      title: 'injectable - FileService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/files/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Public\n                                    Async\n                                generatePresignedUrl\n                            \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileRepository: Repository, fileServiceProvider: FileImplInterface)\n                    \n                \n                        \n                            \n                                Defined in src/apps/files/file.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileServiceProvider\n                                                  \n                                                        \n                                                                        FileImplInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile(fileId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Deleta um arquivo hospedado na amazon S3\ne realiza um softdelete no repositório de File\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generatePresignedUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    generatePresignedUrl(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Gera um link de acesso termporário\na um arquivo hospedado na amazon S3\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFile(file: FileEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Retorna um objecto contendo o conteúdo do arquivo na S3\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            FileEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File, filename: string, ownerType: \"User\" | \"Partner\", userOrPartner: UserEntity | PartnerEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/files/file.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Faz o upload de um arquivo no serviço\nS3 da amazon e salva a referência do arquivo no\nbanco de dados\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ownerType\n                                            \n                                                        \"User\" | \"Partner\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userOrPartner\n                                            \n                                                        UserEntity | PartnerEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\nimport { FileEntity } from './entities/file.entity';\n\nimport { FILE_SERVICE_PROVIDER } from './file.constants';\nimport { FileImplInterface } from './file.impl.interface';\nimport { Injectable, Inject } from '@nestjs/common';\n\nimport { PartnerEntity } from '../partners/entities/partner.entity';\nimport { UserEntity } from '../users/entities/user.entity';\n@Injectable()\nexport class FileService {\n  constructor(\n    @InjectRepository(FileEntity)\n    private fileRepository: Repository,\n    @Inject(FILE_SERVICE_PROVIDER)\n    private readonly fileServiceProvider: FileImplInterface,\n  ) {}\n\n  /**\n   * Faz o upload de um arquivo no serviço\n   * S3 da amazon e salva a referência do arquivo no\n   * banco de dados\n   * @param file\n   * @param filename\n   * @param userId\n   * @param isPublic\n   * @param companyId\n   * @returns {Promise}\n   */\n  async uploadFile(\n    file: Express.Multer.File,\n    filename: string,\n    ownerType: 'User' | 'Partner',\n    userOrPartner: UserEntity | PartnerEntity,\n  ): Promise {\n    if (!userOrPartner) throw new Error('Usuário inválido');\n\n    const uploadedFile = await this.fileServiceProvider.upload(file, filename);\n    const uploadOptions = {\n      key: uploadedFile.Key,\n      ownerType,\n      userOwner: ownerType === 'User' ? userOrPartner : undefined,\n      partnerOwner: ownerType === 'Partner' ? userOrPartner : undefined,\n    };\n    const newFile = this.fileRepository.create(uploadOptions);\n\n    return this.fileRepository.save(newFile);\n  }\n\n  /**\n   * Retorna um objecto contendo o conteúdo do arquivo na S3\n   *\n   * @param file\n   * @returns {Promise>}\n   */\n  async getFile(file: FileEntity): Promise {\n    const fileFromDb = await this.fileRepository.findOne({\n      where: { key: file.key },\n    });\n    if (!fileFromDb) throw new Error('Arquivo não encontrado');\n\n    return this.fileServiceProvider.get(fileFromDb.key);\n  }\n\n  /**\n   * Gera um link de acesso termporário\n   * a um arquivo hospedado na amazon S3\n   * @param id\n   * @returns {Promise}\n   */\n  public async generatePresignedUrl(id: string): Promise {\n    const fileFromDb = await this.fileRepository.findOne({\n      where: { id },\n    });\n    if (!fileFromDb) throw new Error('Arquivo não encontrado');\n\n    return this.fileServiceProvider.generateUrl(fileFromDb.key);\n  }\n\n  /**\n   * Deleta um arquivo hospedado na amazon S3\n   * e realiza um softdelete no repositório de File\n   * @param fileId\n   * @returns {Promise}\n   */\n\n  async deleteFile(fileId: string): Promise {\n    try {\n      const file = await this.fileRepository.findOne({\n        where: { id: fileId },\n      });\n\n      if (!file) throw new Error('Empresa informada não encontrada');\n      await this.fileServiceProvider.delete(file.key);\n      await this.fileRepository.softDelete(fileId);\n      return 'File deleted';\n    } catch (error) {\n      throw new Error('cant delete file:' + error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/FollowPartnerDto.html': {
      url: 'classes/FollowPartnerDto.html',
      title: 'class - FollowPartnerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FollowPartnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/followers/dtos/follow-partner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                partner_id\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Partner is required'})@IsUUID('4', {message: 'Invalid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/followers/dtos/follow-partner.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'User is required'})@IsUUID('4', {message: 'Invalid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/followers/dtos/follow-partner.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsUUID } from 'class-validator';\nimport { UserEntity } from '../../users/entities/user.entity';\n\nexport class FollowPartnerDto {\n  @IsNotEmpty({ message: 'User is required' })\n  @IsUUID('4', { message: 'Invalid UUID' })\n  user_id?: string;\n\n  @IsNotEmpty({ message: 'Partner is required' })\n  @IsUUID('4', { message: 'Invalid UUID' })\n  partner_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/FollowerEntity.html': {
      url: 'entities/FollowerEntity.html',
      title: 'entity - FollowerEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  FollowerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/followers/entities/followers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                partner\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/followers/entities/followers.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, partner => partner.followers, {onDelete: 'CASCADE'})@JoinColumn({name: 'partner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_followers_partner_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/followers/entities/followers.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.follows, {onDelete: 'CASCADE'})@JoinColumn({name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_followers_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/followers/entities/followers.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, ManyToOne, CreateDateColumn, JoinColumn, Unique } from 'typeorm';\nimport { UserEntity } from '../../users/entities/user.entity';\nimport { PartnerEntity } from '../../partners/entities/partner.entity';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\n\n@Entity({\n  name: 'followers',\n})\n@Unique('unique_follow', ['user', 'partner'])\nexport class FollowerEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn('uuid')\n  id: number;\n\n  @ManyToOne(() => UserEntity, (user) => user.follows, { onDelete: 'CASCADE' })\n  @JoinColumn({\n    name: 'user_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_followers_user_id',\n  })\n  user: UserEntity;\n\n  @ManyToOne(() => PartnerEntity, (partner) => partner.followers, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'partner_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_followers_partner_id',\n  })\n  partner: PartnerEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/FollowersModule.html': {
      url: 'modules/FollowersModule.html',
      title: 'module - FollowersModule',
      body: "\n                   \n\n\n\n\n    Modules\n    FollowersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FollowersModule\n\n\n\ncluster_FollowersModule_providers\n\n\n\ncluster_FollowersModule_exports\n\n\n\n\nFollowersService \n\nFollowersService \n\n\n\nFollowersModule\n\nFollowersModule\n\nFollowersService  -->\n\nFollowersModule->FollowersService \n\n\n\n\n\nFollowersService\n\nFollowersService\n\nFollowersModule -->\n\nFollowersService->FollowersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/followers/followers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FollowersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FollowersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { FollowerEntity } from './entities/followers.entity';\nimport { FollowersService } from './followers.service';\nimport { UsersModule } from '../users/users.module';\nimport { PartnersModule } from '../partners/partners.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([FollowerEntity])],\n  exports: [FollowersService],\n  providers: [FollowersService],\n})\nexport class FollowersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/FollowersService.html': {
      url: 'injectables/FollowersService.html',
      title: 'injectable - FollowersService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FollowersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/followers/followers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countUserFollowers\n                            \n                            \n                                    Async\n                                countUserFollows\n                            \n                            \n                                    Async\n                                follow\n                            \n                            \n                                    Async\n                                getPartnerFollows\n                            \n                            \n                                    Async\n                                getUserFollows\n                            \n                            \n                                    Async\n                                unFollow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(followersRepository: Repository, i18n: CustomI18nService)\n                    \n                \n                        \n                            \n                                Defined in src/apps/followers/followers.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        followersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        CustomI18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countUserFollowers\n                        \n                    \n                \n            \n            \n                \n                        \n                    countUserFollowers(partner: PartnerEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/followers/followers.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partner\n                                            \n                                                            PartnerEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countUserFollows\n                        \n                    \n                \n            \n            \n                \n                        \n                    countUserFollows(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/followers/followers.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        follow\n                        \n                    \n                \n            \n            \n                \n                        \n                    follow(user: UserEntity, partner: PartnerEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/followers/followers.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partner\n                                            \n                                                            PartnerEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPartnerFollows\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPartnerFollows(partner: PartnerEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/followers/followers.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partner\n                                            \n                                                            PartnerEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserFollows\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserFollows(user: UserEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/followers/followers.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        unFollow\n                        \n                    \n                \n            \n            \n                \n                        \n                    unFollow(user: UserEntity, partner: PartnerEntity)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/followers/followers.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partner\n                                            \n                                                            PartnerEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FollowerEntity } from './entities/followers.entity';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { FollowPartnerDto } from './dtos/follow-partner.dto';\nimport { UnfollowPartnerDto } from './dtos/unfollow-partner.dto';\nimport { PartnerEntity } from '../partners/entities/partner.entity';\nimport { UserEntity } from '../users/entities/user.entity';\nimport { PartnersService } from '../partners/partners.service';\nimport { UsersService } from '../users/users.service';\nimport { CustomI18nService } from '../i18n/i18n.service';\n\n@Injectable()\nexport class FollowersService {\n  constructor(\n    @InjectRepository(FollowerEntity)\n    private readonly followersRepository: Repository,\n\n    private readonly i18n: CustomI18nService,\n  ) {}\n\n  async getUserFollows(user: UserEntity): Promise {\n    if (!user) throw new Error(this.i18n.t('users.validations.not_found'));\n\n    return this.followersRepository.find({\n      where: { user: user },\n      relations: ['partner'],\n    });\n  }\n\n  async countUserFollows(user: UserEntity): Promise {\n    if (!user) throw new Error(this.i18n.t('users.validations.not_found'));\n\n    return this.followersRepository.count({\n      where: { user: user },\n    });\n  }\n\n  async getPartnerFollows(partner: PartnerEntity): Promise {\n    if (!partner)\n      throw new Error(this.i18n.t('partners.validations.not_found'));\n    return this.followersRepository.find({\n      where: { partner: partner },\n      relations: ['user'],\n    });\n  }\n\n  async countUserFollowers(partner: PartnerEntity): Promise {\n    if (!partner)\n      throw new Error(this.i18n.t('partners..validations.not_found'));\n    return this.followersRepository.count({\n      where: { partner: partner },\n    });\n  }\n\n  async follow(\n    user: UserEntity,\n    partner: PartnerEntity,\n  ): Promise {\n    if (!partner)\n      throw new Error(this.i18n.t('partners.validations.not_found'));\n\n    const newFollower = this.followersRepository.create({\n      user: user,\n      partner: partner,\n    });\n    return await this.followersRepository.save(newFollower);\n  }\n\n  async unFollow(\n    user: UserEntity,\n    partner: PartnerEntity,\n  ): Promise {\n    if (!partner)\n      throw new Error(this.i18n.t('partners.validations.not_found'));\n\n    if (!user) throw new Error(this.i18n.t('users.validations.not_found'));\n\n    return this.followersRepository.softDelete({\n      user: user,\n      partner: partner,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Init1731534812101.html': {
      url: 'classes/Init1731534812101.html',
      title: 'class - Init1731534812101',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Init1731534812101\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1731534812101-init.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'Init1731534812101\'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1731534812101-init.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1731534812101-init.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1731534812101-init.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from "typeorm";\n\nexport class Init1731534812101 implements MigrationInterface {\n    name = \'Init1731534812101\'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`CREATE TABLE "files" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "key" character varying NOT NULL, CONSTRAINT "PK_6c16b9093a142e0e7613b04a3d9" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TYPE "public"."user_profile_gender_enum" AS ENUM(\'MALE\', \'FEMALE\', \'OTHER\')`);\n        await queryRunner.query(`CREATE TABLE "user_profile" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "first_name" character varying NOT NULL, "last_name" character varying NOT NULL, "street" character varying, "city" character varying, "state" character varying, "postal_code" character varying(10), "country" character varying, "complement" character varying, "phone" character varying NOT NULL, "gender" "public"."user_profile_gender_enum", "birth_date" date, "user_id" uuid, "avatar_id" uuid, CONSTRAINT "UQ_eee360f3bff24af1b6890765201" UNIQUE ("user_id"), CONSTRAINT "REL_eee360f3bff24af1b689076520" UNIQUE ("user_id"), CONSTRAINT "REL_3c011f4eefd39da06c16ace49a" UNIQUE ("avatar_id"), CONSTRAINT "PK_f44d0cd18cfd80b0fed7806c3b7" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TYPE "public"."user_settings_theme_enum" AS ENUM(\'DARK\', \'LIGHT\')`);\n        await queryRunner.query(`CREATE TYPE "public"."user_settings_locale_enum" AS ENUM(\'EN\', \'PT\', \'ES\')`);\n        await queryRunner.query(`CREATE TABLE "user_settings" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "theme" "public"."user_settings_theme_enum" NOT NULL DEFAULT \'LIGHT\', "locale" "public"."user_settings_locale_enum" NOT NULL DEFAULT \'EN\', "user_id" uuid, CONSTRAINT "REL_4ed056b9344e6f7d8d46ec4b30" UNIQUE ("user_id"), CONSTRAINT "PK_00f004f5922a0744d174530d639" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TYPE "public"."partner_profile_theme_enum" AS ENUM(\'DARK\', \'LIGHT\')`);\n        await queryRunner.query(`CREATE TABLE "partner_profile" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "description" character varying NOT NULL, "category" character varying NOT NULL, "street" character varying NOT NULL, "city" character varying NOT NULL, "state" character varying NOT NULL, "postal_code" character varying(10) NOT NULL, "country" character varying NOT NULL, "complement" character varying, "phone" character varying NOT NULL, "theme" "public"."partner_profile_theme_enum" NOT NULL DEFAULT \'LIGHT\', "partner_id" uuid, "logo_id" uuid, "banner_id" uuid, CONSTRAINT "REL_50daa33af878bb6b33b68a3b44" UNIQUE ("partner_id"), CONSTRAINT "REL_d50aa4ca9c1c0b68de9519c26d" UNIQUE ("logo_id"), CONSTRAINT "REL_7e549309be75f65476d4a0a98a" UNIQUE ("banner_id"), CONSTRAINT "PK_44faff5f032dc54a4484741b078" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "followers" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" uuid, "partner_id" uuid, CONSTRAINT "unique_follow" UNIQUE ("user_id", "partner_id"), CONSTRAINT "PK_c90cfc5b18edd29bd15ba95c1a4" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "reviews" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" SERIAL NOT NULL, "stars" integer NOT NULL, "comment" character varying NOT NULL, "user_id" uuid, "partner_id" uuid, CONSTRAINT "CHK_76682f10516849abb17cd501b9" CHECK ("stars" BETWEEN 1 AND 5), CONSTRAINT "PK_231ae565c273ee700b283f15c1d" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "tags" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "tag" character varying(20) NOT NULL, CONSTRAINT "PK_e7dc17249a1148a1970748eda99" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "partner_settings" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "partner_id" uuid, CONSTRAINT "REL_43e166de56d428d545402567fd" UNIQUE ("partner_id"), CONSTRAINT "PK_25ec258b870291f743c1ff00248" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "partners" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "legal_name" character varying NOT NULL, "business_id" character varying NOT NULL, "profile_id" uuid, "settings_id" uuid, CONSTRAINT "UQ_dc1522c9bf1cabc0c85359c2d68" UNIQUE ("legal_name"), CONSTRAINT "UQ_ca34102014a1fd8163017a58dc2" UNIQUE ("business_id"), CONSTRAINT "REL_9fb38ad65447f6855d619dd2ce" UNIQUE ("profile_id"), CONSTRAINT "REL_f01a03d81d935e1e4545ef0ecf" UNIQUE ("settings_id"), CONSTRAINT "PK_998645b20820e4ab99aeae03b41" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "subscribers" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" uuid, "partner_id" uuid, CONSTRAINT "PK_cbe0a7a9256c826f403c0236b67" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "roles" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "role" character varying NOT NULL, CONSTRAINT "PK_c1433d71a4838793a49dcad46ab" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "team_members" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "team_id" uuid, "user_id" uuid, CONSTRAINT "REL_fdad7d5768277e60c40e01cdce" UNIQUE ("team_id"), CONSTRAINT "REL_c2bf4967c8c2a6b845dadfbf3d" UNIQUE ("user_id"), CONSTRAINT "PK_ca3eae89dcf20c9fd95bf7460aa" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "teams" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "partner_id" uuid, CONSTRAINT "REL_fde44edfeb831a0f12733b0938" UNIQUE ("partner_id"), CONSTRAINT "PK_7e5523774a38b08a6236d322403" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "users" ("created_at" TIMESTAMP NOT NULL DEFAULT (\'now\'::text)::timestamp(6) with time zone, "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "id" uuid NOT NULL DEFAULT uuid_generate_v4(), "email" character varying NOT NULL, "password" character varying NOT NULL, "refresh_token" character varying, "recover_pass_token" character varying, "user_gateway_id" character varying, "profile_id" uuid, "settings_id" uuid, CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "REL_23371445bd80cb3e413089551b" UNIQUE ("profile_id"), CONSTRAINT "REL_aa03f4d6277ce01b387c99d856" UNIQUE ("settings_id"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);\n        await queryRunner.query(`CREATE TABLE "partners_tags" ("partner_id" uuid NOT NULL, "tag_id" uuid NOT NULL, CONSTRAINT "PK_69cefba3f2570d1a040530ced75" PRIMARY KEY ("partner_id", "tag_id"))`);\n        await queryRunner.query(`CREATE INDEX "IDX_0bb30eecfe3e109dd0c5fbfbc5" ON "partners_tags" ("partner_id") `);\n        await queryRunner.query(`CREATE INDEX "IDX_a5dd1e5a6d76ed2607dd31b0e6" ON "partners_tags" ("tag_id") `);\n        await queryRunner.query(`CREATE TABLE "partners_owners" ("partner_id" uuid NOT NULL, "user_id" uuid NOT NULL, CONSTRAINT "PK_1dc8e359c31a2f2c70a816f7fb7" PRIMARY KEY ("partner_id", "user_id"))`);\n        await queryRunner.query(`CREATE INDEX "IDX_2a67fee319e78de064f0210347" ON "partners_owners" ("partner_id") `);\n        await queryRunner.query(`CREATE INDEX "IDX_35ba194e002c739c3caf41fdac" ON "partners_owners" ("user_id") `);\n        await queryRunner.query(`CREATE TABLE "team_members_roles" ("team_member_id" uuid NOT NULL, "role_id" uuid NOT NULL, CONSTRAINT "PK_4d8cf4d84ca3df7d35f03654707" PRIMARY KEY ("team_member_id", "role_id"))`);\n        await queryRunner.query(`CREATE INDEX "IDX_f4d4e7ba1240fe5f2c4be80d13" ON "team_members_roles" ("team_member_id") `);\n        await queryRunner.query(`CREATE INDEX "IDX_d28e1ffff7d6b7d3eb26253f9d" ON "team_members_roles" ("role_id") `);\n        await queryRunner.query(`CREATE TABLE "users_tags" ("user_id" uuid NOT NULL, "tag_id" uuid NOT NULL, CONSTRAINT "PK_7f29e59d4fa87411d3fa79c5db4" PRIMARY KEY ("user_id", "tag_id"))`);\n        await queryRunner.query(`CREATE INDEX "IDX_37fe67a713a33c9385ede5782d" ON "users_tags" ("user_id") `);\n        await queryRunner.query(`CREATE INDEX "IDX_ee316e71a670dca8d696490aee" ON "users_tags" ("tag_id") `);\n        await queryRunner.query(`ALTER TABLE "user_profile" ADD CONSTRAINT "fk_profile_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "user_profile" ADD CONSTRAINT "fk_profile_photo_id" FOREIGN KEY ("avatar_id") REFERENCES "files"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "user_settings" ADD CONSTRAINT "fk_profile_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "partner_profile" ADD CONSTRAINT "fk_profile_partner_id" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "partner_profile" ADD CONSTRAINT "fk_profile_logo_id" FOREIGN KEY ("logo_id") REFERENCES "files"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "partner_profile" ADD CONSTRAINT "fk_profile_banner_id" FOREIGN KEY ("banner_id") REFERENCES "files"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "followers" ADD CONSTRAINT "fk_followers_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "followers" ADD CONSTRAINT "fk_followers_partner_id" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "fk_reviews_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "reviews" ADD CONSTRAINT "fk_partner_user_id" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "partner_settings" ADD CONSTRAINT "fk_settings_partner_id" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "partners" ADD CONSTRAINT "fk_partner_profile_id" FOREIGN KEY ("profile_id") REFERENCES "partner_profile"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "partners" ADD CONSTRAINT "fk_partner_settings_id" FOREIGN KEY ("settings_id") REFERENCES "partner_settings"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "subscribers" ADD CONSTRAINT "fk_subscribers_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "subscribers" ADD CONSTRAINT "fk_subscribers_partner_id" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "fk_team_member_tem_id" FOREIGN KEY ("team_id") REFERENCES "teams"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "fk_team_member_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "teams" ADD CONSTRAINT "FK_fde44edfeb831a0f12733b09383" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "fk_user_profile_id" FOREIGN KEY ("profile_id") REFERENCES "user_profile"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "users" ADD CONSTRAINT "fk_user_settings_id" FOREIGN KEY ("settings_id") REFERENCES "user_settings"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "partners_tags" ADD CONSTRAINT "FK_0bb30eecfe3e109dd0c5fbfbc50" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE "partners_tags" ADD CONSTRAINT "FK_a5dd1e5a6d76ed2607dd31b0e62" FOREIGN KEY ("tag_id") REFERENCES "tags"("id") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE "partners_owners" ADD CONSTRAINT "FK_2a67fee319e78de064f02103478" FOREIGN KEY ("partner_id") REFERENCES "partners"("id") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE "partners_owners" ADD CONSTRAINT "FK_35ba194e002c739c3caf41fdac4" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "team_members_roles" ADD CONSTRAINT "fk_team_member_id" FOREIGN KEY ("team_member_id") REFERENCES "team_members"("id") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE "team_members_roles" ADD CONSTRAINT "fk_team_member_role_id" FOREIGN KEY ("role_id") REFERENCES "roles"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n        await queryRunner.query(`ALTER TABLE "users_tags" ADD CONSTRAINT "FK_37fe67a713a33c9385ede5782df" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE CASCADE`);\n        await queryRunner.query(`ALTER TABLE "users_tags" ADD CONSTRAINT "FK_ee316e71a670dca8d696490aeeb" FOREIGN KEY ("tag_id") REFERENCES "tags"("id") ON DELETE CASCADE ON UPDATE CASCADE`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE "users_tags" DROP CONSTRAINT "FK_ee316e71a670dca8d696490aeeb"`);\n        await queryRunner.query(`ALTER TABLE "users_tags" DROP CONSTRAINT "FK_37fe67a713a33c9385ede5782df"`);\n        await queryRunner.query(`ALTER TABLE "team_members_roles" DROP CONSTRAINT "fk_team_member_role_id"`);\n        await queryRunner.query(`ALTER TABLE "team_members_roles" DROP CONSTRAINT "fk_team_member_id"`);\n        await queryRunner.query(`ALTER TABLE "partners_owners" DROP CONSTRAINT "FK_35ba194e002c739c3caf41fdac4"`);\n        await queryRunner.query(`ALTER TABLE "partners_owners" DROP CONSTRAINT "FK_2a67fee319e78de064f02103478"`);\n        await queryRunner.query(`ALTER TABLE "partners_tags" DROP CONSTRAINT "FK_a5dd1e5a6d76ed2607dd31b0e62"`);\n        await queryRunner.query(`ALTER TABLE "partners_tags" DROP CONSTRAINT "FK_0bb30eecfe3e109dd0c5fbfbc50"`);\n        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "fk_user_settings_id"`);\n        await queryRunner.query(`ALTER TABLE "users" DROP CONSTRAINT "fk_user_profile_id"`);\n        await queryRunner.query(`ALTER TABLE "teams" DROP CONSTRAINT "FK_fde44edfeb831a0f12733b09383"`);\n        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "fk_team_member_user_id"`);\n        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "fk_team_member_tem_id"`);\n        await queryRunner.query(`ALTER TABLE "subscribers" DROP CONSTRAINT "fk_subscribers_partner_id"`);\n        await queryRunner.query(`ALTER TABLE "subscribers" DROP CONSTRAINT "fk_subscribers_user_id"`);\n        await queryRunner.query(`ALTER TABLE "partners" DROP CONSTRAINT "fk_partner_settings_id"`);\n        await queryRunner.query(`ALTER TABLE "partners" DROP CONSTRAINT "fk_partner_profile_id"`);\n        await queryRunner.query(`ALTER TABLE "partner_settings" DROP CONSTRAINT "fk_settings_partner_id"`);\n        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "fk_partner_user_id"`);\n        await queryRunner.query(`ALTER TABLE "reviews" DROP CONSTRAINT "fk_reviews_user_id"`);\n        await queryRunner.query(`ALTER TABLE "followers" DROP CONSTRAINT "fk_followers_partner_id"`);\n        await queryRunner.query(`ALTER TABLE "followers" DROP CONSTRAINT "fk_followers_user_id"`);\n        await queryRunner.query(`ALTER TABLE "partner_profile" DROP CONSTRAINT "fk_profile_banner_id"`);\n        await queryRunner.query(`ALTER TABLE "partner_profile" DROP CONSTRAINT "fk_profile_logo_id"`);\n        await queryRunner.query(`ALTER TABLE "partner_profile" DROP CONSTRAINT "fk_profile_partner_id"`);\n        await queryRunner.query(`ALTER TABLE "user_settings" DROP CONSTRAINT "fk_profile_user_id"`);\n        await queryRunner.query(`ALTER TABLE "user_profile" DROP CONSTRAINT "fk_profile_photo_id"`);\n        await queryRunner.query(`ALTER TABLE "user_profile" DROP CONSTRAINT "fk_profile_user_id"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_ee316e71a670dca8d696490aee"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_37fe67a713a33c9385ede5782d"`);\n        await queryRunner.query(`DROP TABLE "users_tags"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_d28e1ffff7d6b7d3eb26253f9d"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_f4d4e7ba1240fe5f2c4be80d13"`);\n        await queryRunner.query(`DROP TABLE "team_members_roles"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_35ba194e002c739c3caf41fdac"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_2a67fee319e78de064f0210347"`);\n        await queryRunner.query(`DROP TABLE "partners_owners"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_a5dd1e5a6d76ed2607dd31b0e6"`);\n        await queryRunner.query(`DROP INDEX "public"."IDX_0bb30eecfe3e109dd0c5fbfbc5"`);\n        await queryRunner.query(`DROP TABLE "partners_tags"`);\n        await queryRunner.query(`DROP TABLE "users"`);\n        await queryRunner.query(`DROP TABLE "teams"`);\n        await queryRunner.query(`DROP TABLE "team_members"`);\n        await queryRunner.query(`DROP TABLE "roles"`);\n        await queryRunner.query(`DROP TABLE "subscribers"`);\n        await queryRunner.query(`DROP TABLE "partners"`);\n        await queryRunner.query(`DROP TABLE "partner_settings"`);\n        await queryRunner.query(`DROP TABLE "tags"`);\n        await queryRunner.query(`DROP TABLE "reviews"`);\n        await queryRunner.query(`DROP TABLE "followers"`);\n        await queryRunner.query(`DROP TABLE "partner_profile"`);\n        await queryRunner.query(`DROP TYPE "public"."partner_profile_theme_enum"`);\n        await queryRunner.query(`DROP TABLE "user_settings"`);\n        await queryRunner.query(`DROP TYPE "public"."user_settings_locale_enum"`);\n        await queryRunner.query(`DROP TYPE "public"."user_settings_theme_enum"`);\n        await queryRunner.query(`DROP TABLE "user_profile"`);\n        await queryRunner.query(`DROP TYPE "public"."user_profile_gender_enum"`);\n        await queryRunner.query(`DROP TABLE "files"`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'interfaces/InvoiceSettingsInterface.html': {
      url: 'interfaces/InvoiceSettingsInterface.html',
      title: 'interface - InvoiceSettingsInterface',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvoiceSettingsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/intefaces/customer-invoice-settings.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            default_payment_method\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        default_payment_method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default_payment_method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InvoiceSettingsInterface {\n  default_payment_method?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'guards/JwtAuthGuard.html': {
      url: 'guards/JwtAuthGuard.html',
      title: 'guard - JwtAuthGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/auth-jwt.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractFromHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, usersService: UsersService, partnersService: PartnersService, jwtService: JwtService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/guards/auth-jwt.guard.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        partnersService\n                                                  \n                                                        \n                                                                        PartnersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/auth-jwt.guard.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractFromHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractFromHeaders(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/auth-jwt.guard.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  Scope,\n  CanActivate,\n  Logger,\n  ExecutionContext,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { AuthService } from '../apps/auth/auth.service';\nimport { UsersService } from '../apps/users/users.service';\nimport { IS_PUBLIC_KEY } from '../decorators/public.decorator';\nimport { PartnersService } from '../apps/partners/partners.service';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class JwtAuthGuard implements CanActivate {\n  private readonly logger = new Logger();\n  constructor(\n    private reflector: Reflector,\n    private usersService: UsersService,\n    private partnersService: PartnersService,\n    private readonly jwtService: JwtService,\n    private readonly authService: AuthService,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    try {\n      let roles = this.reflector.get('roles', context.getHandler());\n\n      if (!roles) roles = [];\n      const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n        context.getHandler(),\n        context.getClass(),\n      ]);\n\n      if (isPublic) {\n        return true;\n      }\n\n      const request = context.switchToHttp().getRequest();\n      const token = this.extractFromHeaders(request);\n\n      if (!token) {\n        throw new UnauthorizedException();\n      }\n\n      const payload = await this.jwtService.verify(token, {\n        secret: process.env.SECRET_JWT,\n      });\n\n      const userId = payload.userId;\n      const partnerId = request.headers['x-partnerid'];\n\n      const userFromDb = await this.usersService.findById(userId);\n      if (!userFromDb) throw new UnauthorizedException();\n\n      const partnerFromDb = await this.partnersService.findById(partnerId);\n      if (!partnerFromDb) throw new UnauthorizedException();\n\n      delete userFromDb.password;\n      delete userFromDb.refresh_token;\n      request.current_user = userFromDb;\n      request.current_partner = partnerFromDb;\n\n      return true;\n    } catch (error) {\n      throw new UnauthorizedException();\n    }\n  }\n\n  private extractFromHeaders(request: Request) {\n    return request?.cookies?.vg1;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/LoginDto.html': {
      url: 'classes/LoginDto.html',
      title: 'class - LoginDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/auth/dtos/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(i18n: CustomI18nService)\n                    \n                \n                        \n                            \n                                Defined in src/apps/auth/dtos/login.dto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        CustomI18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email is required'})@IsEmail({}, {message: 'It doesn't look an email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})@IsString({message: 'Password should be a String'})@Matches(PassRegex.LOWERCASE, {message: 'Password must contain at least one lowercase letter'})@Matches(PassRegex.NUMBER, {message: 'Password must contain at least one number'})@Matches(PassRegex.SPECIAL_CHAR, {message: 'Password must contain at least one special character'})@Matches(PassRegex.UPPERCASE, {message: 'Password must contain at least one uppercase letter'})@Matches(PassRegex.MIN_8, {message: 'Password must be at least 8 characters long'})@Matches(PassRegex.MAX_16, {message: 'Password must be at most 16 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/login.dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, Matches } from 'class-validator';\nimport { i18nValidationMessage } from 'nestjs-i18n';\nimport { CustomI18nService } from '../../i18n/i18n.service';\nimport { PassRegex } from '../auth-pass.rules';\n\nexport class LoginDto {\n  constructor(private readonly i18n: CustomI18nService) {}\n  @IsNotEmpty({\n    message: 'Email is required',\n  })\n  @IsEmail({}, { message: \"It doesn't look an email\" })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  @IsString({ message: 'Password should be a String' })\n  @Matches(PassRegex.LOWERCASE, {\n    message: 'Password must contain at least one lowercase letter',\n  })\n  @Matches(PassRegex.NUMBER, {\n    message: 'Password must contain at least one number',\n  })\n  @Matches(PassRegex.SPECIAL_CHAR, {\n    message: 'Password must contain at least one special character',\n  })\n  @Matches(PassRegex.UPPERCASE, {\n    message: 'Password must contain at least one uppercase letter',\n  })\n  @Matches(PassRegex.MIN_8, {\n    message: 'Password must be at least 8 characters long',\n  })\n  @Matches(PassRegex.MAX_16, {\n    message: 'Password must be at most 16 characters long',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/Manytoone1731887989393.html': {
      url: 'classes/Manytoone1731887989393.html',
      title: 'class - Manytoone1731887989393',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Manytoone1731887989393\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1731887989393-manytoone.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \'Manytoone1731887989393\'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1731887989393-manytoone.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1731887989393-manytoone.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1731887989393-manytoone.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from "typeorm";\n\nexport class Manytoone1731887989393 implements MigrationInterface {\n    name = \'Manytoone1731887989393\'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "fk_team_member_user_id"`);\n        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "REL_c2bf4967c8c2a6b845dadfbf3d"`);\n        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "fk_team_member_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE "team_members" DROP CONSTRAINT "fk_team_member_user_id"`);\n        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "REL_c2bf4967c8c2a6b845dadfbf3d" UNIQUE ("user_id")`);\n        await queryRunner.query(`ALTER TABLE "team_members" ADD CONSTRAINT "fk_team_member_user_id" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules/NotificationsModule.html': {
      url: 'modules/NotificationsModule.html',
      title: 'module - NotificationsModule',
      body: '\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/notifications/notifications.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'entities/PartnerEntity.html': {
      url: 'entities/PartnerEntity.html',
      title: 'entity - PartnerEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  PartnerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/entities/partner.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                business_id\n                            \n                            \n                                    \n                                followers\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                legal_name\n                            \n                            \n                                    \n                                    \n                                owners\n                            \n                            \n                                    \n                                    \n                                profile\n                            \n                            \n                                    \n                                reviews\n                            \n                            \n                                    \n                                    \n                                settings\n                            \n                            \n                                    \n                                subscribers\n                            \n                            \n                                    \n                                    \n                                tags\n                            \n                            \n                                    \n                                teams\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        business_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        followers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FollowerEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, followers => followers.partner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        legal_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        owners\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, user => user.partners)@JoinTable({name: 'partners_owners', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true})@JoinColumn({name: 'profile_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_partner_profile_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewsEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, review => review.partner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerSettingsEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true})@JoinColumn({name: 'settings_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_partner_settings_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriberEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriber => subscriber.partner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'partners_tags', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamsEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, team => team.partner)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner.entity.ts:97\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BeforeInsert,\n  Column,\n  Entity,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n} from 'typeorm';\nimport { PartnerProfileEntity } from './partner-profile.entity';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\nimport { SubscriberEntity } from '../../subscribers/entities/subscribers.entity';\nimport { FollowerEntity } from '../../followers/entities/followers.entity';\nimport { ReviewsEntity } from '../../reviews/entities/reviews.entity';\nimport { Exclude } from 'class-transformer';\nimport { generateHash, compareHash } from '../../../utils/encryption';\nimport { TagEntity } from '../../tags/entities/tags.entity';\nimport { PartnerSettingsEntity } from './partner-settings.entity';\nimport { UserEntity } from '../../users/entities/user.entity';\nimport { TeamsEntity } from '../../teams/entities/teams.entity';\n\n@Entity({\n  name: 'partners',\n})\nexport class PartnerEntity extends SoftFieldsForEntities {\n  constructor(id?: string) {\n    super();\n    this.id = id;\n  }\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  legal_name: string;\n\n  @Column({ unique: true })\n  business_id: string;\n\n  @OneToOne(() => PartnerProfileEntity, { cascade: true })\n  @JoinColumn({\n    name: 'profile_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_partner_profile_id',\n  })\n  profile: PartnerProfileEntity;\n\n  @OneToOne(() => PartnerSettingsEntity, { cascade: true })\n  @JoinColumn({\n    name: 'settings_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_partner_settings_id',\n  })\n  settings: PartnerSettingsEntity;\n\n  @OneToMany(() => SubscriberEntity, (subscriber) => subscriber.partner)\n  subscribers: SubscriberEntity[];\n\n  @OneToMany(() => FollowerEntity, (followers) => followers.partner)\n  followers: FollowerEntity[];\n\n  @OneToMany(() => ReviewsEntity, (review) => review.partner)\n  reviews: ReviewsEntity[];\n\n  @ManyToMany(() => TagEntity)\n  @JoinTable({\n    name: 'partners_tags',\n    joinColumn: {\n      name: 'partner_id',\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'tag_id',\n      referencedColumnName: 'id',\n    },\n  })\n  tags: TagEntity;\n\n  @ManyToMany(() => UserEntity, (user) => user.partners)\n  @JoinTable({\n    name: 'partners_owners',\n    joinColumn: {\n      name: 'partner_id',\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'user_id',\n      referencedColumnName: 'id',\n    },\n  })\n  owners: UserEntity[];\n\n  @OneToMany(() => TeamsEntity, (team) => team.partner)\n  teams: TeamsEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/PartnerProfileEntity.html': {
      url: 'entities/PartnerProfileEntity.html',
      title: 'entity - PartnerProfileEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  PartnerProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/entities/partner-profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                banner\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                    Optional\n                                complement\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                partner\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                postal_code\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                street\n                            \n                            \n                                    \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        banner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, file => file.id, {nullable: true})@JoinColumn({name: 'banner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_banner_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        complement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, file => file.id, {nullable: true})@JoinColumn({name: 'logo_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_logo_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'partner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_partner_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postal_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 10})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         THEME_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: THEME_ENUM, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-profile.entity.ts:49\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { PartnerEntity } from './partner.entity';\nimport { FileEntity } from '../../files/entities/file.entity';\nimport { THEME_ENUM } from '../../../enums/theme.enum';\nimport { PartnerSettingsEntity } from './partner-settings.entity';\n\n@Entity({\n  name: 'partner_profile',\n})\nexport class PartnerProfileEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column()\n  category: string;\n\n  @Column()\n  street: string;\n\n  @Column()\n  city: string;\n\n  @Column()\n  state: string;\n\n  @Column({ length: 10 })\n  postal_code: string;\n\n  @Column()\n  country: string;\n\n  @Column({ nullable: true })\n  complement?: string;\n\n  @Column()\n  phone: string;\n\n  @Column({\n    type: 'enum',\n    enum: THEME_ENUM,\n    default: THEME_ENUM.LIGHT,\n  })\n  theme: THEME_ENUM;\n\n  @OneToOne(() => PartnerEntity)\n  @JoinColumn({\n    name: 'partner_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_profile_partner_id',\n  })\n  partner: PartnerEntity;\n\n  @OneToOne(() => FileEntity, (file) => file.id, { nullable: true })\n  @JoinColumn({\n    name: 'logo_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_profile_logo_id',\n  })\n  logo: File;\n\n  @OneToOne(() => FileEntity, (file) => file.id, { nullable: true })\n  @JoinColumn({\n    name: 'banner_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_profile_banner_id',\n  })\n  banner: File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/PartnerSettingsEntity.html': {
      url: 'entities/PartnerSettingsEntity.html',
      title: 'entity - PartnerSettingsEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  PartnerSettingsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/entities/partner-settings.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                partner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-settings.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'partner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_settings_partner_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/entities/partner-settings.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, JoinColumn, OneToOne, PrimaryColumn, PrimaryGeneratedColumn } from 'typeorm';\nimport { PartnerEntity } from './partner.entity';\n\n@Entity({\n  name: 'partner_settings',\n})\nexport class PartnerSettingsEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @OneToOne(() => PartnerEntity)\n  @JoinColumn({\n    name: 'partner_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_settings_partner_id',\n  })\n  partner: PartnerEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/PartnerTeamsController.html': {
      url: 'controllers/PartnerTeamsController.html',
      title: 'controller - PartnerTeamsController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  PartnerTeamsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/controllers/partners.teams.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                partners\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                addMember\n                            \n                            \n                                    \n                                createPartnerTeam\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                getTeamMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        addMember\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMember(partnerId: string, teamId: string, currentUser: UserEntity, addTeamMembersDto: AddteamMemberDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':partner_id/teams/:team_id/members')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.teams.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addTeamMembersDto\n                                            \n                                                            AddteamMemberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createPartnerTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPartnerTeam(partnerId: string, currentUser: UserEntity, currentPartner: PartnerEntity, createTeamDto: CreateTeamDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':partner_id/teams')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.teams.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                currentPartner\n                                            \n                                                            PartnerEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createTeamDto\n                                            \n                                                            CreateTeamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':partner_id/teams')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.teams.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTeamMembers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTeamMembers(partnerId: string, teamId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':partner_id/teams/:team_id/members')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.teams.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseUUIDPipe,\n  Post,\n} from '@nestjs/common';\nimport { CurrentPartner } from '../../../decorators/current-partrner.decorator copy';\nimport { CurrentUser } from '../../../decorators/current-user.decorator';\nimport { CreateTeamDto } from '../../teams/dtos/create-team.dto';\nimport { UserEntity } from '../../users/entities/user.entity';\nimport { PartnerEntity } from '../entities/partner.entity';\nimport { TeamsService } from '../../teams/teams.service';\nimport { PartnersService } from '../partners.service';\nimport { CustomI18nService } from '../../i18n/i18n.service';\nimport { AddteamMemberDto } from '../../teams/dtos/add-team-member.dto';\nimport { UsersService } from '../../users/users.service';\n\n@Controller('partners')\nexport class PartnerTeamsController {\n  constructor(\n    private readonly partnersService: PartnersService,\n    private readonly userService: UsersService,\n    private readonly teamsService: TeamsService,\n    private readonly i18n: CustomI18nService,\n  ) {}\n\n  @Get(':partner_id/teams')\n  findAll(@Param('partner_id', new ParseUUIDPipe()) id: string) {\n    return this.teamsService.findAll(id);\n  }\n\n  @Post(':partner_id/teams')\n  createPartnerTeam(\n    @Body('partner_id', new ParseUUIDPipe()) partnerId: string,\n    @CurrentUser() currentUser: UserEntity,\n    @CurrentPartner() currentPartner: PartnerEntity,\n    @Body() createTeamDto: CreateTeamDto,\n  ) {\n    try {\n      const isOwner = this.partnersService.checkParnterOwener(currentUser, partnerId);\n      if (!isOwner) {\n        throw new Error(this.i18n.t('teams.validations.not_a_owner'));\n      }\n\n      return this.teamsService.create(currentUser, new PartnerEntity(partnerId), {\n        name: createTeamDto.name,\n      });\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Post(':partner_id/teams/:team_id/members')\n  async addMember(\n    @Param('partner_id', new ParseUUIDPipe()) partnerId: string,\n    @Param('team_id', new ParseUUIDPipe()) teamId: string,\n    @CurrentUser() currentUser: UserEntity,\n    @Body() addTeamMembersDto: AddteamMemberDto,\n  ) {\n    try {\n      const isOwner = await this.partnersService.checkParnterOwener(currentUser, partnerId);\n      if (!isOwner) throw new Error(this.i18n.t('teams.validations.not_a_owner'));\n\n      const listOfNewMembers: UserEntity[] = [];\n      for (const member of addTeamMembersDto.members) {\n        const memberFromDb = await this.userService.findById(member.id);\n        if (!memberFromDb)\n          throw new Error(\n            this.i18n.t('users.validations.not_found', { args: { username: member } }),\n          );\n\n        listOfNewMembers.push(memberFromDb);\n      }\n      return this.teamsService.addMembers(currentUser, teamId, {\n        members: listOfNewMembers,\n      });\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Get(':partner_id/teams/:team_id/members')\n  async getTeamMembers(\n    @Param('partner_id', new ParseUUIDPipe()) partnerId: string,\n    @Param('team_id', new ParseUUIDPipe()) teamId: string,\n  ) {\n    return this.teamsService.getMembers(partnerId, teamId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/PartnersController.html': {
      url: 'controllers/PartnersController.html',
      title: 'controller - PartnersController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  PartnersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/controllers/partners.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                partners\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findById\n                            \n                            \n                                    \n                                setPartnerProfile\n                            \n                            \n                                    \n                                setPartnerSettings\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(current: UserEntity, createParnterDto: CreatePartnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createParnterDto\n                                            \n                                                            CreatePartnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(partnerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':partner_id')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setPartnerProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPartnerProfile(partnerId: string, setPartnerProfileDto: SetPartnerProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':partner_id/profile')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setPartnerProfileDto\n                                            \n                                                            SetPartnerProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setPartnerSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPartnerSettings(partnerId: string, setPartnerSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':partner_id/settings')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setPartnerSettingsDto\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(partnerId: string, updatePartnerDto: UpdatePartnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':partner_id')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/partners/controllers/partners.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePartnerDto\n                                            \n                                                            UpdatePartnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadGatewayException,\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { PartnersService } from '../partners.service';\nimport { CurrentUser } from '../../../decorators/current-user.decorator';\nimport { UserEntity } from '../../users/entities/user.entity';\nimport { CreatePartnerDto } from '../dtos/create-partner.dto';\nimport { UpdatePartnerDto } from '../dtos/update-partner.dto';\nimport { SetPartnerProfileDto } from '../dtos/set-partner-profile.dto';\nimport { CurrentPartner } from '../../../decorators/current-partrner.decorator copy';\nimport { PartnerEntity } from '../entities/partner.entity';\nimport { TeamsService } from '../../teams/teams.service';\nimport { CustomI18nService } from '../../i18n/i18n.service';\nimport { CreateTeamDto } from '../../teams/dtos/create-team.dto';\n\n@Controller('partners')\nexport class PartnersController {\n  constructor(\n    private readonly partnersService: PartnersService,\n    private readonly teamsService: TeamsService,\n    private readonly i18n: CustomI18nService,\n  ) {}\n\n  @Post()\n  async create(@CurrentUser() current: UserEntity, @Body() createParnterDto: CreatePartnerDto) {\n    try {\n      return await this.partnersService.create(current, createParnterDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Get()\n  findAll() {\n    return this.partnersService.findAll();\n  }\n\n  @Patch(':partner_id')\n  update(\n    @Param('partner_id', new ParseUUIDPipe()) partnerId: string,\n    @Body() updatePartnerDto: UpdatePartnerDto,\n  ) {\n    try {\n      return this.partnersService.update(partnerId, updatePartnerDto);\n    } catch (error) {\n      throw new BadGatewayException(error.message);\n    }\n  }\n\n  @Get(':partner_id')\n  findById(@Param('partner_id', new ParseUUIDPipe()) partnerId: string) {\n    return this.partnersService.findById(partnerId);\n  }\n\n  @Post(':partner_id/profile')\n  setPartnerProfile(\n    @Param('partner_id', new ParseUUIDPipe()) partnerId: string,\n    setPartnerProfileDto: SetPartnerProfileDto,\n  ) {\n    try {\n      return this.partnersService.setPartnerProfile(partnerId, setPartnerProfileDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Post(':partner_id/settings')\n  setPartnerSettings(\n    @Param('partner_id', new ParseUUIDPipe()) partnerId: string,\n    setPartnerSettingsDto: unknown,\n  ) {\n    try {\n      return this.partnersService.setPartnerSettings(partnerId, setPartnerSettingsDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/PartnersModule.html': {
      url: 'modules/PartnersModule.html',
      title: 'module - PartnersModule',
      body: "\n                   \n\n\n\n\n    Modules\n    PartnersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PartnersModule\n\n\n\ncluster_PartnersModule_exports\n\n\n\ncluster_PartnersModule_providers\n\n\n\ncluster_PartnersModule_imports\n\n\n\n\nTeamsModule\n\nTeamsModule\n\n\n\nPartnersModule\n\nPartnersModule\n\nPartnersModule -->\n\nTeamsModule->PartnersModule\n\n\n\nPartnersModule -->\n\nTeamsModule->PartnersModule\n\n\n\n\n\nPartnersService \n\nPartnersService \n\nPartnersService  -->\n\nPartnersModule->PartnersService \n\n\n\n\n\nPartnersService\n\nPartnersService\n\nPartnersModule -->\n\nPartnersService->PartnersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/partners/partners.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PartnersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PartnersController\n                        \n                        \n                            PartnerTeamsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TeamsModule\n                        \n                        \n                            TeamsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PartnersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { PartnersService } from './partners.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PartnerEntity } from './entities/partner.entity';\nimport { PartnerProfileEntity } from './entities/partner-profile.entity';\nimport { PartnerSettingsEntity } from './entities/partner-settings.entity';\nimport { PartnersController } from './controllers/partners.controller';\nimport { TeamsModule } from '../teams/teams.module';\nimport { PartnerTeamsController } from './controllers/partners.teams.controller';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [\n    TeamsModule,\n    TypeOrmModule.forFeature([PartnerEntity, PartnerProfileEntity, PartnerSettingsEntity]),\n    TeamsModule,\n    forwardRef(() => UsersModule),\n  ],\n  providers: [PartnersService],\n  exports: [PartnersService],\n  controllers: [PartnersController, PartnerTeamsController],\n})\nexport class PartnersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/PartnersService.html': {
      url: 'injectables/PartnersService.html',
      title: 'injectable - PartnersService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PartnersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/partners.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkParnterOwener\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                getPartnerTeams\n                            \n                            \n                                    Async\n                                setPartnerProfile\n                            \n                            \n                                    Async\n                                setPartnerSettings\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partnerRepository: Repository, partnerProfileRepository: Repository, partnerSettingsRepository: Repository, teamsService: TeamsService, i18n: CustomI18nService)\n                    \n                \n                        \n                            \n                                Defined in src/apps/partners/partners.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partnerRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        partnerProfileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        partnerSettingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamsService\n                                                  \n                                                        \n                                                                        TeamsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        CustomI18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkParnterOwener\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkParnterOwener(user: UserEntity, partnerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(currentUser: UserEntity, createPartnerDto: CreatePartnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:31\n                        \n                    \n\n\n            \n                \n                        create a partner\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createPartnerDto\n                                            \n                                                            CreatePartnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:70\n                        \n                    \n\n\n            \n                \n                        List all partners\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(partnerId: string, options?: FindOneOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            FindOneOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPartnerTeams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPartnerTeams(partnerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setPartnerProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPartnerProfile(partnerId: string, setParnterProfileDto: SetPartnerProfileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Set a partner profile\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setParnterProfileDto\n                                            \n                                                            SetPartnerProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setPartnerSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    setPartnerSettings(partnerId: string, setPartnerSettingDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Configure Partner settings\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setPartnerSettingDto\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePartnerDto: UpdatePartnerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/partners/partners.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Update a partner\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePartnerDto\n                                            \n                                                            UpdatePartnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PartnerEntity } from './entities/partner.entity';\nimport { FindOneOptions, FindOptions, Repository } from 'typeorm';\nimport { CreatePartnerDto } from './dtos/create-partner.dto';\nimport { UpdatePartnerDto } from './dtos/update-partner.dto';\nimport { SetPartnerProfileDto } from './dtos/set-partner-profile.dto';\nimport { PartnerProfileEntity } from './entities/partner-profile.entity';\nimport { PartnerSettingsEntity } from './entities/partner-settings.entity';\nimport { CustomI18nService } from '../i18n/i18n.service';\nimport { UserEntity } from '../users/entities/user.entity';\nimport { TeamsService } from '../teams/teams.service';\n\n@Injectable()\nexport class PartnersService {\n  constructor(\n    @InjectRepository(PartnerEntity)\n    private readonly partnerRepository: Repository,\n    @InjectRepository(PartnerProfileEntity)\n    private readonly partnerProfileRepository: Repository,\n    @InjectRepository(PartnerSettingsEntity)\n    private readonly partnerSettingsRepository: Repository,\n    private readonly teamsService: TeamsService,\n    private readonly i18n: CustomI18nService,\n  ) {}\n  /**\n   * create a partner\n   * @param createPartnerDto\n   * @returns Promise\n   */\n  async create(\n    currentUser: UserEntity,\n    createPartnerDto: CreatePartnerDto,\n  ): Promise {\n    const { legal_name, business_id } = createPartnerDto;\n    const partnerExists = await this.partnerRepository.findOne({\n      where: {\n        legal_name: legal_name.toLowerCase(),\n        business_id: business_id,\n      },\n    });\n\n    if (partnerExists)\n      throw new Error(\n        this.i18n.t('partners.validations.already_exists', { args: { legal_name, business_id } }),\n      );\n\n    createPartnerDto.legal_name = createPartnerDto.legal_name.toLowerCase();\n    const newPartner = this.partnerRepository.create({\n      owners: [currentUser],\n      ...createPartnerDto,\n    });\n    return this.partnerRepository.save(newPartner);\n  }\n\n  /**\n   * Update a partner\n   * @param id\n   * @param updatePartnerDto\n   * @returns\n   */\n  async update(id: string, updatePartnerDto: UpdatePartnerDto) {\n    const updateResult = await this.partnerRepository.update(id, updatePartnerDto);\n    if (updateResult.affected > 0) return await this.findById(id);\n  }\n  /**\n   * List all partners\n   * @returns\n   */\n  findAll() {\n    return this.partnerRepository.find();\n  }\n\n  findById(partnerId: string, options?: FindOneOptions) {\n    return this.partnerRepository.findOne({\n      where: { id: partnerId },\n      ...options,\n    });\n  }\n\n  /**\n   * Set a partner profile\n   * @param partnerId\n   * @param setParnterProfileDto\n   * @returns Promise\n   */\n  async setPartnerProfile(\n    partnerId: string,\n    setParnterProfileDto: SetPartnerProfileDto,\n  ): Promise {\n    const partnerFromDb = await this.findById(partnerId);\n\n    if (!partnerFromDb) throw new Error(this.i18n.t('partners.validations.not_found'));\n\n    const parnterHasProfile = await this.partnerProfileRepository.findOne({\n      where: {\n        partner: {\n          id: partnerFromDb.id,\n        },\n      },\n    });\n\n    if (parnterHasProfile) {\n      const updateResult = await this.partnerProfileRepository.update(\n        parnterHasProfile.id,\n        setParnterProfileDto,\n      );\n      if (updateResult.affected > 0) {\n        return await this.partnerProfileRepository.findOne({\n          where: {\n            id: parnterHasProfile.id,\n          },\n        });\n      }\n    }\n\n    const newPartnerProfile = this.partnerProfileRepository.create({\n      partner: partnerFromDb,\n      ...setParnterProfileDto,\n    });\n    return await this.partnerProfileRepository.save(newPartnerProfile);\n  }\n  /**\n   * Configure Partner settings\n   * @param partnerId\n   * @param setPartnerSettingDto\n   * @returns\n   */\n  async setPartnerSettings(partnerId: string, setPartnerSettingDto: unknown) {\n    const partnerFromDb = await this.findById(partnerId);\n\n    if (!partnerFromDb) throw new Error(this.i18n.t('partners.validations.not_found'));\n\n    const partnerHasSettings = await this.partnerSettingsRepository.findOne({\n      where: {\n        partner: {\n          id: partnerFromDb.id,\n        },\n      },\n    });\n\n    if (partnerHasSettings) {\n      const updateResults = await this.partnerSettingsRepository.update(\n        partnerHasSettings.id,\n        setPartnerSettingDto,\n      );\n      if (updateResults.affected > 0)\n        return await this.partnerSettingsRepository.findOne({\n          where: {\n            id: partnerHasSettings.id,\n          },\n        });\n\n      throw new Error(this.i18n.t('partners.validations.update_not_found'));\n    }\n\n    const newSettings = this.partnerSettingsRepository.create({\n      partner: partnerFromDb,\n    });\n    return await this.partnerSettingsRepository.save(newSettings);\n  }\n\n  async checkParnterOwener(user: UserEntity, partnerId: string) {\n    const partnerFromDb = await this.findById(partnerId, {\n      relations: {\n        owners: true,\n      },\n    });\n\n    if (!partnerFromDb) throw new Error(this.i18n.t('partners.validations.not_found'));\n\n    return partnerFromDb.owners.some((owner) => owner.id === user.id);\n  }\n\n  async getPartnerTeams(partnerId: string) {\n    return this.teamsService.findById(partnerId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/PaymentGatewayFactory.html': {
      url: 'injectables/PaymentGatewayFactory.html',
      title: 'injectable - PaymentGatewayFactory',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentGatewayFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/payment-gateway.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPaymentGateway\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stripePaymentGateway: StripePaymentGateway)\n                    \n                \n                        \n                            \n                                Defined in src/apps/payment-gateway/payment-gateway.factory.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stripePaymentGateway\n                                                  \n                                                        \n                                                                        StripePaymentGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPaymentGateway\n                        \n                    \n                \n            \n            \n                \ngetPaymentGateway()\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/payment-gateway.factory.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         PaymentGatewayInterface\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StripePaymentGateway } from './implementations/stripe-payment.gateway';\nimport { PaymentGatewayInterface } from './intefaces/payment-gateway.interface';\n\n@Injectable()\nexport class PaymentGatewayFactory {\n  constructor(private readonly stripePaymentGateway: StripePaymentGateway) {}\n\n  getPaymentGateway(): PaymentGatewayInterface {\n    return this.stripePaymentGateway;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'interfaces/PaymentGatewayInterface.html': {
      url: 'interfaces/PaymentGatewayInterface.html',
      title: 'interface - PaymentGatewayInterface',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaymentGatewayInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/intefaces/payment-gateway.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        createCustomer\n                                    \n                                \n                                \n                                    \n                                        createSubscription\n                                    \n                                \n                                \n                                    \n                                        updateCustomer\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCustomer\n                        \n                    \n                \n            \n            \n                \ncreateCustomer(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/intefaces/payment-gateway.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCustomerDto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubscription\n                        \n                    \n                \n            \n            \n                \ncreateSubscription(createSubscriptionDto: CreateSubscriptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/intefaces/payment-gateway.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriptionDto\n                                            \n                                                            CreateSubscriptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCustomer\n                        \n                    \n                \n            \n            \n                \nupdateCustomer(paymentGatewayUserId: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/intefaces/payment-gateway.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentGatewayUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateCustomerDto } from '../dtos/create-customer.dto';\nimport { CreateSubscriptionDto } from '../dtos/create-subscription.dto';\nimport { UpdateCustomerDto } from '../dtos/update-customer.dto';\n\nexport interface PaymentGatewayInterface {\n  createCustomer(createCustomerDto: CreateCustomerDto): Promise;\n  updateCustomer(\n    paymentGatewayUserId: string,\n    updateCustomerDto: UpdateCustomerDto,\n  ): Promise;\n  createSubscription(\n    createSubscriptionDto: CreateSubscriptionDto,\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/PaymentGatewayModule.html': {
      url: 'modules/PaymentGatewayModule.html',
      title: 'module - PaymentGatewayModule',
      body: "\n                   \n\n\n\n\n    Modules\n    PaymentGatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentGatewayModule\n\n\n\ncluster_PaymentGatewayModule_providers\n\n\n\ncluster_PaymentGatewayModule_exports\n\n\n\n\nPaymentGatewayService \n\nPaymentGatewayService \n\n\n\nPaymentGatewayModule\n\nPaymentGatewayModule\n\nPaymentGatewayService  -->\n\nPaymentGatewayModule->PaymentGatewayService \n\n\n\n\n\nPaymentGatewayFactory\n\nPaymentGatewayFactory\n\nPaymentGatewayModule -->\n\nPaymentGatewayFactory->PaymentGatewayModule\n\n\n\n\n\nPaymentGatewayService\n\nPaymentGatewayService\n\nPaymentGatewayModule -->\n\nPaymentGatewayService->PaymentGatewayModule\n\n\n\n\n\nStripePaymentGateway\n\nStripePaymentGateway\n\nPaymentGatewayModule -->\n\nStripePaymentGateway->PaymentGatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/payment-gateway/payment-gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentGatewayFactory\n                        \n                        \n                            PaymentGatewayService\n                        \n                        \n                            StripePaymentGateway\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PaymentGatewayService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PaymentGatewayService } from './payment-gateway.service';\nimport { PaymentGatewayFactory } from './payment-gateway.factory';\nimport { StripePaymentGateway } from './implementations/stripe-payment.gateway';\n@Global()\n@Module({\n  providers: [\n    PaymentGatewayService,\n    PaymentGatewayFactory,\n    StripePaymentGateway,\n  ],\n  exports: [PaymentGatewayService],\n})\nexport class PaymentGatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/PaymentGatewayService.html': {
      url: 'injectables/PaymentGatewayService.html',
      title: 'injectable - PaymentGatewayService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentGatewayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/payment-gateway.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCustomer\n                            \n                            \n                                    Async\n                                createSubscription\n                            \n                            \n                                    Async\n                                updateCustomer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentGatewayFactory: PaymentGatewayFactory)\n                    \n                \n                        \n                            \n                                Defined in src/apps/payment-gateway/payment-gateway.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentGatewayFactory\n                                                  \n                                                        \n                                                                        PaymentGatewayFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCustomer(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/payment-gateway.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCustomerDto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscription(createSubscriptionDto: CreateSubscriptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/payment-gateway.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriptionDto\n                                            \n                                                            CreateSubscriptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCustomer(paymentGatewayUserId: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/payment-gateway.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                paymentGatewayUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCustomerDto } from './dtos/create-customer.dto';\nimport { PaymentGatewayFactory } from './payment-gateway.factory';\nimport { PaymentGatewayInterface } from './intefaces/payment-gateway.interface';\nimport { UpdateCustomerDto } from './dtos/update-customer.dto';\nimport { CreateSubscriptionDto } from './dtos/create-subscription.dto';\n\n@Injectable()\nexport class PaymentGatewayService implements PaymentGatewayInterface {\n  constructor(private readonly paymentGatewayFactory: PaymentGatewayFactory) {}\n\n  async updateCustomer(paymentGatewayUserId: string, updateCustomerDto: UpdateCustomerDto): Promise {\n    const paymentGateway: PaymentGatewayInterface = this.paymentGatewayFactory.getPaymentGateway();\n    return await paymentGateway.updateCustomer(paymentGatewayUserId, updateCustomerDto);\n  }\n  async createSubscription(createSubscriptionDto: CreateSubscriptionDto) {\n    const paymentGateway: PaymentGatewayInterface = this.paymentGatewayFactory.getPaymentGateway();\n    return await paymentGateway.createSubscription(createSubscriptionDto);\n  }\n\n  async createCustomer(createCustomerDto: CreateCustomerDto) {\n    const paymentGateway: PaymentGatewayInterface = this.paymentGatewayFactory.getPaymentGateway();\n    return await paymentGateway.createCustomer(createCustomerDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/PlansModule.html': {
      url: 'modules/PlansModule.html',
      title: 'module - PlansModule',
      body: '\n                   \n\n\n\n\n    Modules\n    PlansModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/plans/plans.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class PlansModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules/ProductsModule.html': {
      url: 'modules/ProductsModule.html',
      title: 'module - ProductsModule',
      body: '\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'entities/ReviewsEntity.html': {
      url: 'entities/ReviewsEntity.html',
      title: 'entity - ReviewsEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  ReviewsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/reviews/entities/reviews.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                comment\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                partner\n                            \n                            \n                                    \n                                stars\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/reviews/entities/reviews.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/reviews/entities/reviews.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, partner => partner.reviews, {onDelete: 'CASCADE'})@JoinColumn({name: 'partner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_partner_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/reviews/entities/reviews.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int', width: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/reviews/entities/reviews.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.reviews, {onDelete: 'CASCADE'})@JoinColumn({name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_reviews_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/reviews/entities/reviews.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn, ManyToOne, Column, Check, JoinColumn } from 'typeorm';\nimport { UserEntity } from '../../users/entities/user.entity';\nimport { PartnerEntity } from '../../partners/entities/partner.entity';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\n\n@Entity({\n  name: 'reviews',\n})\n@Check(`\"stars\" BETWEEN 1 AND 5`)\nexport class ReviewsEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(() => UserEntity, (user) => user.reviews, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_reviews_user_id' })\n  user: UserEntity;\n\n  @ManyToOne(() => PartnerEntity, (partner) => partner.reviews, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({ name: 'partner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_partner_user_id' })\n  partner: PartnerEntity;\n\n  @Column({ type: 'int', width: 1 })\n  stars: number;\n\n  @Column()\n  comment: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/ReviewsModule.html': {
      url: 'modules/ReviewsModule.html',
      title: 'module - ReviewsModule',
      body: '\n                   \n\n\n\n\n    Modules\n    ReviewsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class ReviewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'entities/RoleEntity.html': {
      url: 'entities/RoleEntity.html',
      title: 'entity - RoleEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  RoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/roles/entities/roles.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                team_members\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/roles/entities/roles.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/roles/entities/roles.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        team_members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamMemberEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, teamMember => teamMember.members)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/roles/entities/roles.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\nimport { TeamMemberEntity } from '../../teams/entities/team-member.entity';\n\n@Entity({\n  name: 'roles',\n})\nexport class RoleEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  role: string;\n\n  @ManyToMany(() => TeamMemberEntity, (teamMember) => teamMember.members)\n  team_members: TeamMemberEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'guards/RolesGuard.html': {
      url: 'guards/RolesGuard.html',
      title: 'guard - RolesGuard',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guards/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/guards/roles.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { ROLES_KEY } from '../decorators/role.decorator';\nimport { ROLES_ENUM } from '../enums/roles.enum';\n\n@Injectable()\nexport default class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (!requiredRoles) {\n      throw true;\n    }\n\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/RolesModule.html': {
      url: 'modules/RolesModule.html',
      title: 'module - RolesModule',
      body: '\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService\n\nRolesService\n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\nimport { RolesService } from \'./roles.service\';\n\n@Module({\n  providers: [RolesService]\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'injectables/RolesService.html': {
      url: 'injectables/RolesService.html',
      title: 'injectable - RolesService',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/roles/roles.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from \'@nestjs/common\';\n\n@Injectable()\nexport class RolesService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/SetPartnerProfileDto.html': {
      url: 'classes/SetPartnerProfileDto.html',
      title: 'class - SetPartnerProfileDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPartnerProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/dtos/set-partner-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                complement\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                postal_code\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Category should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'City should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        complement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Complement should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Country should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Description should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Phone should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postal_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Postal code should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'State should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Street should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         THEME_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(THEME_ENUM)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/set-partner-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsOptional, IsString } from 'class-validator';\nimport { THEME_ENUM } from '../../../enums/theme.enum';\n\nexport class SetPartnerProfileDto {\n  @IsOptional()\n  @IsString({ message: 'Description should be a string' })\n  description: string;\n\n  @IsOptional()\n  @IsString({ message: 'Category should be a string' })\n  category: string;\n\n  @IsOptional()\n  @IsString({ message: 'Street should be a string' })\n  street: string;\n\n  @IsOptional()\n  @IsString({ message: 'City should be a string' })\n  city: string;\n\n  @IsOptional()\n  @IsString({ message: 'State should be a string' })\n  state: string;\n\n  @IsOptional()\n  @IsString({ message: 'Postal code should be a string' })\n  postal_code: string;\n\n  @IsOptional()\n  @IsString({ message: 'Country should be a string' })\n  country: string;\n\n  @IsOptional()\n  @IsString({ message: 'Complement should be a string' })\n  complement?: string;\n\n  @IsOptional()\n  @IsString({ message: 'Phone should be a string' })\n  phone: string;\n\n  @IsOptional()\n  @IsEnum(THEME_ENUM)\n  theme: THEME_ENUM;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/SetUserProfileDto.html': {
      url: 'classes/SetUserProfileDto.html',
      title: 'class - SetUserProfileDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUserProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/dtos/set-user-profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                birth_date\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                complement\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                postal_code\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                state\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        birth_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate({message: 'Invalida birth date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'City should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        complement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Complement should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Country should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'First name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         USER_GENDER_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Street should be a string'})@IsEnum(USER_GENDER_ENUM, {message: 'Invalid gender'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Last name is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Phone is should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        postal_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Street should be a string'})@Length(5, 10, {message: 'Postal code max size is 10'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'State should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'Street should be a string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-profile.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsEnum, IsNotEmpty, IsOptional, IsString, IsUUID, Length } from 'class-validator';\nimport { USER_GENDER_ENUM } from '../user.enum.dto';\n\nexport class SetUserProfileDto {\n  @IsNotEmpty({ message: 'First name is required' })\n  first_name: string;\n\n  @IsNotEmpty({ message: 'Last name is required' })\n  last_name: string;\n\n  @IsOptional()\n  @IsString({ message: 'Street should be a string' })\n  street?: string;\n\n  @IsOptional()\n  @IsString({ message: 'City should be a string' })\n  city?: string;\n\n  @IsOptional()\n  @IsString({ message: 'State should be a string' })\n  state?: string;\n\n  @IsOptional()\n  @IsString({ message: 'Street should be a string' })\n  @Length(5, 10, { message: 'Postal code max size is 10' })\n  postal_code?: string;\n\n  @IsOptional()\n  @IsString({ message: 'Country should be a string' })\n  country?: string;\n\n  @IsOptional()\n  @IsString({ message: 'Complement should be a string' })\n  complement?: string;\n\n  @IsOptional()\n  @IsString({ message: 'Street should be a string' })\n  @IsEnum(USER_GENDER_ENUM, { message: 'Invalid gender' })\n  gender: USER_GENDER_ENUM;\n\n  @IsOptional()\n  @IsDate({ message: 'Invalida birth date' })\n  birth_date: Date;\n\n  @IsOptional()\n  @IsString({ message: 'Phone is should be a string' })\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/SetUserSettingsDto.html': {
      url: 'classes/SetUserSettingsDto.html',
      title: 'class - SetUserSettingsDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetUserSettingsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/dtos/set-user-settings.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                locale\n                            \n                            \n                                    \n                                    \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        locale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LOCALES_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Language is required'})@IsEnum(LOCALES_ENUM, {message: 'Language is invalid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-settings.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         THEME_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Theme is required'})@IsEnum(THEME_ENUM, {message: 'Theme is invalid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/set-user-settings.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty } from 'class-validator';\nimport { THEME_ENUM } from '../../../enums/theme.enum';\nimport { LOCALES_ENUM } from '../../../enums/locales.enum';\n\nexport class SetUserSettingsDto {\n  @IsNotEmpty({ message: 'Theme is required' })\n  @IsEnum(THEME_ENUM, { message: 'Theme is invalid' })\n  theme: THEME_ENUM;\n\n  @IsNotEmpty({ message: 'Language is required' })\n  @IsEnum(LOCALES_ENUM, { message: 'Language is invalid' })\n  locale: LOCALES_ENUM;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/SignUpDto.html': {
      url: 'classes/SignUpDto.html',
      title: 'class - SignUpDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/auth/dtos/signup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                partner_id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email is required'})@IsEmail({}, {message: 'It doesn't look an email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/signup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsUUID('4', {message: 'Partner should be an UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/signup.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})@IsString({message: 'Password should be a String'})@Matches(PassRegex.LOWERCASE, {message: 'Password must contain at least one lowercase letter'})@Matches(PassRegex.NUMBER, {message: 'Password must contain at least one number'})@Matches(PassRegex.SPECIAL_CHAR, {message: 'Password must contain at least one special character'})@Matches(PassRegex.UPPERCASE, {message: 'Password must contain at least one uppercase letter'})@Matches(PassRegex.MIN_8, {message: 'Password must be at least 8 characters long'})@Matches(PassRegex.MAX_16, {message: 'Password must be at most 16 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/signup.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString, IsUUID, Matches, Max, MaxLength, Min } from 'class-validator';\nimport { PassRegex } from '../auth-pass.rules';\n\nexport class SignUpDto {\n  @IsNotEmpty({ message: 'Email is required' })\n  @IsEmail({}, { message: \"It doesn't look an email\" })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  @IsString({ message: 'Password should be a String' })\n  @Matches(PassRegex.LOWERCASE, {\n    message: 'Password must contain at least one lowercase letter',\n  })\n  @Matches(PassRegex.NUMBER, {\n    message: 'Password must contain at least one number',\n  })\n  @Matches(PassRegex.SPECIAL_CHAR, {\n    message: 'Password must contain at least one special character',\n  })\n  @Matches(PassRegex.UPPERCASE, {\n    message: 'Password must contain at least one uppercase letter',\n  })\n  @Matches(PassRegex.MIN_8, {\n    message: 'Password must be at least 8 characters long',\n  })\n  @Matches(PassRegex.MAX_16, {\n    message: 'Password must be at most 16 characters long',\n  })\n  password: string;\n\n  @IsOptional()\n  @IsUUID('4', { message: 'Partner should be an UUID' })\n  partner_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/SignUpPartnerDto.html': {
      url: 'classes/SignUpPartnerDto.html',
      title: 'class - SignUpPartnerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpPartnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/auth/dtos/signup-partner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                first_name\n                            \n                            \n                                    \n                                    \n                                    \n                                last_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email is required'})@IsEmail({}, {message: 'It doesn't look an email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/signup-partner.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'First name is Required'})@IsString({message: 'First name should be a String'})@MaxLength(20, {message: 'First name max length is 20'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/signup-partner.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Last name is Required'})@IsString({message: 'Last name should be a String'})@MaxLength(20, {message: 'Last name max length is 20'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/signup-partner.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password is required'})@IsString({message: 'Password should be a String'})@Matches(PassRegex.LOWERCASE, {message: 'Password must contain at least one lowercase letter'})@Matches(PassRegex.NUMBER, {message: 'Password must contain at least one number'})@Matches(PassRegex.SPECIAL_CHAR, {message: 'Password must contain at least one special character'})@Matches(PassRegex.UPPERCASE, {message: 'Password must contain at least one uppercase letter'})@Matches(PassRegex.MIN_8, {message: 'Password must be at least 8 characters long'})@Matches(PassRegex.MAX_16, {message: 'Password must be at most 16 characters long'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/auth/dtos/signup-partner.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, Matches, MaxLength } from 'class-validator';\nimport { PassRegex } from '../auth-pass.rules';\n\nexport class SignUpPartnerDto {\n  @IsNotEmpty({ message: 'First name is Required' })\n  @IsString({ message: 'First name should be a String' })\n  @MaxLength(20, { message: 'First name max length is 20' })\n  first_name: string;\n\n  @IsNotEmpty({ message: 'Last name is Required' })\n  @IsString({ message: 'Last name should be a String' })\n  @MaxLength(20, { message: 'Last name max length is 20' })\n  last_name: string;\n\n  @IsNotEmpty({ message: 'Email is required' })\n  @IsEmail({}, { message: \"It doesn't look an email\" })\n  email: string;\n\n  @IsNotEmpty({ message: 'Password is required' })\n  @IsString({ message: 'Password should be a String' })\n  @Matches(PassRegex.LOWERCASE, {\n    message: 'Password must contain at least one lowercase letter',\n  })\n  @Matches(PassRegex.NUMBER, {\n    message: 'Password must contain at least one number',\n  })\n  @Matches(PassRegex.SPECIAL_CHAR, {\n    message: 'Password must contain at least one special character',\n  })\n  @Matches(PassRegex.UPPERCASE, {\n    message: 'Password must contain at least one uppercase letter',\n  })\n  @Matches(PassRegex.MIN_8, {\n    message: 'Password must be at least 8 characters long',\n  })\n  @Matches(PassRegex.MAX_16, {\n    message: 'Password must be at most 16 characters long',\n  })\n  password: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/SoftFieldsForEntities.html': {
      url: 'classes/SoftFieldsForEntities.html',
      title: 'class - SoftFieldsForEntities',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftFieldsForEntities\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/soft-fields-for-entities.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                created_at\n                            \n                            \n                                    \n                                    Optional\n                                deleted_at\n                            \n                            \n                                    \n                                    Optional\n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        created_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/soft-fields-for-entities.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deleted_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/soft-fields-for-entities.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        updated_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', onUpdate: 'CURRENT_TIMESTAMP(6)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/soft-fields-for-entities.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  UpdateDateColumn,\n  DeleteDateColumn,\n  BaseEntity,\n} from 'typeorm';\n\nexport class SoftFieldsForEntities {\n  @CreateDateColumn({\n    type: 'timestamp',\n    default: () => 'CURRENT_TIMESTAMP(6)',\n  })\n  created_at?: Date;\n\n  @UpdateDateColumn({\n    type: 'timestamp',\n    onUpdate: 'CURRENT_TIMESTAMP(6)',\n  })\n  updated_at?: Date;\n\n  @DeleteDateColumn({\n    type: 'timestamp',\n  })\n  deleted_at?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/StripePaymentGateway.html': {
      url: 'injectables/StripePaymentGateway.html',
      title: 'injectable - StripePaymentGateway',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StripePaymentGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/implementations/stripe-payment.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stripe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                chargeCustomer\n                            \n                            \n                                    Async\n                                createCustomer\n                            \n                            \n                                    Async\n                                createSubscription\n                            \n                            \n                                    Async\n                                updateCustomer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/apps/payment-gateway/implementations/stripe-payment.gateway.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        chargeCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    chargeCustomer(customerId: string, amount: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/implementations/stripe-payment.gateway.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                amount\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCustomer(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/implementations/stripe-payment.gateway.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCustomerDto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createSubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    createSubscription(createSubscriptionDto: CreateSubscriptionDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/implementations/stripe-payment.gateway.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriptionDto\n                                            \n                                                            CreateSubscriptionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCustomer\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCustomer(stripUserId: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/payment-gateway/implementations/stripe-payment.gateway.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stripUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise<>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stripe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Stripe\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/implementations/stripe-payment.gateway.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport Stripe from 'stripe';\nimport { PaymentGatewayInterface } from '../intefaces/payment-gateway.interface';\nimport { CreateCustomerDto } from '../dtos/create-customer.dto';\nimport { UpdateCustomerDto } from '../dtos/update-customer.dto';\nimport { CreateSubscriptionDto } from '../dtos/create-subscription.dto';\n\n@Injectable()\nexport class StripePaymentGateway implements PaymentGatewayInterface {\n  private stripe: Stripe;\n\n  constructor() {\n    this.stripe = new Stripe(process.env.STRIPE_SECRET_KEY, {\n      apiVersion: '2024-10-28.acacia',\n    });\n  }\n\n  async createCustomer(createCustomerDto: CreateCustomerDto): Promise {\n    return await this.stripe.customers.create({\n      name: createCustomerDto.name,\n      email: createCustomerDto.email,\n      phone: createCustomerDto.phone,\n      address: createCustomerDto.address,\n      payment_method: createCustomerDto.payment_method,\n      invoice_settings: createCustomerDto.invoice_settings,\n      metadata: createCustomerDto.metadata,\n      description: createCustomerDto.description,\n      tax_exempt: createCustomerDto.tax_exempt,\n      coupon: createCustomerDto.coupon,\n    });\n  }\n\n  async updateCustomer(\n    stripUserId: string,\n    updateCustomerDto: UpdateCustomerDto,\n  ): Promise {\n    return await this.stripe.customers.update(stripUserId, updateCustomerDto);\n  }\n\n  async createSubscription(\n    createSubscriptionDto: CreateSubscriptionDto,\n  ): Promise {\n    return await this.stripe.subscriptions.create(createSubscriptionDto);\n  }\n  async chargeCustomer(customerId: string, amount: number): Promise {\n    // Here, you would implement the charging logic with Stripe\n    return await this.stripe.paymentIntents.create({\n      customer: customerId,\n      amount: amount * 100, // convert to cents\n      currency: 'usd',\n      payment_method_types: ['card'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/SubscriberEntity.html': {
      url: 'entities/SubscriberEntity.html',
      title: 'entity - SubscriberEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  SubscriberEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/subscribers/entities/subscribers.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                partner\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/subscribers/entities/subscribers.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, partner => partner.subscribers, {onDelete: 'CASCADE'})@JoinColumn({name: 'partner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_subscribers_partner_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/subscribers/entities/subscribers.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.subscriptions, {onDelete: 'CASCADE'})@JoinColumn({name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_subscribers_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/subscribers/entities/subscribers.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, JoinColumn, ManyToOne, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\nimport { PartnerEntity } from '../../partners/entities/partner.entity';\nimport { UserEntity } from '../../users/entities/user.entity';\n\n@Entity({\n  name: 'subscribers',\n})\nexport class SubscriberEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => UserEntity, (user) => user.subscriptions, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({ name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_subscribers_user_id' })\n  user: UserEntity;\n\n  @ManyToOne(() => PartnerEntity, (partner) => partner.subscribers, {\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({ name: 'partner_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_subscribers_partner_id' })\n  partner: PartnerEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/SubscribersModule.html': {
      url: 'modules/SubscribersModule.html',
      title: 'module - SubscribersModule',
      body: '\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'entities/TagEntity.html': {
      url: 'entities/TagEntity.html',
      title: 'entity - TagEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  TagEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/tags/entities/tags.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/tags/entities/tags.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/tags/entities/tags.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\n\n@Entity({\n  name: 'tags',\n})\nexport class TagEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({\n    length: 20,\n  })\n  tag: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/TagsModule.html': {
      url: 'modules/TagsModule.html',
      title: 'module - TagsModule',
      body: '\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/tags/tags.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'entities/TeamMemberEntity.html': {
      url: 'entities/TeamMemberEntity.html',
      title: 'entity - TeamMemberEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  TeamMemberEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/teams/entities/team-member.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                members\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                team\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/team-member.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.teams, {onDelete: 'CASCADE'})@JoinColumn({name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_team_member_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/team-member.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, roles => roles.team_members)@JoinTable({name: 'team_members_roles', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/team-member.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamsEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, team => team.members, {onDelete: 'CASCADE'})@JoinColumn({name: 'team_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_team_member_tem_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/team-member.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { TeamsEntity } from './teams.entity';\nimport { UserEntity } from '../../users/entities/user.entity';\nimport { RoleEntity } from '../../roles/entities/roles.entity';\n\n@Entity({\n  name: 'team_members',\n})\nexport class TeamMemberEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @ManyToOne(() => TeamsEntity, (team) => team.members, { onDelete: 'CASCADE' })\n  @JoinColumn({\n    name: 'team_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_team_member_tem_id',\n  })\n  team: TeamsEntity;\n\n  @ManyToOne(() => UserEntity, (user) => user.teams, { onDelete: 'CASCADE' })\n  @JoinColumn({\n    name: 'user_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_team_member_user_id',\n  })\n  members: UserEntity;\n\n  @ManyToMany(() => RoleEntity, (roles) => roles.team_members)\n  @JoinTable({\n    name: 'team_members_roles',\n    joinColumn: {\n      name: 'team_member_id',\n      referencedColumnName: 'id',\n      foreignKeyConstraintName: 'fk_team_member_id',\n    },\n    inverseJoinColumn: {\n      name: 'role_id',\n      referencedColumnName: 'id',\n      foreignKeyConstraintName: 'fk_team_member_role_id',\n    },\n  })\n  roles: RoleEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/TeamsEntity.html': {
      url: 'entities/TeamsEntity.html',
      title: 'entity - TeamsEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  TeamsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/teams/entities/teams.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                members\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                partner\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/teams.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamMemberEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, teamMeamber => teamMeamber.id)@JoinColumn({name: 'team_memebers_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_team_members_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/teams.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/teams.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, partner => partner.teams)@JoinColumn({name: 'partner_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/entities/teams.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  OneToOne,\n  PrimaryGeneratedColumn,\n} from 'typeorm';\nimport { PartnerEntity } from '../../partners/entities/partner.entity';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\nimport { TeamMemberEntity } from './team-member.entity';\n\n@Entity({\n  name: 'teams',\n})\nexport class TeamsEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  name: string;\n\n  @ManyToOne(() => PartnerEntity, (partner) => partner.teams)\n  @JoinColumn({ name: 'partner_id' })\n  partner: PartnerEntity;\n\n  @OneToMany(() => TeamMemberEntity, (teamMeamber) => teamMeamber.id)\n  @JoinColumn({\n    name: 'team_memebers_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_team_members_id',\n  })\n  members: TeamMemberEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/TeamsModule.html': {
      url: 'modules/TeamsModule.html',
      title: 'module - TeamsModule',
      body: "\n                   \n\n\n\n\n    Modules\n    TeamsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_providers\n\n\n\ncluster_TeamsModule_exports\n\n\n\n\nTeamsService \n\nTeamsService \n\n\n\nTeamsModule\n\nTeamsModule\n\nTeamsService  -->\n\nTeamsModule->TeamsService \n\n\n\n\n\nTeamsService\n\nTeamsService\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/teams/teams.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TeamsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TeamsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TeamsService } from './teams.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TeamsEntity } from './entities/teams.entity';\nimport { PartnersModule } from '../partners/partners.module';\nimport { TeamMemberEntity } from './entities/team-member.entity';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([TeamsEntity, TeamMemberEntity])],\n  providers: [TeamsService],\n  exports: [TeamsService],\n})\nexport class TeamsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/TeamsService.html': {
      url: 'injectables/TeamsService.html',
      title: 'injectable - TeamsService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/teams/teams.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMembers\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getMembers\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamsRepository: Repository, teamMemberRepository: Repository, i18n: CustomI18nService)\n                    \n                \n                        \n                            \n                                Defined in src/apps/teams/teams.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamMemberRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        CustomI18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addMembers\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMembers(currentUser: UserEntity, teamId: string, addTeamMembersDto: AddteamMemberDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/teams/teams.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                addTeamMembersDto\n                                            \n                                                            AddteamMemberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(user: UserEntity, partner: PartnerEntity, createTeamDto: CreateTeamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/teams/teams.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Create a team for a partner\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partner\n                                            \n                                                            PartnerEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createTeamDto\n                                            \n                                                            CreateTeamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(partnerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/teams/teams.service.ts:61\n                        \n                    \n\n\n            \n                \n                        Return all teams from a partner\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/teams/teams.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Find a team by Team Id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMembers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMembers(partnerId: string, teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/teams/teams.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(currentUser: UserEntity, updateTeamsDto: UpdateTeamDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/teams/teams.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Update a partner team\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTeamsDto\n                                            \n                                                            UpdateTeamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TeamsEntity } from './entities/teams.entity';\nimport { Repository } from 'typeorm';\nimport { CustomI18nService } from '../i18n/i18n.service';\nimport { CreateTeamDto } from './dtos/create-team.dto';\nimport { PartnersService } from '../partners/partners.service';\nimport { UserEntity } from '../users/entities/user.entity';\nimport { UpdateTeamDto } from './dtos/update-team.dto';\nimport { TeamMemberEntity } from './entities/team-member.entity';\nimport { UsersService } from '../users/users.service';\nimport { AddteamMemberDto } from './dtos/add-team-member.dto';\nimport { PartnerEntity } from '../partners/entities/partner.entity';\n\n@Injectable()\nexport class TeamsService {\n  constructor(\n    @InjectRepository(TeamsEntity)\n    private readonly teamsRepository: Repository,\n    @InjectRepository(TeamMemberEntity)\n    private readonly teamMemberRepository: Repository,\n\n    private readonly i18n: CustomI18nService,\n  ) {}\n\n  /**\n   * Create a team for a partner\n   * @param currentUser\n   * @param createTeamDto\n   * @returns\n   */\n  async create(user: UserEntity, partner: PartnerEntity, createTeamDto: CreateTeamDto) {\n    const newTeam = this.teamsRepository.create({\n      partner: partner,\n      name: createTeamDto.name,\n    });\n    return await this.teamsRepository.save(newTeam);\n  }\n\n  /**\n   * Update a partner team\n   * @param currentUser\n   * @param updateTeamsDto\n   * @returns\n   */\n  async update(currentUser: UserEntity, updateTeamsDto: UpdateTeamDto): Promise {\n    const updateResult = await this.teamsRepository.update(updateTeamsDto.team_id, {\n      name: updateTeamsDto.name,\n    });\n\n    if (updateResult.affected > 0) {\n      return await this.findById(updateTeamsDto.team_id);\n    }\n  }\n\n  /**\n   * Return all teams from a partner\n   * @param partner id\n   * @returns\n   */\n  async findAll(partnerId: string): Promise {\n    return this.teamsRepository.find({\n      where: {\n        partner: {\n          id: partnerId,\n        },\n      },\n    });\n  }\n  /**\n   * Find a team by Team Id\n   * @param id\n   * @returns\n   */\n  async findById(id: string): Promise {\n    return await this.teamsRepository.findOne({\n      where: {\n        partner: {\n          id,\n        },\n      },\n    });\n  }\n\n  async addMembers(currentUser: UserEntity, teamId: string, addTeamMembersDto: AddteamMemberDto) {\n    const teamFromDb = await this.findById(teamId);\n\n    if (!teamFromDb) throw new Error(this.i18n.t('teams.validations.not_found'));\n\n    let newEntities: TeamMemberEntity[] = [];\n    for (const teamMember of addTeamMembersDto.members) {\n      const teamMemberPayload: Partial = {\n        members: teamMember,\n        team: teamFromDb,\n      };\n      const newTeamMember = this.teamMemberRepository.create(teamMemberPayload);\n      newEntities.push(newTeamMember);\n    }\n\n    return await this.teamMemberRepository.save(newEntities);\n  }\n\n  async getMembers(partnerId: string, teamId: string): Promise {\n    return this.teamMemberRepository.find({\n      where: {\n        team: {\n          id: teamId,\n          partner: {\n            id: partnerId,\n          },\n        },\n      },\n      relations: {\n        members: true,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/TransactionsModule.html': {
      url: 'modules/TransactionsModule.html',
      title: 'module - TransactionsModule',
      body: '\n                   \n\n\n\n\n    Modules\n    TransactionsModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/transactions/transactions.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \'@nestjs/common\';\n\n@Module({})\nexport class TransactionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UnfollowPartnerDto.html': {
      url: 'classes/UnfollowPartnerDto.html',
      title: 'class - UnfollowPartnerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnfollowPartnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/followers/dtos/unfollow-partner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                partner\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        partner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Partner is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/followers/dtos/unfollow-partner.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'User is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/followers/dtos/unfollow-partner.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { UserEntity } from '../../users/entities/user.entity';\n\nexport class UnfollowPartnerDto {\n  @IsNotEmpty({ message: 'User is required' })\n  user: string;\n\n  @IsNotEmpty({ message: 'Partner is required' })\n  partner: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateCustomerDto.html': {
      url: 'classes/UpdateCustomerDto.html',
      title: 'class - UpdateCustomerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/payment-gateway/dtos/update-customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                coupon\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                invoice_settings\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                payment_method\n                            \n                            \n                                    Optional\n                                phone\n                            \n                            \n                                    Optional\n                                preferred_locales\n                            \n                            \n                                    Optional\n                                tax_exempt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomerAddressInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        invoice_settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InvoiceSettingsInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        metadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomerMetadataInterface\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        payment_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        preferred_locales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tax_exempt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"none\" | \"exempt\" | \"reverse\"\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/payment-gateway/dtos/update-customer.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CustomerAddressInterface } from '../intefaces/customer-adress.inteface';\nimport { InvoiceSettingsInterface } from '../intefaces/customer-invoice-settings.interface';\nimport { CustomerMetadataInterface } from '../intefaces/customer-metadata.interface';\n\nexport class UpdateCustomerDto {\n  name: string;\n  phone?: string;\n  address?: CustomerAddressInterface;\n  payment_method?: string;\n  invoice_settings?: InvoiceSettingsInterface;\n  metadata?: CustomerMetadataInterface;\n  description?: string;\n  preferred_locales?: string[];\n  tax_exempt?: 'none' | 'exempt' | 'reverse';\n  coupon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateFileDto.html': {
      url: 'classes/UpdateFileDto.html',
      title: 'class - UpdateFileDto',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/files/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateFileDto } from \'./create-file.dto\';\n\nexport class UpdateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'classes/UpdatePartnerDto.html': {
      url: 'classes/UpdatePartnerDto.html',
      title: 'class - UpdatePartnerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePartnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/partners/dtos/update-partner.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                legal_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        legal_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Partner name is required'})@IsString({message: 'Partner Name should be a String'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/partners/dtos/update-partner.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { CreatePartnerDto } from './create-partner.dto';\n\nexport class UpdatePartnerDto implements Partial {\n  @IsNotEmpty({ message: 'Partner name is required' })\n  @IsString({ message: 'Partner Name should be a String' })\n  legal_name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateTeamDto.html': {
      url: 'classes/UpdateTeamDto.html',
      title: 'class - UpdateTeamDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/teams/dtos/update-team.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                partner_id\n                            \n                            \n                                    \n                                team_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/dtos/update-team.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Partner id is requied'})@IsUUID('4', {message: 'Invalid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/dtos/update-team.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        team_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Team id is required'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/teams/dtos/update-team.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsUUID } from 'class-validator';\n\nexport class UpdateTeamDto {\n  @IsNotEmpty({ message: 'Team id is required' })\n  team_id: string;\n\n  @IsOptional()\n  name: string;\n\n  @IsNotEmpty({ message: 'Partner id is requied' })\n  @IsUUID('4', { message: 'Invalid UUID' })\n  partner_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UpdateUserDto.html': {
      url: 'classes/UpdateUserDto.html',
      title: 'class - UpdateUserDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/dtos/update-user.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Partial\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user_gateway_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user_gateway_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/update-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { CreateUserDto } from './create-user.dto';\nimport { i18nValidationMessage } from 'nestjs-i18n';\n\nexport class UpdateUserDto implements Partial {\n  user_gateway_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/UserEntity.html': {
      url: 'entities/UserEntity.html',
      title: 'entity - UserEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                follows\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                partners\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                profile\n                            \n                            \n                                    \n                                    \n                                recover_pass_token\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refresh_token\n                            \n                            \n                                    \n                                reviews\n                            \n                            \n                                    \n                                    \n                                settings\n                            \n                            \n                                    \n                                subscriptions\n                            \n                            \n                                    \n                                    \n                                tags\n                            \n                            \n                                    \n                                teams\n                            \n                            \n                                    \n                                    \n                                user_gateway_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        follows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FollowerEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, follows => follows.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        partners\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PartnerEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, partner => partner.owners)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfileEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true})@JoinColumn({name: 'profile_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_user_profile_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        recover_pass_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        reviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReviewsEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, reviews => reviews.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSettingsEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, {cascade: true})@JoinColumn({name: 'settings_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_user_settings_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SubscriberEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, subscriptions => subscriptions.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'users_tags', joinColumn: undefined, inverseJoinColumn: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        teams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamsEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, teams => teams.members)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_gateway_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport {\n  Entity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToOne,\n  BeforeInsert,\n  OneToMany,\n  ManyToMany,\n  JoinTable,\n  ManyToOne,\n  JoinColumn,\n} from 'typeorm';\nimport { generateHash, compareHash } from '../../../utils/encryption';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\nimport { UserProfileEntity } from './user-profile.entity';\nimport { UserSettingsEntity } from './user-settings.entity';\nimport { SubscriberEntity } from '../../subscribers/entities/subscribers.entity';\nimport { FollowerEntity } from '../../followers/entities/followers.entity';\nimport { ReviewsEntity } from '../../reviews/entities/reviews.entity';\nimport { TagEntity } from '../../tags/entities/tags.entity';\nimport { PartnerEntity } from '../../partners/entities/partner.entity';\nimport { TeamsEntity } from '../../teams/entities/teams.entity';\n\n@Entity({\n  name: 'users',\n})\nexport class UserEntity extends SoftFieldsForEntities {\n  constructor(id?: string) {\n    super();\n    this.id = id;\n  }\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Exclude()\n  @Column()\n  password: string;\n\n  @Exclude()\n  @Column({ nullable: true })\n  refresh_token?: string;\n\n  @Exclude()\n  @Column({ nullable: true })\n  recover_pass_token: string;\n\n  @Exclude()\n  @Column({ nullable: true })\n  user_gateway_id: string;\n\n  @OneToOne(() => UserProfileEntity, { cascade: true })\n  @JoinColumn({\n    name: 'profile_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_user_profile_id',\n  })\n  profile: UserProfileEntity;\n\n  @OneToOne(() => UserSettingsEntity, { cascade: true })\n  @JoinColumn({\n    name: 'settings_id',\n    referencedColumnName: 'id',\n    foreignKeyConstraintName: 'fk_user_settings_id',\n  })\n  settings: UserSettingsEntity;\n\n  @OneToMany(() => SubscriberEntity, (subscriptions) => subscriptions.user)\n  subscriptions: SubscriberEntity[];\n\n  @OneToMany(() => FollowerEntity, (follows) => follows.user)\n  follows: FollowerEntity[];\n\n  @OneToMany(() => ReviewsEntity, (reviews) => reviews.user)\n  reviews: ReviewsEntity[];\n\n  @ManyToMany(() => TagEntity)\n  @JoinTable({\n    name: 'users_tags',\n    joinColumn: {\n      name: 'user_id',\n      referencedColumnName: 'id',\n    },\n    inverseJoinColumn: {\n      name: 'tag_id',\n      referencedColumnName: 'id',\n    },\n  })\n  tags: TagEntity;\n\n  @ManyToMany(() => PartnerEntity, (partner) => partner.owners)\n  partners: PartnerEntity[];\n\n  @ManyToMany(() => TeamsEntity, (teams) => teams.members)\n  teams: TeamsEntity[];\n\n  @BeforeInsert()\n  encryptPass() {\n    if (!this.password) return;\n\n    const hash = generateHash(this.password);\n\n    this.password = hash;\n  }\n\n  checkPassword(password: string): boolean {\n    return compareHash(password, this.password);\n  }\n\n  checkRecoverPass(token: string): boolean {\n    return compareHash(token, this.recover_pass_token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'classes/UserFollowPartnerDto.html': {
      url: 'classes/UserFollowPartnerDto.html',
      title: 'class - UserFollowPartnerDto',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFollowPartnerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/dtos/user-follow-partner.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                partner_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        partner_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Partner is required'})@IsUUID('4', {message: 'Invalid UUID'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/dtos/user-follow-partner.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsUUID } from 'class-validator';\n\nexport class UserFollowPartnerDto {\n  @IsNotEmpty({ message: 'Partner is required' })\n  @IsUUID('4', { message: 'Invalid UUID' })\n  partner_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/UserProfileEntity.html': {
      url: 'entities/UserProfileEntity.html',
      title: 'entity - UserProfileEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  UserProfileEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/entities/user-profile.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                birth_date\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                    Optional\n                                complement\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                first_name\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                last_name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                photo\n                            \n                            \n                                    \n                                postal_code\n                            \n                            \n                                    \n                                state\n                            \n                            \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birth_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'date', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        complement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         USER_GENDER_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: USER_GENDER_ENUM, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, file => file.id, {nullable: true})@JoinColumn({name: 'avatar_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_photo_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postal_code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 10, nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-profile.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToOne, PrimaryGeneratedColumn, Unique } from 'typeorm';\nimport { UserEntity } from './user.entity';\nimport { FileEntity } from '../../files/entities/file.entity';\nimport { USER_GENDER_ENUM } from '../user.enum.dto';\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\n@Entity({\n  name: 'user_profile',\n})\n@Unique(['user'])\nexport class UserProfileEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n  @OneToOne(() => UserEntity)\n  @JoinColumn({ name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_user_id' })\n  user: UserEntity;\n\n  @Column()\n  first_name: string;\n\n  @Column()\n  last_name: string;\n\n  @Column({ nullable: true })\n  street: string;\n\n  @Column({ nullable: true })\n  city: string;\n\n  @Column({ nullable: true })\n  state: string;\n\n  @Column({ length: 10, nullable: true })\n  postal_code: string;\n\n  @Column({ nullable: true })\n  country: string;\n\n  @Column({ nullable: true })\n  complement?: string;\n\n  @Column()\n  phone: string;\n\n  @Column({\n    type: 'enum',\n    enum: USER_GENDER_ENUM,\n    nullable: true,\n  })\n  gender: USER_GENDER_ENUM;\n\n  @Column({\n    type: 'date',\n    nullable: true,\n  })\n  birth_date: Date;\n\n  @OneToOne(() => FileEntity, (file) => file.id, { nullable: true })\n  @JoinColumn({ name: 'avatar_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_photo_id' })\n  photo: File;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'entities/UserSettingsEntity.html': {
      url: 'entities/UserSettingsEntity.html',
      title: 'entity - UserSettingsEntity',
      body: "\n                   \n\n\n\n\n\n\n\n  Entities\n  UserSettingsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/entities/user-settings.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                locale\n                            \n                            \n                                    \n                                theme\n                            \n                            \n                                    \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-settings.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LOCALES_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: LOCALES_ENUM, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-settings.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         THEME_ENUM\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: THEME_ENUM, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-settings.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined)@JoinColumn({name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_user_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/apps/users/entities/user-settings.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, OneToMany, OneToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { UserEntity } from './user.entity';\n\nimport { SoftFieldsForEntities } from '../../../utils/soft-fields-for-entities';\nimport { THEME_ENUM } from '../../../enums/theme.enum';\n\nimport { LOCALES_ENUM } from '../../../enums/locales.enum';\n\n@Entity({\n  name: 'user_settings',\n})\nexport class UserSettingsEntity extends SoftFieldsForEntities {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @OneToOne(() => UserEntity)\n  @JoinColumn({ name: 'user_id', referencedColumnName: 'id', foreignKeyConstraintName: 'fk_profile_user_id' })\n  user: UserEntity;\n\n  @Column({\n    type: 'enum',\n    enum: THEME_ENUM,\n    default: THEME_ENUM.LIGHT,\n  })\n  theme: THEME_ENUM;\n\n  @Column({\n    type: 'enum',\n    enum: LOCALES_ENUM,\n    default: LOCALES_ENUM.EN,\n  })\n  locale: LOCALES_ENUM;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'controllers/UsersController.html': {
      url: 'controllers/UsersController.html',
      title: 'controller - UsersController',
      body: "\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findById\n                            \n                            \n                                    \n                                followPartner\n                            \n                            \n                                    \n                                setUserProfile\n                            \n                            \n                                    \n                                setUserSettings\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/apps/users/users.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/users/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        followPartner\n                        \n                    \n                \n            \n            \n                \n                        \n                    followPartner(currentUser: UserEntity, followParnerDto: UserFollowPartnerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('follow')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/users/users.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                followParnerDto\n                                            \n                                                            UserFollowPartnerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserProfile(currentUser: UserEntity, setUserProfileDto: SetUserProfileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/users/users.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setUserProfileDto\n                                            \n                                                            SetUserProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        setUserSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserSettings(currentUser: UserEntity, setUserSettingsDto: SetUserSettingsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('settings')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setUserSettingsDto\n                                            \n                                                            SetUserSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(currentUser: UserEntity, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/apps/users/users.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Get, Param, ParseUUIDPipe, Patch, Post } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UpdateUserDto } from './dtos/update-user.dto';\nimport { CurrentUser } from '../../decorators/current-user.decorator';\nimport { UserEntity } from './entities/user.entity';\nimport { SetUserProfileDto } from './dtos/set-user-profile.dto';\nimport { SetUserSettingsDto } from './dtos/set-user-settings.dto';\nimport { FollowPartnerDto } from '../followers/dtos/follow-partner.dto';\nimport { UserFollowPartnerDto } from './dtos/user-follow-partner.dto';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    try {\n      return this.usersService.create(createUserDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Patch(':id')\n  update(@CurrentUser() currentUser: UserEntity, @Body() updateUserDto: UpdateUserDto) {\n    console.log('here');\n    try {\n      return this.usersService.update(currentUser.id, updateUserDto);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n\n  @Get(':id')\n  findById(@Param('id', new ParseUUIDPipe()) userId: string) {\n    return this.usersService.findById(userId);\n  }\n\n  @Patch('profile')\n  setUserProfile(@CurrentUser() currentUser: UserEntity, @Body() setUserProfileDto: SetUserProfileDto) {\n    return this.usersService.setUserProfile(currentUser, setUserProfileDto);\n  }\n\n  @Patch('settings')\n  setUserSettings(@CurrentUser() currentUser: UserEntity, @Body() setUserSettingsDto: SetUserSettingsDto) {\n    return this.usersService.setUserSettings(currentUser, setUserSettingsDto);\n  }\n\n  @Post('follow')\n  followPartner(@CurrentUser() currentUser: UserEntity, @Body() followParnerDto: UserFollowPartnerDto) {\n    try {\n      return this.usersService.followPartner(currentUser, followParnerDto.partner_id);\n    } catch (error) {\n      throw new BadRequestException(error.message);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'modules/UsersModule.html': {
      url: 'modules/UsersModule.html',
      title: 'module - UsersModule',
      body: "\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nFollowersModule\n\nFollowersModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nFollowersModule->UsersModule\n\n\n\n\n\nPartnersModule\n\nPartnersModule\n\nUsersModule -->\n\nPartnersModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/apps/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FollowersModule\n                        \n                        \n                            PartnersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { UserEntity } from './entities/user.entity';\nimport { PartnersModule } from '../partners/partners.module';\nimport { FollowersModule } from '../followers/followers.module';\nimport { UserProfileEntity } from './entities/user-profile.entity';\nimport { UserSettingsEntity } from './entities/user-settings.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity, UserProfileEntity, UserSettingsEntity]),\n    PartnersModule,\n    FollowersModule,\n  ],\n  controllers: [UsersController],\n  exports: [UsersService],\n  providers: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'injectables/UsersService.html': {
      url: 'injectables/UsersService.html',
      title: 'injectable - UsersService',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/apps/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                followPartner\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                setUserProfile\n                            \n                            \n                                    Async\n                                setUserSettings\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, userProfileRepository: Repository, userSettingsRepository: Repository, partnersService: PartnersService, i18n: CustomI18nService, followService: FollowersService, paymentGatewayService: PaymentGatewayService)\n                    \n                \n                        \n                            \n                                Defined in src/apps/users/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSettingsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        partnersService\n                                                  \n                                                        \n                                                                        PartnersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        i18n\n                                                  \n                                                        \n                                                                        CustomI18nService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        followService\n                                                  \n                                                        \n                                                                        FollowersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        paymentGatewayService\n                                                  \n                                                        \n                                                                        PaymentGatewayService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Create a User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Find a User by Email\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Find a user by Id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        followPartner\n                        \n                    \n                \n            \n            \n                \n                        \n                    followPartner(user: UserEntity, partnerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Follow a partner\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                partnerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Retorna um usuário se refresh token\ninformado coincide com o refresh token\nno banco de dados\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \nremoveRefreshToken(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Remove o refresh token from user for logout porpuses\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCurrentRefreshToken(userId: string, refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Gera um novo refresh token para um\nusuário\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setUserProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserProfile(user: UserEntity, setProfileDto: SetUserProfileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:140\n                        \n                    \n\n\n            \n                \n                        Set a user Profile\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setProfileDto\n                                            \n                                                            SetUserProfileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setUserSettings\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserSettings(user: UserEntity, setUserSettingsDto: SetUserSettingsDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserEntity\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                setUserSettingsDto\n                                            \n                                                            SetUserSettingsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(userId: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/apps/users/users.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Update a User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Promise\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { UpdateUserDto } from './dtos/update-user.dto';\n\nimport { UserEntity } from './entities/user.entity';\nimport { compareHash, generateHash } from '../../utils/encryption';\nimport { PartnersService } from '../partners/partners.service';\nimport { CustomI18nService } from '../i18n/i18n.service';\nimport { FollowersService } from '../followers/followers.service';\nimport { FollowerEntity } from '../followers/entities/followers.entity';\nimport { SetUserProfileDto } from './dtos/set-user-profile.dto';\nimport { UserProfileEntity } from './entities/user-profile.entity';\nimport { SetUserSettingsDto } from './dtos/set-user-settings.dto';\nimport { UserSettingsEntity } from './entities/user-settings.entity';\nimport { PaymentGatewayService } from '../payment-gateway/payment-gateway.service';\nimport { UpdateCustomerDto } from '../payment-gateway/dtos/update-customer.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private readonly userRepository: Repository,\n    @InjectRepository(UserProfileEntity)\n    private readonly userProfileRepository: Repository,\n    @InjectRepository(UserSettingsEntity)\n    private readonly userSettingsRepository: Repository,\n    private readonly partnersService: PartnersService,\n    private readonly i18n: CustomI18nService,\n    @Inject(forwardRef(() => FollowersService))\n    private readonly followService: FollowersService,\n    private readonly paymentGatewayService: PaymentGatewayService,\n  ) {}\n\n  /**\n   * Create a User\n   * @param createUserDto\n   * @returns Promise\n   */\n  create(createUserDto: CreateUserDto): Promise {\n    const newUser = this.userRepository.create(createUserDto);\n    return this.userRepository.save(newUser);\n  }\n\n  /**\n   * Update a User\n   * @param userId\n   * @param updateUserDto\n   * @returns Promise\n   */\n  async update(userId: string, updateUserDto: UpdateUserDto): Promise {\n    const userFromDb = await this.findById(userId);\n\n    if (!userFromDb) throw new Error();\n\n    const updateResult = await this.userRepository.update(userId, { ...updateUserDto });\n    if (updateResult.affected > 0) return await this.findById(userId);\n    throw new Error(this.i18n.t('partners.validations.not_found'));\n  }\n\n  /**\n   * Find a user by Id\n   * @param userId\n   * @returns Promise\n   */\n  findById(userId: string): Promise {\n    return this.userRepository.findOne({ where: { id: userId } });\n  }\n\n  /**\n   * Find a User by Email\n   * @param email\n   * @returns Promise\n   */\n\n  findByEmail(email: string): Promise {\n    return this.userRepository.findOneBy({ email });\n  }\n\n  /**\n   * Retorna um usuário se refresh token\n   * informado coincide com o refresh token\n   * no banco de dados\n   * @param refreshToken\n   * @param userId\n   * @returns {Promise }\n   */\n  async getUserIfRefreshTokenMatches(refreshToken: string, userId: string): Promise {\n    const userFromDb = await this.findById(userId);\n    if (!userFromDb) return false;\n\n    return compareHash(refreshToken, userFromDb.refresh_token);\n  }\n\n  /**\n   * Gera um novo refresh token para um\n   * usuário\n   * @param userId\n   * @param refreshToken\n   * @returns {Promise}\n   */\n  async setCurrentRefreshToken(userId: string, refreshToken: string): Promise {\n    const hash = generateHash(refreshToken);\n\n    return this.userRepository.update(userId, {\n      refresh_token: hash,\n    });\n  }\n\n  /**\n   * Remove o refresh token from user for logout porpuses\n   * @param userId\n   * @returns {Promise}\n   */\n  removeRefreshToken(userId: string): Promise {\n    return this.userRepository.update(userId, {\n      refresh_token: null,\n    });\n  }\n\n  /**\n   * Follow a partner\n   * @param user\n   * @param partnerId\n   * @returns Promise\n   */\n  async followPartner(user: UserEntity, partnerId: string): Promise {\n    const partnerFromDb = await this.partnersService.findById(partnerId);\n    if (!partnerFromDb) throw new Error(this.i18n.t('partners.validations.not_found'));\n    return await this.followService.follow(user, partnerFromDb);\n  }\n\n  /**\n   * Set a user Profile\n   * @param user\n   * @param setProfileDto\n   * @returns\n   */\n  async setUserProfile(user: UserEntity, setProfileDto: SetUserProfileDto): Promise {\n    const gatewayPayload: UpdateCustomerDto = {\n      name: setProfileDto.first_name + ' ' + setProfileDto.last_name,\n      phone: setProfileDto.phone,\n      address: {\n        line1: setProfileDto.street,\n        line2: setProfileDto.complement,\n        city: setProfileDto.city,\n        state: setProfileDto.state,\n        country: setProfileDto.country,\n        postal_code: setProfileDto.postal_code,\n      },\n    };\n    this.paymentGatewayService.updateCustomer(user.user_gateway_id, gatewayPayload);\n\n    const userHasProfile = await this.userProfileRepository.findOne({\n      where: {\n        user: {\n          id: user.id,\n        },\n      },\n    });\n\n    if (userHasProfile) {\n      const updateResult = await this.userProfileRepository.update(userHasProfile.id, setProfileDto);\n      if (updateResult.affected > 0) {\n        return await this.userProfileRepository.findOne({\n          where: {\n            user: {\n              id: user.id,\n            },\n          },\n        });\n      }\n\n      throw new Error(this.i18n.t('users.validations.update_not_found'));\n    }\n\n    const setProfileObj = this.userProfileRepository.create({\n      user,\n      ...setProfileDto,\n    });\n    return this.userProfileRepository.save(setProfileObj);\n  }\n\n  async setUserSettings(user: UserEntity, setUserSettingsDto: SetUserSettingsDto): Promise {\n    const userHasSettings = await this.userSettingsRepository.findOne({\n      where: {\n        user: {\n          id: user.id,\n        },\n      },\n    });\n\n    if (userHasSettings) {\n      const updateResult = await this.userSettingsRepository.update(userHasSettings.id, setUserSettingsDto);\n\n      if (updateResult.affected > 0) {\n        return await this.userSettingsRepository.findOne({\n          where: {\n            user: {\n              id: user.id,\n            },\n          },\n        });\n      }\n\n      throw new Error(this.i18n.t('users.validations.update_not_found'));\n    }\n\n    const newUserSettings = this.userSettingsRepository.create({\n      user,\n      ...setUserSettingsDto,\n    });\n    return this.userSettingsRepository.save(newUserSettings);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    'coverage.html': {
      url: 'coverage.html',
      title: 'coverage - coverage',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/apps/auth/auth-pass.rules.ts\n            \n            variable\n            PassRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apps/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/apps/auth/dtos/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apps/auth/dtos/signup-partner.dto.ts\n            \n            class\n            SignUpPartnerDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/apps/auth/dtos/signup.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apps/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/files/entities/file.entity.ts\n            \n            entity\n            FileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/apps/files/file.constants.ts\n            \n            variable\n            FILE_SERVICE_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/files/file.impl.interface.ts\n            \n            interface\n            FileImplInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/apps/files/file.service.ts\n            \n            injectable\n            FileService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/apps/files/implementations/aws-s3.ts\n            \n            class\n            AWSS3\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/apps/files/implementations/digitalOcean-spaces.ts\n            \n            class\n            DigitalOceanSpaces\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/apps/followers/dtos/follow-partner.dto.ts\n            \n            class\n            FollowPartnerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/apps/followers/dtos/unfollow-partner.dto.ts\n            \n            class\n            UnfollowPartnerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/apps/followers/entities/followers.entity.ts\n            \n            entity\n            FollowerEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/followers/entities/followers.entity.ts\n            \n            class\n            FollowerEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apps/followers/followers.service.ts\n            \n            injectable\n            FollowersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/apps/i18n/i18n.service.ts\n            \n            injectable\n            CustomI18nService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/apps/partners/controllers/partners.controller.ts\n            \n            controller\n            PartnersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/apps/partners/controllers/partners.teams.controller.ts\n            \n            controller\n            PartnerTeamsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/apps/partners/dtos/create-partner.dto.ts\n            \n            class\n            CreatePartnerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/apps/partners/dtos/set-partner-profile.dto.ts\n            \n            class\n            SetPartnerProfileDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/apps/partners/dtos/update-partner.dto.ts\n            \n            class\n            UpdatePartnerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/apps/partners/entities/partner-profile.entity.ts\n            \n            entity\n            PartnerProfileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/partners/entities/partner-settings.entity.ts\n            \n            entity\n            PartnerSettingsEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/partners/entities/partner.entity.ts\n            \n            entity\n            PartnerEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/partners/partners.service.ts\n            \n            injectable\n            PartnersService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/dtos/create-customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/dtos/create-subscription.dto.ts\n            \n            class\n            CreateSubscriptionDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/dtos/update-customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/implementations/stripe-payment.gateway.ts\n            \n            injectable\n            StripePaymentGateway\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/intefaces/customer-adress.inteface.ts\n            \n            interface\n            CustomerAddressInterface\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/intefaces/customer-invoice-settings.interface.ts\n            \n            interface\n            InvoiceSettingsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/intefaces/customer-metadata.interface.ts\n            \n            interface\n            CustomerMetadataInterface\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/intefaces/payment-gateway.interface.ts\n            \n            interface\n            PaymentGatewayInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/payment-gateway.factory.ts\n            \n            injectable\n            PaymentGatewayFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/apps/payment-gateway/payment-gateway.service.ts\n            \n            injectable\n            PaymentGatewayService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/apps/reviews/entities/reviews.entity.ts\n            \n            entity\n            ReviewsEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/reviews/entities/reviews.entity.ts\n            \n            class\n            ReviewsEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/apps/roles/entities/roles.entity.ts\n            \n            entity\n            RoleEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/subscribers/entities/subscribers.entity.ts\n            \n            entity\n            SubscriberEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/tags/entities/tags.entity.ts\n            \n            entity\n            TagEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/teams/dtos/add-team-member.dto.ts\n            \n            class\n            AddteamMemberDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/apps/teams/dtos/create-team.dto.ts\n            \n            class\n            CreateTeamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/apps/teams/dtos/update-team.dto.ts\n            \n            class\n            UpdateTeamDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apps/teams/entities/team-member.entity.ts\n            \n            entity\n            TeamMemberEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/teams/entities/teams.entity.ts\n            \n            entity\n            TeamsEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/teams/teams.service.ts\n            \n            injectable\n            TeamsService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/apps/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/apps/users/dtos/set-user-profile.dto.ts\n            \n            class\n            SetUserProfileDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/apps/users/dtos/set-user-settings.dto.ts\n            \n            class\n            SetUserSettingsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/apps/users/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/apps/users/dtos/user-follow-partner.dto.ts\n            \n            class\n            UserFollowPartnerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/apps/users/entities/user-profile.entity.ts\n            \n            entity\n            UserProfileEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/users/entities/user-profile.entity.ts\n            \n            class\n            UserProfileEntity\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/apps/users/entities/user-settings.entity.ts\n            \n            entity\n            UserSettingsEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/users/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/apps/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/apps/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                        src/decorators/current-partrner.decorator copy.ts\n            \n            variable\n            CurrentPartner\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/role.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorators/role.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/auth-jwt-refresh.guard.ts\n            \n            guard\n            AuthJwtRefreshGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/guards/auth-jwt.guard.ts\n            \n            guard\n            JwtAuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1731534812101-init.ts\n            \n            class\n            Init1731534812101\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1731880851697-add-many-to-one.ts\n            \n            class\n            AddManyToOne1731880851697\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1731887989393-manytoone.ts\n            \n            class\n            Manytoone1731887989393\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/utils/encryption.ts\n            \n            variable\n            compareHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/utils/encryption.ts\n            \n            variable\n            generateHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/utils/encryption.ts\n            \n            variable\n            secretSaltHash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/soft-fields-for-entities.ts\n            \n            class\n            SoftFieldsForEntities\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'dependencies.html': {
      url: 'dependencies.html',
      title: 'package-dependencies - dependencies',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.685.0\n        \n            @aws-sdk/lib-storage : ^3.685.0\n        \n            @aws-sdk/s3-request-presigner : ^3.685.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            i18n-js : ^4.5.0\n        \n            nestjs-i18n : ^10.4.9\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            stripe : ^17.3.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/enumerations.html': {
      url: 'miscellaneous/enumerations.html',
      title: 'miscellaneous-enumerations - enumerations',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LOCALES_ENUM   (src/.../locales.enum.ts)\n                        \n                        \n                            ROLES_ENUM   (src/.../roles.enum.ts)\n                        \n                        \n                            THEME_ENUM   (src/.../theme.enum.ts)\n                        \n                        \n                            USER_GENDER_ENUM   (src/.../user.enum.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/enums/locales.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LOCALES_ENUM\n                    \n                \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : EN\n                            \n                        \n                        \n                            \n                                 PT\n                            \n                        \n                        \n                            \n                                Value : PT\n                            \n                        \n                        \n                            \n                                 ES\n                            \n                        \n                        \n                            \n                                Value : ES\n                            \n                        \n            \n        \n\n    src/enums/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ROLES_ENUM\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 PARTNER_OWNER\n                            \n                        \n                        \n                            \n                                Value : PARTNER_OWNER\n                            \n                        \n            \n        \n\n    src/enums/theme.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        THEME_ENUM\n                    \n                \n                        \n                            \n                                 DARK\n                            \n                        \n                        \n                            \n                                Value : DARK\n                            \n                        \n                        \n                            \n                                 LIGHT\n                            \n                        \n                        \n                            \n                                Value : LIGHT\n                            \n                        \n            \n        \n\n    src/apps/users/user.enum.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        USER_GENDER_ENUM\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/functions.html': {
      url: 'miscellaneous/functions.html',
      title: 'miscellaneous-functions - functions',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'index.html': {
      url: 'index.html',
      title: 'getting-started - index',
      body: '\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you\'d like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'modules.html': {
      url: 'modules.html',
      title: 'modules - modules',
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomI18nModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FollowersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PartnersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentGatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlansModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TeamsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'overview.html': {
      url: 'overview.html',
      title: 'overview - overview',
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CustomI18nModule\n\n\n\ncluster_CustomI18nModule_exports\n\n\n\ncluster_CustomI18nModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_FollowersModule\n\n\n\ncluster_FollowersModule_exports\n\n\n\ncluster_FollowersModule_providers\n\n\n\ncluster_PartnersModule\n\n\n\ncluster_PartnersModule_exports\n\n\n\ncluster_PartnersModule_providers\n\n\n\ncluster_PaymentGatewayModule\n\n\n\ncluster_PaymentGatewayModule_exports\n\n\n\ncluster_PaymentGatewayModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_TeamsModule\n\n\n\ncluster_TeamsModule_exports\n\n\n\ncluster_TeamsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCustomI18nModule\n\nCustomI18nModule\n\nAppModule -->\n\nCustomI18nModule->AppModule\n\n\n\n\n\nCustomI18nService \n\nCustomI18nService \n\nCustomI18nService  -->\n\nCustomI18nModule->CustomI18nService \n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFollowersModule\n\nFollowersModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nFollowersModule->UsersModule\n\n\n\nAppModule -->\n\nFollowersModule->AppModule\n\n\n\n\n\nFollowersService \n\nFollowersService \n\nFollowersService  -->\n\nFollowersModule->FollowersService \n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nPartnersModule\n\nPartnersModule\n\nAuthModule -->\n\nPartnersModule->AuthModule\n\n\n\nUsersModule -->\n\nPartnersModule->UsersModule\n\n\n\nAppModule -->\n\nPartnersModule->AppModule\n\n\n\n\n\nPartnersService \n\nPartnersService \n\nPartnersService  -->\n\nPartnersModule->PartnersService \n\n\n\n\n\nPaymentGatewayModule\n\nPaymentGatewayModule\n\nAppModule -->\n\nPaymentGatewayModule->AppModule\n\n\n\n\n\nPaymentGatewayService \n\nPaymentGatewayService \n\nPaymentGatewayService  -->\n\nPaymentGatewayModule->PaymentGatewayService \n\n\n\n\n\nPlansModule\n\nPlansModule\n\nAppModule -->\n\nPlansModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nReviewsModule\n\nReviewsModule\n\nAppModule -->\n\nReviewsModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTeamsModule\n\nTeamsModule\n\nPartnersModule -->\n\nTeamsModule->PartnersModule\n\n\n\nPartnersModule -->\n\nTeamsModule->PartnersModule\n\n\n\nAppModule -->\n\nTeamsModule->AppModule\n\n\n\n\n\nTeamsService \n\nTeamsService \n\nTeamsService  -->\n\nTeamsModule->TeamsService \n\n\n\n\n\nTransactionsModule\n\nTransactionsModule\n\nAppModule -->\n\nTransactionsModule->AppModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCustomI18nService\n\nCustomI18nService\n\nCustomI18nModule -->\n\nCustomI18nService->CustomI18nModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nFollowersService\n\nFollowersService\n\nFollowersModule -->\n\nFollowersService->FollowersModule\n\n\n\n\n\nPartnersService\n\nPartnersService\n\nPartnersModule -->\n\nPartnersService->PartnersModule\n\n\n\n\n\nPaymentGatewayFactory\n\nPaymentGatewayFactory\n\nPaymentGatewayModule -->\n\nPaymentGatewayFactory->PaymentGatewayModule\n\n\n\n\n\nPaymentGatewayService\n\nPaymentGatewayService\n\nPaymentGatewayModule -->\n\nPaymentGatewayService->PaymentGatewayModule\n\n\n\n\n\nStripePaymentGateway\n\nStripePaymentGateway\n\nPaymentGatewayModule -->\n\nStripePaymentGateway->PaymentGatewayModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nTeamsService\n\nTeamsService\n\nTeamsModule -->\n\nTeamsService->TeamsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'properties.html': {
      url: 'properties.html',
      title: 'package-properties - properties',
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    'miscellaneous/variables.html': {
      url: 'miscellaneous/variables.html',
      title: 'miscellaneous-variables - variables',
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compareHash   (src/.../encryption.ts)\n                        \n                        \n                            CurrentPartner   (src/.../current-partrner.decorator copy.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            FILE_SERVICE_PROVIDER   (src/.../file.constants.ts)\n                        \n                        \n                            generateHash   (src/.../encryption.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            PassRegex   (src/.../auth-pass.rules.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../role.decorator.ts)\n                        \n                        \n                            secretSaltHash   (src/.../encryption.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/encryption.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compareHash\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (secret: string, storedHash: string): boolean => {\n  const hash = generateHash(secret);\n  return hash === storedHash;\n}\n                    \n                \n\n            \n                \n                    Gera um hash atrave de um secret e um salt e compara\ncom o hash enviado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateHash\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (secret: string): string => {\n  return pbkdf2Sync(secret, secretSaltHash, 1000, 64, 'sha512').toString('hex');\n}\n                    \n                \n\n            \n                \n                    Gerar uma sequencia randomica de bytes em hexadecimal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretSaltHash\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.SECRET_SALT_HASH\n                    \n                \n\n\n        \n    \n\n    src/decorators/current-partrner.decorator copy.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentPartner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n\n  return request.current_partner;\n})\n                    \n                \n\n\n        \n    \n\n    src/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n\n  return request.current_user;\n})\n                    \n                \n\n\n        \n    \n\n    src/apps/files/file.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FILE_SERVICE_PROVIDER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'FILE_SERVICE_PROVIDER'\n                    \n                \n\n\n        \n    \n\n    src/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/apps/auth/auth-pass.rules.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PassRegex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  LOWERCASE: /^(?=.*[a-z])/,\n  NUMBER: /^(?=.*\\d)/,\n  SPECIAL_CHAR: /^(?=.*[!@#$%^&*()_+])/,\n  UPPERCASE: /^(?=.*[A-Z])/,\n  MIN_8: /^.{8,}$/,\n  MAX_16: /^.{0,16}$/,\n}\n                    \n                \n\n\n        \n    \n\n    src/decorators/role.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: ROLES_ENUM[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};
